#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
%Usado para dibujar las teclas
\tcbuselibrary{skins}


% Marco redondeado para poner teclas
% Necesita el módulo marcos coloreados y poner
% Un entorno de tipo Opciones de marco coloreado.
% Luego se usa poniendo \tecla{Nombre-de-tecla}
\newcommand{\tecla}{\tcbox}

% Corrige el problema del índice de figuras
% que aparece por defecto con el número
% pegado al texto sin ningún espacio
\makeatletter
\renewcommand*\l@figure{\@dottedtocline{1}{1.5em}{3em}} 
\makeatother


% esto hace que las páginas \part queden sin pie de página
\makeatletter
\renewcommand\part{%
  \if@openright
    \cleardoublepage
  \else
    \clearpage
  \fi
  \thispagestyle{empty}%
  \if@twocolumn
    \onecolumn
    \@tempswatrue
  \else
    \@tempswafalse
  \fi
  \null\vfil
  \secdef\@part\@spart}
\makeatother
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
tcolorbox
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package \usepackage[spanish, es-nolists]{babel}
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Manual de Freeplane"
\pdf_author "Luis Javier González Caballero"
\pdf_subject "Freeplane"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 0
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=blue, citecolor=blue"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\listings_params "defaultdialect=Java,showtabs=true"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Manual de Freeplane
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename Archivos/freeplane-icon.jpg

\end_inset


\end_layout

\begin_layout Author
Luis Javier González Caballero
\begin_inset Newline newline
\end_inset

kewapo@gmail.com
\end_layout

\begin_layout Left Header
\begin_inset Graphics
	filename Archivos/freeplane-icon.jpg
	lyxscale 12
	scale 12

\end_inset

 Freeplane
\end_layout

\begin_layout Color Box Setup

enhanced, tcbox raise base, size=small, halign=center, nobeforeafter, arc=0.4pt,
 frame style={left color=white, right color=gray}
\end_layout

\begin_layout New Color Box Type

\begin_inset Argument 2
status open

\begin_layout Plain Layout

cBoxA
\end_layout

\end_inset

interior style={left color=yellow!40!white, right color=yellow!60!orange},
 arc=0pt, width=2cm, drop fuzzy shadow=gray, fontupper=
\backslash
tiny, colframe=brown
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Part
Freeplane básico
\end_layout

\begin_layout Chapter
Mapas mentales
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
Un mapa 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Qué son
\end_layout

\end_inset


\end_layout

\end_inset

mental es un diagrama usado para representar palabras, ideas, tareas, lecturas,
 dibujos, u otros conceptos ligados y dispuestos radicalmente alrededor
 de una palabra clave o de una idea central.
 Son una forma lógica y creativa de tomar notas, organizar, asociar y expresar
 ideas, que consiste, literalmente, en cartografiar nuestras reflexiones
 sobre un tema.
 Los mapas mentales son herramientas muy útiles::
\end_layout

\begin_layout Itemize
Favorecen la producción de ideas.
\end_layout

\begin_layout Itemize
Mejora la productividad.
\end_layout

\begin_layout Itemize
Permite apreciar simultáneamente la visión global del problema así como
 sus detalles.
\end_layout

\begin_layout Itemize
Favorece la memorización.
\end_layout

\begin_layout Standard
En este documento vamos a presentar Freeplane, una aplicación para crear
 mapas mentales.
 Es multiplataforma, por lo cual funciona en Windows, Linux y Mac.
 No solo nos permiten dibujar mapas mentales.
 Además también tiene herramientas para visualizarlos: podemos plegar nodos,
 desplegarlos, hacer zoom, añadir notas y fórmulas a los nodos y muchas
 otras cosas que veremos en este manual.
\end_layout

\begin_layout Standard
Los elementos constructivos básicos son los nodos y los enlaces entre ellos.
 Podemos ver el área de trabajo de Freeplane en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 La web donde podemos encontrar esta aplicación es www.freeplane.org desde
 donde podremos descargarla.
\end_layout

\begin_layout Section
La sociedad de la información
\end_layout

\begin_layout Standard
La 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Exceso de información
\end_layout

\end_inset


\end_layout

\end_inset

 sociedad actual es considerada como sociedad de la información.
 Tenemos acceso a ingentes cantidades de datos y conceptos que, o bien necesitar
emos integrar en la estructura conceptual de nuestro cerebro o analizar
 las opciones que se nos presentan.
 Esta exposición constante a nuevos datos se da en todos los estadios de
 desarrollo de la persona, desde la escuela hasta el mundo de la empresa.
\end_layout

\begin_layout Itemize
En el mundo académico confiamos en que las capacidades de aprendizaje de
 nuestro cerebro nos sirvan para salir airosos.
\end_layout

\begin_layout Itemize
En el mundo empresarial confiamos tanto en nuestra capacidad de análisis
 como en nuestra intuición para realizar un análisis correcto.
 A menudo efectuamos listas, planes y programaciones para ayudarnos.
\end_layout

\begin_layout Standard
Sin embargo contamos con herramientas más potentes que pueden facilitarnos
 estas tareas:
\end_layout

\begin_layout Description
mapas
\begin_inset space ~
\end_inset

conceptuales: Diagrama en el cual anotamos en cajas los conceptos que nos
 interesan, indicando mediante líneas que los enlazan las relaciones existentes
 entre ellos.
 A diferencia de los mapas mentales no se distribuyen entorno a una idea
 central.
 Tienen una forma de red conceptual y se utilizan en la comprensión de problemas
 complejos.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa conceptual
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_conceptual.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
mapas
\begin_inset space ~
\end_inset

mentales: Anotamos las distintas ideas entorno a una idea central.
 Facilita la generación de ideas y sirve para aclarar problemas complejos.
 También simplifica la memorización y aprendizaje significativo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa mental
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_mental.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
El cerebro
\end_layout

\begin_layout Standard
El cerebro de las personas se estructura en capas.
 En la más externa tenemos las distintas capacidades conscientes.
 Con ella podemos dirigir nuestro pensamiento y utilizar sus habilidades
 analíticas, visuales, auditivas, etc.
 en nuestro beneficio de forma consciente.
 Sin embargo hay capas internas a las que es más complicado acceder.
 Conforman nuestra intuición y es donde el cerebro envía toda la información
 
\begin_inset Quotes eld
\end_inset

vieja
\begin_inset Quotes erd
\end_inset

 para evitar saturar a la capa externa.
 A menudo este acceso lo obtenemos en forma de ideas repentinas ó intuiciones,
 asociaciones de ideas o simplemente sensaciones o 
\begin_inset Quotes eld
\end_inset

corazonadas
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Si bien podemos usar conscientemente nuestras habilidades analíticas, visuales,
 etc, no podemos decir lo mismo de las habilidades que residen en las zonas
 interiores.
 Nuestro cerebro funciona mediante asociaciones automáticas: al pensar en
 una idea el cerebro la encadena con nuevos conceptos.
 Para potenciar nuestra capacidad mental y nuestra creatividad podemos servirnos
 de los mapas mentales cuya eficacia se basa en el pensamiento radiante:
 el cerebro genera nuevas ideas a partir de una idea principal básica.
\end_layout

\begin_layout Standard
De esta forma un mapa mental es una herramienta gráfica que nos da acceso
 al enorme potencial de nuestro cerebro.
 Su eficacia se basa en que funciona de forma análoga a la de nuestra mente:
 del mismo modo que la mente funciona describiendo círculos alrededor de
 una idea central, en un mapa mental colocamos la idea sobre la que queremos
 trabajar en el centro y añadimos nuevas ideas a medida que van surgiendo
 situándolas alrededor de esa idea principal.
 Se desarrolla desde el centro y nos permite tener una visión global y organizad
a de la información.
 Es la forma más sencilla de gestionar el flujo de información que genera
 nuestro cerebro.
\end_layout

\begin_layout Section
Procesando la información
\end_layout

\begin_layout Standard
La antigua manera de procesar información linealmente de izquierda a derecha
 crea numerosos problemas cuando se trata de organizar todos los datos que
 recibimos.
 Necesitamos un modo más eficaz para representar todo ese torrente de ideas.
 No sólo en párrafos sucesivos de texto escrito sino también englobando
 elementos cognitivos de ambos hemisferios cerebrales.
 Los mapas mentales nos permiten 
\begin_inset Quotes eld
\end_inset

Ver nuestros pensamientos
\begin_inset Quotes erd
\end_inset

.
 Podemos utilizarlos para:
\end_layout

\begin_layout Itemize
Organizar la información.
\end_layout

\begin_layout Itemize
Separar lo trivial de lo importante.
\end_layout

\begin_layout Itemize
Recopilación sencilla y flexible de datos.
\end_layout

\begin_layout Itemize
Estructurar hechos.
\end_layout

\begin_layout Itemize
Aclarar ideas.
\end_layout

\begin_layout Itemize
Facilitar la comprensión de temas complejos.
\end_layout

\begin_layout Itemize
Retención natural y práctica de las ideas.
\end_layout

\begin_layout Itemize
Planificación estratégica.
\end_layout

\begin_layout Itemize
Comunicaciones efectivas.
\end_layout

\begin_layout Section
Elaboración de los mapas mentales
\end_layout

\begin_layout Standard
Para 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Elaboración de mapas mentales
\end_layout

\end_inset


\end_layout

\end_inset

 la construcción de un mapa mental partiremos de una superficie blanca sin
 líneas ni marcas.
 Lo primero y más importante a la hora de su elaboración es tener claro
 su propósito.
 Para ello definiremos claramente la idea principal.
 Estos son los pasos para su construcción:
\end_layout

\begin_layout Enumerate
Identificar la idea principal.
 Anotarla en el centro del mapa.
\end_layout

\begin_layout Enumerate
En torno a esta idea central ir anotando las ideas relacionadas con el tema.
 Escribir estos subtemas alrededor de la idea central.
 Tener en cuenta que pondremos cada idea en una rama diferente del mapa.
\end_layout

\begin_layout Enumerate
Añadir colores, imágenes y símbolos que identifiquen a todas estas ideas.
 Esto ayudará a nuestro cerebro en la elaboración del mapa.
\end_layout

\begin_layout Enumerate
Desarrollar los subtemas ramificando las ideas que parten del centro del
 mapa.
 Hay que simplificar al máximo el contenido del mapa.
\end_layout

\begin_layout Standard
Hay varias reglas que nos pueden ayudar:
\end_layout

\begin_layout Enumerate
Empieza en el centro de la hoja en blanco.
 De esa forma las ideas podrán moverse en todas direcciones.
\end_layout

\begin_layout Enumerate
Dibuja en el centro una imagen que simbolice la idea principal.
 Así establecerás un núcleo de atención.
\end_layout

\begin_layout Enumerate
Utiliza muchos colores.
 Los colores despiertan tu creatividad.
\end_layout

\begin_layout Enumerate
Partiendo de la idea principal traza ramas de distintos colores hacia el
 exterior con las palabras clave más importantes.
 Haz las líneas más finas a medida que te alejas del centro.
\end_layout

\begin_layout Enumerate
Traza líneas curvas en lugar de rectas.
 Son menos aburridas.
\end_layout

\begin_layout Enumerate
Trata de utilizar una o dos palabras clave por cada línea.
 Es más fácil que recordar una frase completa.
\end_layout

\begin_layout Enumerate
Utiliza todas las imágenes que puedas.
\end_layout

\begin_layout Standard
Aunque podemos construirlos utilizando papel, lápices y pinturas el uso
 de aplicaciones específicas añaden rapidez y versatilidad en su realización.
 Este tipo de software nos permite de forma sencilla no solo 
\begin_inset Quotes eld
\end_inset

pintar
\begin_inset Quotes erd
\end_inset

 los conceptos y su relación, sino también modificar su estructura cambiando
 la ubicación de ramas y nodos según nos apetezca.
 Además como tenemos acceso a gran cantidad de iconos, imágenes e ilustraciones
 de forma muy sencilla su uso en nuestro software favorito de mapas mentales
 potencia aún más su utilidad.
 Freeplane pone a nuestro alcance una enorme cantidad de posibilidades que
 analizaremos en este manual.
\end_layout

\begin_layout Section
Ejemplos
\end_layout

\begin_layout Standard
Vamos a ver qué podemos esperar.
 Freeplane es una aplicación muy versátil.
 Puede crear mapas mentales de estilos muy distintos.
 Desde los aconsejados por Tony Buzan con colores e imágenes hasta uno más
 sobrio con líneas rectas y sin adornos.
 A continuación se muestran algunas ideas.
\end_layout

\begin_layout Subsection
Mapas al estilo de Tony Buzan
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa al estilo de Tony Buzan
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_modelo1.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Mapa de Gestión
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa usado para la gestión
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_modelo2.png
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Estos mapas utilizan líneas horizontales y nodos en burbuja.
 Se le pueden añadir ciertas imágenes.
 Asimismo, suelen utilizarse nodos de anchos uniformes (igual valor en máximo
 y en mínimo).
 En las figuras aparecen dos ejemplos de este tipo de mapas
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa para gestionar una agenda
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Agenda.png
	lyxscale 25

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Mapa circular
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa circular
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_modelo3.png
	lyxscale 50
	scale 90

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si damos a los nodos forma oval y marcamos uniforme podemos conseguir el
 efecto que aparece en la imagen.
\end_layout

\begin_layout Standard
Utilizando correctamente todos los elementos antes descritos tenemos una
 herramienta muy versátil.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapa: ¿Quién soy?
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Yo.png
	lyxscale 25
	scale 66

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Comenzando con Freeplane
\end_layout

\begin_layout Section
Instalación
\end_layout

\begin_layout Standard
Puedes
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Instalación
\end_layout

\end_inset


\end_layout

\end_inset

 encontrar Freeplane en https://www.freeplane.org.
 Sólo tienes que acceder a este sitio y descargarla pinchando en los enlaces
 que aparecen allí.
 Como verás, se distribuye con licencia 
\begin_inset Quotes eld
\end_inset

GNU Free Documentation License
\begin_inset Quotes erd
\end_inset

 que permite su uso gratuito y libre.
 Hay versiones para Windows, Linux y Mac lo que la convierte en una de las
 aplicaciones para mapas mentales más versátiles.
 Para instalarla únicamente tienes que lanzar el ejecutable y seguir los
 pasos que te van apareciendo.
 Es una tarea sencilla.
 Únicamente asegúrate de tener actualizada tu versión de Java.
 
\end_layout

\begin_layout Section
La ventana de la aplicación
\end_layout

\begin_layout Standard
Cuando arrancamos Freeplane nos aparece el área de trabajo con un mapa contenien
do únicamente el nodo raíz.
 Pinchando la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INSERT}
\end_layout

\end_inset

 insert añadiremos nodos a este primero.
 Podemos continuar moviéndonos por los nuevos nodos con las flechas de desplazam
iento y añadiendo otros nuevos.
 Otras características de freeplane es que podemos hacer zoom a los mapas
 o buscar un concepto entre todos los mapas pinchando el icono del lápiz
 de la barra superior, que es el penúltimo.
 Una vez tenemos la estructura del mapa podremos darle formato a cada nodo
 y añadir iconos, figuras y otros elementos.
\end_layout

\begin_layout Standard
Las partes de la ventana de freeplane son las siguientes (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

):
\end_layout

\begin_layout Itemize
Barra de menús en la parte superior (1).
 
\end_layout

\begin_layout Itemize
Barra de herramientas con iconos para guardar, abrir, estilo del nodo, fuente...
 (2).
\end_layout

\begin_layout Itemize
Barra con los mapas abiertos (3).
\end_layout

\begin_layout Itemize
Espacio central para dibujar el mapa (4).
\end_layout

\begin_layout Itemize
Barra de iconos en el lateral izquierdo (5).
\end_layout

\begin_layout Itemize
\noindent
Panel de formatos, a la derecha (6).
\end_layout

\begin_layout Itemize
Panel de notas que podemos posicionarlo de forma flotante, a la derecha
 o en la parte inferior (7).
\end_layout

\begin_layout Itemize
Flecha que nos sirve para mostrar u ocultar el panel de formato lateral
 (8).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Pantalla-de-Freeplane"

\end_inset

Pantalla de Freeplane
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Freeplane_ventana.png
	lyxscale 75
	scale 62
	rotateAngle 90

\end_inset


\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Así es Freeplane
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Creando el primer mapa
\end_layout

\begin_layout Standard
Cuando 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Primer paso
\end_layout

\end_inset


\end_layout

\end_inset

lanzamos la aplicación nos aparece con un mapa vacío que contiene únicamente
 el nodo raíz seleccionado.
 Vamos a cambiarle el texto.
 Para ello únicamente tenemos que escribir lo que deseamos, en nuestro caso
 
\begin_inset Quotes eld
\end_inset

Planificación del proyecto
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Primer paso
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_f1.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A partir de este primer nodo podemos comenzar a crear nuestro mapa
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Segundo paso
\end_layout

\end_inset


\end_layout

\end_inset

.
 Cada vez que pulsemos la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INSERT}
\end_layout

\end_inset

 se añadirá una nueva rama.
 Se añaden alternativamente a la derecha y a la izquierda.
 Pulsando esta tecla 5 veces crearemos las ramas que necesitamos.
 Las seleccionaremos una a una con el ratón cambiando el texto.
\end_layout

\begin_layout Standard
Luego añadiremos algunos iconos a las ramas.
 Para ello mostraremos la barra de iconos que es elemento (5) en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Si no aparece visible podéis mostrarla pinchando en Ver / Controles / (Des)acti
var barra de herramientas izquierda.
 Ahora ya podremos añadir cuantos iconos queramos a los nodos.
 Para ello pincharemos en el nodo que deseemos y luego en el icono elegido
 que aparecerá inmediatamente dibujado a la izquierda del texto.
 
\end_layout

\begin_layout Standard
Otra cosa que podemos hacer es cambiar el color del nodo y el tipo de borde
 con el panel de formato de la derecha (elemento 6 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Las opciones que tendremos que cambiar son las del apartado colores del
 nodo, forma del nodo y borde del nodo en dicho panel.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Segundo paso
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_f2.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lo siguiente es crear las tareas del proyecto añadiendo 4 nurvos nodos a
 partir de 
\begin_inset Quotes eld
\end_inset

Tareas del proyecto
\begin_inset Quotes erd
\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Tercer paso
\end_layout

\end_inset


\end_layout

\end_inset

.
 En estas tareas crearemos iconos de progreso pinchando en el menú Editar
 / Iconos / Progreso.
 La tarea 1 contiene un progreso aumentado mientras que el resto un progreso
 normal que añadiremos pinchando en Editar / Iconos / progreso / aumentar
 progreso.
 Además, hay un nodo sumario en las tareas 2 a 4 que se crea seleccionándolas
 y pinchando en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{ALT}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{MAYUSCULAS}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INSERT}
\end_layout

\end_inset

 o con el menú Editar / Nuevo nodo / Nuevo nodo principal (nodos seleccionados).
\end_layout

\begin_layout Standard
En el nodo gente añadiremos a nuestros colaboradores con iconos en sus nodos.
 Además.
 hemos copiado las tareas a las que se encargarán pegándolas a partir de
 ellos como clones: (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{C}
\end_layout

\end_inset

) para copiar la tarea y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{D}
\end_layout

\end_inset

 para pegarla como clon).
 Los nodos clones cambian simultáneamente al modificar uno de ellos.
\end_layout

\begin_layout Standard
El resto son nodos normales que hemos añadido pinchando en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INSERT}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Una vez finalizado obtenemos la siguiente fase de nuestro mapa en la que
 podemos ver:
\end_layout

\begin_layout Itemize
Hay algunos iconos, como en los nodos hijo de la raíz.
\end_layout

\begin_layout Itemize
El tipo de los nodos raíz y sus hijos es 
\begin_inset Quotes eld
\end_inset

burbuja
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Hemos cambiado sus colores
\end_layout

\begin_layout Itemize
Hemos añadido unos iconos de progreso normales en las tareas 2, 3 y 4 (Editar
 / Iconos / Progreso / Subir nivel)
\end_layout

\begin_layout Itemize
Hemos añadido un icono de progreso mayor en la Tarea 1 (Editar / Iconos
 / Progreso / Progreso aumentado 10%)
\end_layout

\begin_layout Itemize
Hemos subido el progreso de la Tarea 2 un par de veces haciendo doble click
 sobre el círculo de progreso (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

 + doble click para bajar progreso).
\end_layout

\begin_layout Itemize
En cada una de las personas hemos añadido clones a las tareas de las que
 se encargan.
 De esta manera si cambiamos algo en la Tarea 1 de Carolina se actualiza
 automáticamente en las Tareas del proyecto.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tercer paso
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_f3.png
	lyxscale 60
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Uso del mapa
\end_layout

\begin_layout Standard
Ya
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Guardando el mapa
\end_layout

\end_inset


\end_layout

\end_inset

 tenemos la versión inicial de nuestro mapa.
 Pinchamos en Archivo / Guardar para evitar perder el trabajo.
\end_layout

\begin_layout Standard
Ahora 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Añadiendo nodos
\end_layout

\end_inset


\end_layout

\end_inset

podremos continuar rellenandolo.
 Seguramente tendremos que añadir nuevas tareas e incluso podremos contratar
 a un nuevo colaborador para realizarlas.
 Esto, como hemos visto, lo conseguimos pinchando en el nodo y luego en
 la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INSERT}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
También
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Icono de progreso
\end_layout

\end_inset


\end_layout

\end_inset

 podemos aumentar el porcentaje de finalización de cada tarea haciendo doble
 click encima del icono de progreso expandido.
\end_layout

\begin_layout Standard
Otra
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Mover nodos
\end_layout

\end_inset


\end_layout

\end_inset

 cosa que podemos hacer es mover un nodo.
 Por ejemplo, para cambiar una tarea de persona sólo tenemos que pinchar
 encima y arrastrarla hacia la persona elegida.
 También podemos colocar los nodos hijo de 
\begin_inset Quotes eld
\end_inset

Elementos para ordenar
\begin_inset Quotes erd
\end_inset

 en sus ubicaciones definitivas de la misma forma: arrastrándolas al nodo
 que corresponda.
 A la hora de soltar el nodo que queremos mover en su nueva ubicacion, Freeplane
 nos da dos opciones: si lo soltamos en el borde esterno del nodo lo pondremos
 como hijo suyo.
 sin embargo, si lo hacemos en su borde superior será su hermano y se colocará
 encima de él.
 
\end_layout

\begin_layout Standard
Si
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Zoom
\end_layout

\end_inset


\end_layout

\end_inset

 vemos que el mapa es muy pequeño podemos hacer zoom con el desplegable
 de la barra superior de herramientas ó con la ruleta del ratón si mantenemos
 pulsada la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Si
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Expadir 
\begin_inset Newline newline
\end_inset

Colapsar
\end_layout

\end_inset


\end_layout

\end_inset

 alguna de los nodos tiene una rama demasiado extensa podremos colapsarla
 .
 Para ello observaremos los pequeños circulitos que aparecen al final del
 nodo al pasar con el ratón sobre él.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-expandido"
plural "false"
caps "false"
noprefix "false"

\end_inset

 vemos una rama extensa expandida con el circulito para poder colapsarla
 que ha aparecido al poner el ratón sobre él.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mapa-expandido"

\end_inset

Mapa expandido
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Espandir.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pinchando sobre ese nodo esa rama se cerrará, apareciendo ahora el mapa
 de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-colapsado"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Vemos que en una rama cerrada aparece continuamente el círculito que nos
 servirá para abrirla sin necesidad de tener que poner el ratón encima del
 nodo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mapa-colapsado"

\end_inset

Mapa colapsado
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Colapsar.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Nueva vista de mapa
\end_layout

\end_inset


\end_layout

\end_inset

aún así es demasiado extenso podemos abrir otra vista del mismo mapa con
 el menú Ver / Nueva Vista del mapa.
 Si arrastramos ahora la nueva pesaña que ha aparecido a uno de los bordes
 podremos ver varias zonas del mapa simultaneamente.
\end_layout

\begin_layout Standard
Y si queremos presentar el proyecto a nuestros colaboradores podremos poner
 el mapa en pantalla completa con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{F11}
\end_layout

\end_inset

 y usar las opciones de presentación básicas accesibles en el menú Ver /
 Ver configuración y luego las opciones Spootlight y Centrar el nodo.
\end_layout

\begin_layout Standard
Cuando 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Guardando el mapa
\end_layout

\end_inset


\end_layout

\end_inset

hayamos terminado ya podemos guardar el mapa mediante el menú Archivo, Guardar
\end_layout

\begin_layout Standard
En resumen, podemos realizar las siguientes actividades:
\end_layout

\begin_layout Itemize
Seleccionar nodos: Freeplane está configurado para que si nos detenemos
 brevemente en un nodo la aplicación lo selecciona.
 Este comportamiento podemos cambiarlo en las Preferencias, en la pestaña
 de comportamiento si modificamos la opción 
\begin_inset Quotes eld
\end_inset

Método de selección
\begin_inset Quotes erd
\end_inset

.
 También podemos elegir múltiples nodos haciendo click encima de ellos mientras
 tenemos pulsada la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Expandir y colapsar nodos.
 Para ello pincharemos en unos circulitos que hay al final de cada nodo.
 (ver figuras 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-expandido"
plural "false"
caps "false"
noprefix "false"

\end_inset

 y 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-colapsado"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Itemize
Buscar un nodo que contenga una cadena concreta.
 Para ello pincharemos en Editar / Buscar / Buscar.
\end_layout

\begin_layout Itemize
Ver el mapa en una escala determinada.
 Podemos hacer zoom con la primera lista desplegable que aparece en la barra
 de herramientas, elemento (2) en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Itemize
Poner Freeplane en pantalla completa pulsando la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{F11}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Ver varios mapas a la vez.
 Para ello moveremos la pestaña del mapas que queramos a uno de los bordes
 de la aplicación.
\end_layout

\begin_layout Itemize
Ver secciones distintas del mismo mapa en dos ventanas de Freeplane.
 Podemos abrir otra pestaña con el mismo mapa pinchando en Ver / Nueva vista
 de mapa y luego mover dicha pestaña a uno de los bordes del area de trabajo
 de Freeplane.
\end_layout

\begin_layout Itemize
Ver un esquema del mapa si vamos al menú Ver / Ver configuración / Vista
 en esquema.
\end_layout

\begin_layout Section
Elementos de un mapa
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Elementos-mapa"

\end_inset

Elementos de un mapa
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/mapa_elementos.png
	lyxscale 75
	scale 65

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un mapa 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Elementos de un mapa
\end_layout

\end_inset


\end_layout

\end_inset

no solo está formado por las ideas que vamos añadiendo (nodos) y por los
 enlaces a estas ideas.
 Freeplane dispone de muchos más elementos que aparecen en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

 marcados con flechas azules.
 Son los siguientes:
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

principal: Es el nodo raíz y está situado en el centro.
 En la figura anterior es el nodo 
\begin_inset Quotes eld
\end_inset

Planificación del proyecto
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description
Nodos
\begin_inset space ~
\end_inset

hijos: Parten de un nodo situado ya en el mapa.
 Podemos expandirlos y colapsarlos.
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

sumario: Agrupa varios nodos hermanos y sirve para mostrar un resumen.
 En el mapa anterior, es el nodo 
\begin_inset Quotes eld
\end_inset

Pendiente Juan
\begin_inset Quotes erd
\end_inset

, a la derecha de las tareas.
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

clon: Un nodo que aparece en varias ramas del mapa.
 Si lo modificamos en una de ellas queda modificado en las demás.
 Se crean copiando el nodo y pegándolo mediante la combinación de teclas
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{D}
\end_layout

\end_inset

 ó pinchando en el menú Editar / Pegar clon.
 Podemos identificarlo porque al seleccionarlo con el ratón aparece un pequeño
 cuadro a su izquierda.
 Son los nodos Tarea1 a Tarea 4.
 Vemos en los nodos hijo de 
\begin_inset Quotes eld
\end_inset

Gente
\begin_inset Quotes erd
\end_inset

 esos cuadritos, a la izquierda de los iconos de progreso de las tareas.
 
\end_layout

\begin_layout Description
Bordes: Líneas que unen el nodo padre con los nodos hijo.
 
\end_layout

\begin_layout Description
Enlaces: Apuntan a información que puede ser del mapa, de otros mapas ó
 externa a freeplane.
 Al pinchar sobre ellos nos remite a dicha información a la que se refieren.
 En la figura aparece como una pequeña flechita a la izquierda del nodo
 
\begin_inset Quotes eld
\end_inset

Documentos
\begin_inset Quotes erd
\end_inset

, después del icono.
\end_layout

\begin_layout Description
Conectores: Líneas de unión que se ponen entre nodos arbitrarios del mapa.
\end_layout

\begin_layout Description
Atributos: Elementos bajo los nodos que contienen datos numéricos ó textuales.
 Son propiedades que podemos añadir al nodo si pinchamos con el botón derecho
 del ratón y elegimos Editar atributos.
 Están compuestos por un nombre y un valor.
 En el nodo Contabilidad son 
\begin_inset Quotes eld
\end_inset

Coste
\begin_inset Quotes erd
\end_inset

 e 
\begin_inset Quotes eld
\end_inset

Impuestos
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description
Iconos: Hay iconos normales que podemos añadir con la barra de iconos de
 la izquierda (Freeplane viene con un juego estándar de iconos que se puede
 ampliar) ó iconos de progreso.
\end_layout

\begin_layout Description
Imágenes: También podemos añadir imágenes en los nodos.
\end_layout

\begin_layout Section
Elementos de un nodo
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Elementos-nodos"

\end_inset

Elementos de los nodos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Nodos_elementos.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hasta 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Elementos de un nodo
\end_layout

\end_inset


\end_layout

\end_inset

ahora hemos visto a cada una de las ideas como un nodo que contiene un texto.
 Sin embargo un nodo es mucho más.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-nodos"
plural "false"
caps "false"
noprefix "false"

\end_inset

 se ven los elementos básicos de los nodos.:
\end_layout

\begin_layout Description
Texto
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

nodo: Es el elemento básico y fundamental del nodo y el que vemos en el
 mapa.
 Habitualmente es texto simple pero podemos añadir código HTML si lo editamos
 pulsando 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{ALT}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INTRO}
\end_layout

\end_inset

.
 Aparecerá un editor con dos pestañas abajo: Vista de disposición (para
 incluir texto normal) y Vista de código HTML para incluir más formatos.
\end_layout

\begin_layout Description
Detalles
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

nodo: Texto, figuras y otros elementos que aparecen en el nodo.
 También podemos añadir elementos HTML.
\end_layout

\begin_layout Description
Iconos: Iconos que añadimos al nodo desde la barra lateral.
\end_layout

\begin_layout Description
Nota: Normalmente un nodo consta de un texto corto.
 Si deseamos añadir explicaciones extensas tendremos que añadir una nota
 al nodo.
 Podemos mostrar la ventana de notas si pinchamos con el botón dercho en
 el fondo del mapa y elegimos del menú Mostrar/Esconder ventana de notas.
 Sólo se mostrará si activamos el panel de notas o si ponemos el cursor
 sobre el nodo.
\end_layout

\begin_layout Description
Atributos: propiedades que añadimos bajo los detalles del nodo.
 
\end_layout

\begin_layout Description
Enlaces: Enlaces que se ponen en un nodo y que apuntan o bien a otros nodos
 del mapa o a recursos externos, archivos o páginas web
\end_layout

\begin_layout Chapter
Personalizando nuestro mapa
\end_layout

\begin_layout Section
El panel de formato
\end_layout

\begin_layout Standard
El panel 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
El panel de formato
\end_layout

\end_inset


\end_layout

\end_inset

lateral que aparece en la parte derecha de Freeplane nos va a servir para
 cambiar el aspecto del mapa.
 Aparece al pulsar las teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{ALT}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{P}
\end_layout

\end_inset

 ó pinchando en la pequeña flecha del borde derecho (Es el elemento (6)
 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

) y está dividido en secciones:
\end_layout

\begin_layout Itemize
Estilo del nodo.
 Veremos los estilos más adelante.
\end_layout

\begin_layout Itemize
Colores del nodo.
 Podemos modificar el color del texto y del fondo del nodo .
\end_layout

\begin_layout Itemize
Texto del nodo.
 Tipo de nodo.
 Normalmente es Estandar pero como veremos más adelante un nodo puede contener
 una fórmula, código latex o un numero con o sin decimales.
\end_layout

\begin_layout Itemize
Forma del nodo.
 Aparte de la habitual, la forma del nodo puede ser ovalada, rectangular,
 hexagonal...
\end_layout

\begin_layout Itemize
Borde del nodo.
 Anchura, color y tipo de línea del nodo
\end_layout

\begin_layout Itemize
Fuente del nodo.
 Tipo de letra, tamaño, cursiva, negrita...
\end_layout

\begin_layout Itemize
Iconos.
 Tamaño de los iconos.
\end_layout

\begin_layout Itemize
Nubes.
 Forma y color de la nube (ver más adelante).
\end_layout

\begin_layout Section
Modificando el texto del nodo
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Tipo y tamaño de la letra, negrita, cursiva, tachado
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Panel_fuente"

\end_inset

Modificando el texto del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Panel_fuente.png

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A la hora de personalizar el mapa es importante no solo tener visible la
 barra superior que aparece bajo los menús sino también el panel de formato
 que aparece a la derecha que es el que usaremos casi siempre.
 Dentro de ese panel hay una sección, 
\begin_inset Quotes qld
\end_inset

Fuente del nodo
\begin_inset Quotes erd
\end_inset

 que vemos en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Panel_fuente"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Como vemos podemos cambiar la fuente, el tamaño del texto y ponerlo en
 negrita o cursiva aparte de centrarlo en el nodo o alinearlo a izquierda
 o derecha.
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Tipo de nodo: texto normal, fórmula, número de decimales, forma de la fecha...
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Modificando-el-texto"

\end_inset

Modificando el texto del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Panel_Texto.png

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A medida que vayamos construyendo más mapas tendremos necesidad de representar
 no solo texto sino también números o incluso añadir fechas.
 Aquí es donde interviene la sección 
\begin_inset Quotes erd
\end_inset

Texto del nodo
\begin_inset Quotes erd
\end_inset

 del panel lateral (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Modificando-el-texto"
plural "false"
caps "false"
noprefix "false"

\end_inset

) donde escogeremos el formato del número o de la fecha en el desplegable
 
\begin_inset Quotes eld
\end_inset

Formato
\begin_inset Quotes erd
\end_inset

.
 Alguna de las opciones más usadas son:
\end_layout

\begin_layout Itemize
Texto: 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Formatos: texto, numéricos y de fecha
\end_layout

\end_inset


\end_layout

\end_inset

el contenido del nodo se muestra como texto normal
\end_layout

\begin_layout Itemize
#0.####: Es un número decimal pero se mostrarán sólo 4 decimales (se redondeará).
\end_layout

\begin_layout Itemize
#.00: Número decimal del que se redondeará a 2 decimales
\end_layout

\begin_layout Itemize
#: Sólo se mostrará la parte entera.
\end_layout

\begin_layout Itemize
#.##%: Es un porcentaje.
 Se mostrará el número multiplicado por 100.
\end_layout

\begin_layout Itemize
d/MM/yy: Es una fecha.
 Se mostrará el día, mes y año como números separados por la barra inclinada.
\end_layout

\begin_layout Itemize
dd-MMM-yyyy: Con este formato el més se mostrará como las tres primeras
 letras de su nombre.
\end_layout

\begin_layout Itemize
HH:mm: Es una hora y se mostrará separada de los minutos con el símbolo
 de los dos puntos.
\end_layout

\begin_layout Standard
Además, en esa misma sección podemos marcar la casilla de numeracion del
 nodo.
 Todos los nodos que dependen del mismo padre serán numerados de forma secuencia
l.
\end_layout

\begin_layout Section
Aspecto de los nodos
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Forma y ancho del nodo
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Panel_forma"

\end_inset

Modificando la forma del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Panel_Forma.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pasamos ahora a modificar el aspecto que tienen los nodos.
 Si miramos el apartado 
\begin_inset Quotes eld
\end_inset

Forma del nodo
\begin_inset Quotes erd
\end_inset

 que aparece reproducido en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Panel_forma"
plural "false"
caps "false"
noprefix "false"

\end_inset

 vemos que tenemos opción de modificar la forma del nodo así como sus márgenes.
\end_layout

\begin_layout Standard
También aquí indicaremos a freeplane qué ancho mínimo y máximo tiene el
 nodo.
 Esto nos va a servir para obligar a los nodos del mapa sean del mismo ancho.
 Otra opción importante es indicar a Freeplane qué espacio queremos que
 haya entre los nodos hermanos (huevo en hijo vertical).
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tipos-de-nodos"
plural "false"
caps "false"
noprefix "false"

\end_inset

 aparecen todas las formas que podemos dar a los nodos:
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Tipos-de-nodos"

\end_inset

Formas disponibles para los nodos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Formato_nodos.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Bifurcación: 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Formas de los nodos
\end_layout

\end_inset


\end_layout

\end_inset

Es la habitual.
 Consiste únicamente en una línea debajo del nodo.
\end_layout

\begin_layout Description
Burbuja: Se trata de un recuadro con los bordes redondeados.
\end_layout

\begin_layout Description
Rectángulo: Damos al nodo forma rectangular.
 Se convierte en un cuadrado marcando más abajo la opción de 
\begin_inset Quotes eld
\end_inset

Uniforme
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description
Oval: Forma ovalada.
 Puede convertirse en un círculo marcando más abajo la opción de 
\begin_inset Quotes eld
\end_inset

Uniforme
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description
Wide
\begin_inset space ~
\end_inset

hexagonal: Hexágono apoyado en una de sus caras.
\end_layout

\begin_layout Description
Narrow
\begin_inset space ~
\end_inset

hexagonal: Hexágono apoyado en uno de sus vértices.
\end_layout

\begin_layout Standard
Si marcamos 
\begin_inset Quotes eld
\end_inset

Uniform
\begin_inset Quotes erd
\end_inset

 convertimos a nuestra forma en una forma regular (todos los lados iguales).
\end_layout

\begin_layout Standard
Justo debajo de la forma del nodo hay otra sección interesante, 
\begin_inset Quotes eld
\end_inset

Borde del nodo
\begin_inset Quotes erd
\end_inset

 (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Panel_borde_nodo"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Se refiere a las líneas utilizadas para dibujar la forma de los nodos.
 Las más importantes son:
\end_layout

\begin_layout Itemize
Grosor de la línea
\end_layout

\begin_layout Itemize
Tipo de línea: punteada, con rayas, contínua...
\end_layout

\begin_layout Itemize
Color del borde del nodo
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Grosor, color y tipo de línea para los bordes
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Panel_borde_nodo"

\end_inset

Opciones de los bordes
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Panel_borde_nodo.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Mucho cuidado de no confundir el borde del nodo, que es la línea que sirve
 para dibujar la forma del nodo con el borde que une un nodo padre con sus
 nodos hijos.
 La primera se cambia en la seccion 
\begin_inset Quotes eld
\end_inset

Borde del nodo
\begin_inset Quotes erd
\end_inset

 y la segunda en la sección 
\begin_inset Quotes eld
\end_inset

Borde
\begin_inset Quotes erd
\end_inset

.
 Podemos tener un nodo ovalado con la línea punteada pero cuya línea de
 unión con sus nodos hijos sea continua.
 Además, el óvalo del nodo podría ser azul y la línea de unión con sus nodos
 hijos roja.
\end_layout

\begin_layout Section
Iconos
\end_layout

\begin_layout Standard
En ese apartado modificamos el tamaño con el que se dibujará el icono en
 cada nodo.
 Únicamente contiene una propiedad: 
\begin_inset Quotes eld
\end_inset

Tamaño del icono
\begin_inset Quotes erd
\end_inset

 con el que modificaremos el tamaño con el que se dibujará el icono del
 nodo.
\end_layout

\begin_layout Section
Nubes
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Forma y color de las nubes
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Formato_nubes.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Tipos-de-nubes"

\end_inset

Tipos de nubes
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La última sección del panel se refiere a las nubes cuyo aspecto vemos en
 la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tipos-de-nubes"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Son marcos de diferentes formas alrededor de un grupo de nodos.
 Dichos marcos pueden ser rectangulares pero también de formas irregulares
 rectas o redondeadas.
 Esto le da un atractivo aspecto al mapa.
\end_layout

\begin_layout Section
Colores
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Colores-del-nodo"

\end_inset

Colores del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Colores_del_nodo.png

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el apartado 
\begin_inset Quotes eld
\end_inset

Colores del nodo
\begin_inset Quotes erd
\end_inset

 podemos modificar el color tanto del texto como del fondo del nodo.
 Sin embargo, además de estos dos elementos, también podemos definir el
 color de los enlaces entre nodos, para lo cual nos iremos a los apartados
 
\begin_inset Quotes eld
\end_inset

Borde del nodo
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

Bordes
\begin_inset Quotes erd
\end_inset

.
 Estos apartados se muestran en las figuras 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Colores-del-nodo"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Colores-bordes"
plural "false"
caps "false"
noprefix "false"

\end_inset

 y 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Panel_borde"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Colores-bordes"

\end_inset

Colores de los bordes
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Colores_bordes.png

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La diferencia entre los bordes y los bordes del nodo se muestra en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diferencia-Bordes-bodesnodo"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Veamos esa imagen: si queremos cambiar los bordes utilizamos la sección
 
\begin_inset Quotes eld
\end_inset

Bordes
\begin_inset Quotes erd
\end_inset

 que se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Panel_borde"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Si por el contrario lo que queremos es cambiar el borde del nodo utilizaremos
 la sección del panel de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Colores-bordes"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Para cambiar el color de la letra o del fondo del nodo se usa la sección
 del panel mostrada en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Colores-del-nodo"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diferencia-Bordes-bodesnodo"

\end_inset

Diferencia entre Bordes y Borde del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/colores_bordes_en_mapa.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Aspecto de los bordes
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Panel_borde"

\end_inset

Opciones de los enlaces entre nodos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Panel_borde.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Freeplane usa la palabra borde para denominar dos elementos: para las líneas
 que unen los nodos hijos con su nodo padre y para la línea que dibuja la
 forma del nodo.
 En esta sección vamos ahora a modificar las líneas que unen los nodos del
 mapa.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Panel_borde"
plural "false"
caps "false"
noprefix "false"

\end_inset

 tenemos las opciones que nos da Freeplane:
\end_layout

\begin_layout Itemize
Anchura del borde.
\end_layout

\begin_layout Itemize
Tipo de línea: como antes, continua, punteada, etc.
\end_layout

\begin_layout Itemize
Color del borde.
\end_layout

\begin_layout Itemize
Estilo del borde: es la opción más interesante.
\end_layout

\begin_layout Standard
Hay varios estilos de bordes que podemos ver en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tipos-de-enlaces"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\end_layout

\begin_layout Description
Lineal.
 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Tipos de bordes
\end_layout

\end_inset


\end_layout

\end_inset

Conexión lineal indirecta uniforme.
 Su grosor es el mismo en toda su trayectoria.
\end_layout

\begin_layout Description
Lineal
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

ángulos.
 Conexión lineal de grosor variable, mas grueso al principio y más fino
 al final
\end_layout

\begin_layout Description
Horizontal.
 Conexión con el nodo con líneas horizontales y verticales.
 Grosor uniforme.
\end_layout

\begin_layout Description
Bezier.
 Es una linea curva de grosor uniforme.
\end_layout

\begin_layout Description
Bezier
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

ángulos.
 Línea curva de grosor variable.
 Más grueso al principio y va disminuyendo al final
\end_layout

\begin_layout Description
Ocultar
\begin_inset space ~
\end_inset

el
\begin_inset space ~
\end_inset

borde: no se muestra la línea de unión entre el padre y nuestro nodo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Tipos-de-enlaces"

\end_inset

Tipos de conexión entre nodos (bordes)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Formato_bordes.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Añadiendo otros elementos
\end_layout

\begin_layout Section
Imágenes
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Insertar_imagen_nodo"

\end_inset

Añadir imágenes a los nodos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/insertar_imagen.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Ubicaciones para las imágenes
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Además de texto, iconos y atributos en nuestros mapas también pueden aparecer
 imágenes.
 Nuestras imágenes pueden aparecer en diferentes ubicaciones:
\end_layout

\begin_layout Itemize
Dentro del nodo.
\end_layout

\begin_layout Itemize
Bajo el nodo.
\end_layout

\begin_layout Itemize
Imagen de fondo del mapa.
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Insertar_imagen_nodo"
plural "false"
caps "false"
noprefix "false"

\end_inset

 están estas opciones.
\end_layout

\begin_layout Subsection
Imagen dentro de un nodo
\end_layout

\begin_layout Standard
Como hemos visto un nodo es una forma (un cuadrado, óvalo, hexágono) dentro
 del cual hay un texto y que contiene elementos extra tales como texto bajo
 él, atributos y enlaces.
 Sin embargo también podemos hacer que dentro de la forma del nodo aparezca
 una imagen e incluso una imagen bajo la cual podremos escribir un texto.
\end_layout

\begin_layout Standard
Añadir una imagen dentro de un nodo es sencillo.
 Únicamente hay que pinchar en el menú Editar / Nodo central / Imagen y
 elegir el fichero de la imagen.
 Una vez aparezca en el mapa ya podremos hacer doble click en ella y añadirle
 texto que aparecerá a su lado.
 Si queremos que aparezca bajo la imagen podemos teclear 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{ALT}
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{ENTER}
\end_layout

\end_inset

 lo cual insertará una nueva línea.
\end_layout

\begin_layout Subsection
Imagen bajo el nodo
\end_layout

\begin_layout Standard
Es una tarea muy sencilla.
 Únicamente tenemos que arrastrar la imagen desde el sistema operativo hasta
 el área de trabajo de Freeplane y ya está.
 Sin embargo si ya tenemos el nodo en el mapa podemos ir al menú Editar
 / Propiedades del nodo / Añadir Imagen desde.
 En ambos casos la imagen aparecerá bajo el texto del nodo.
\end_layout

\begin_layout Subsection
Imagen de fondo del mapa
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Imagen_fondo"

\end_inset

Mapa con una imagen de fondo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Imagen_fondo.png
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algo muy interesante es la opción de cambiar el aburrido fondo blanco de
 todos los mapas.
 Si nos vamos a Formato / Mapa de fondo / Fondo del mapa podemos elegir
 un color personalizado para el mapa.
\end_layout

\begin_layout Standard
Sin embargo lo mejor es que también podemos añadir una imagen que se mostrará
 tras el mapa (ver imagen 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Imagen_fondo"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Esto se consigue desde el menú Formato / Mapa de fondo / Imagen de fondo.
\end_layout

\begin_layout Section
Atributos
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Aspecto de los atributos
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Añadiendo-atributos"

\end_inset

Añadiendo atributos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/atributos.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hemos visto que un nodo tiene un texto, una forma, color, tipo de línea
 e incluso un detalle bajo él.
 Ahora veremos los atributos que podemos verlos como propiedades que añadimos
 a cada nodo.
 Propiedades que definimos como un nombre de propiedad al que aplicamos
 un valor.
 Por ejemplo, en las facturas serían atributos 
\begin_inset Quotes eld
\end_inset

Coste
\begin_inset Quotes erd
\end_inset

 e 
\begin_inset Quotes eld
\end_inset

IVA
\begin_inset Quotes erd
\end_inset

.
 Tendríamos una factura con una propiedad llamada 
\begin_inset Quotes eld
\end_inset

Coste
\begin_inset Quotes eld
\end_inset

 de valor 1.500, otra propiedad llamada 
\begin_inset Quotes eld
\end_inset

IVA
\begin_inset Quotes erd
\end_inset

 con el valor 0.15 etc.
 Si los nodos fueran vehículos podríamos añadir los atributos 
\begin_inset Quotes eld
\end_inset

Precio
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Potencia
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

Consumo
\begin_inset Quotes erd
\end_inset

.
 Mediante los atributos ampliamos la utilidad de un nodo con propiedades
 personalizadas.
\end_layout

\begin_layout Standard
Si vamos al mapa que comenzamos en el capítulo 2 veremos que hay un apartado
 para incluir los documentos del proyecto.
 Unos documentos fundamentales de todo proyecto son las facturas.
 Para almacenarlas añadiremos un nodo Facturas hijo del nodo 
\begin_inset Quotes eld
\end_inset

Documentos
\begin_inset Quotes erd
\end_inset

.
 En este nodo incluiremos todas las facturas del proyecto, tal y como vemos
 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Añadiendo-atributos"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Si deseamos que Freeplane pueda acceder a los detalles de las facturas
 tales como el coste, el IVA, etc lo más adecuado es añadir dos atributos.
 Uno para el coste y otro para el IVA.
 Para añadir estos atributos nos iríamos al panel de formato pero eligiendo
 la pestaña 
\begin_inset Quotes eld
\end_inset

Calendario y atributos
\begin_inset Quotes erd
\end_inset

 de la parte superior.
 En la sección inferior hay dos botones, 
\begin_inset Quotes eld
\end_inset

Nuevo atributo
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

Anchura óptima
\begin_inset Quotes erd
\end_inset

.
 Pinchando en el primero podemos añadir los atributos que deseemos.
 Y pinchando en el segundo modifica su ancho para ajustarlo exactamente
 a su contenido.
 Hemos puesto como IVA el valor 0.15 escogiendo el formato #.##% para que
 lo muestre como porcentaje.
\end_layout

\begin_layout Standard
Para trabajar con atributos, Freeplane proporciona varias herramientas que
 veremos más adelante en la sección para usuarios avanzados.
 Por ejemplo, existe un gestor de atributos accesible desde el menú Editar,
 Propiedades del nodo, Gestor de atributos mediante el cual podemos restringir
 los valores que puede contener un atributo, entre otras cosas.
\end_layout

\begin_layout Section
Enlaces
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement o
overhang 0col%
width "50col%"
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Nodo-con-enlace"

\end_inset

Nodo con enlace
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Nodo_con_enlace.png

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
El enlace se muestra como una pequeña flecha roja
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Imaginemos que además de tener almacenados los detalles de las facturas
 también quisiéramos acceder a los documentos originales al hacer click
 encima del nodo de la factura.
 Esto se consigue mediante los enlaces, que funcionan de forma similar a
 los de cualquier página web: pinchando encima Freeplane nos lleva al destino
 del enlace.
 Esto se realiza pinchando con el botón derecho sobre el nodo y eligiendo
 del menú contextual Enlaces, Añadir enlaces (Seleccionar).
 Aparecerá un selector de archivos para elegir la factura correspondiente.
\end_layout

\begin_layout Standard
Otra forma de añadir enlaces a archivos arrastrar el documento sobre uno
 de los nodos del mapa como hacíamos con las imágenes.
 Aparecerá como texto el nombre del fichero y se creará un enlace para que
 podamos acceder a él haciendo click en él.
 El enlace tiene la forma de una pequeña flecha roja.
 Hay dos tipos de enlace: a documentos o lugares externos o a otros nodos.
\end_layout

\begin_layout Standard
Al añadir un enlace a un documento aparecerá una pequeña flecha roja al
 principio del nodo tal y como vemos en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Nodo-con-enlace"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Enlaces internos
\end_layout

\begin_layout Standard
Son enlaces entre nodos.
 Al pinchar encima del nodo con enlace Freeplane nos llevará al nodo enlazado
 que puede estar en el mapa actual o en otro mapa distinto.
 Para definirlos pinchamos en el nodo al que queremos añadir el enlace y
 después el nodo enlazado.
 Luego del menú contextual que aparece al pinchar este segundo nodo con
 el botón derecho elegiremos la opción Enlaces / Agregar enlace local ó
 Editar / Enlaces / Agregar enlace local.
 
\end_layout

\begin_layout Standard
Si el segundo nodo está en otro mapa el proceso es algo diferente:
\end_layout

\begin_layout Enumerate
Iremos al nodo destino y pincharemos con el botón derecho del ratón.
 
\end_layout

\begin_layout Enumerate
Elegiremos la opción Copiar la URL del nodo.
\end_layout

\begin_layout Enumerate
Iremos al nodo donde queremos poner el enlace y elegiremos del menú contextual
 Enlace / Campo de texto.
\end_layout

\begin_layout Enumerate
Pegaremos la URL antes copiada.
\end_layout

\begin_layout Standard
Otra forma sería:
\end_layout

\begin_layout Enumerate
Nos posicionaremos en el nodo destino y luego en Editar / Enlaces \SpecialChar breakableslash
 Definir
 enlace a la etiqueta del ancla.
 Esto lo fija como un ancla.
\end_layout

\begin_layout Enumerate
Nos ponemos en el segundo nodo y elegimos Editar / Enlaces / Convertir enlace
 a etiqueta del ancla.
\end_layout

\begin_layout Enumerate
Nota: si elegimos por el contrario Editar / Enlaces / Crear enlace de una
 etiqueta de ancla el enlace se hará al revés: el ancla tendrá el enlace
 y el destino será el enlazado.
\end_layout

\begin_layout Subsection
Enlaces externos
\end_layout

\begin_layout Standard
Como ya he dicho la forma más sencilla es arrastrar un archivo a uno de
 los nodos de la ventana de Freeplane.
 Por ejemplo, si arrastramos la dirección que aparece en el navegador a
 un nodo se creará un enlace hacia esa página web.
 Pinchando encima se abrirá el navegador y podremos ver esa página.
\end_layout

\begin_layout Standard
Otra forma para añadir un enlace externo es elegir el menú Editar / Enlaces
 / Elegir archivo.
 Con eso se establecerá un enlace que nos llevará al archivo antes seleccionado.
 o también podemos elegir Editar / Enlaces / Campo de texto que nos permite
 teclear lo que deseemos, por ejemplo, una dirección web.
\end_layout

\begin_layout Subsection
Enviar correo
\end_layout

\begin_layout Standard
Entrando en Editar / Enlace / Enlace (campo de texto) y tecleando mailto:kewapo@
gmail.com al pinchar en el nodo se abrirá el editor de correo electrónico
 para que enviemos ese correo.
\end_layout

\begin_layout Subsection
Enlace a un menú de freeplane
\end_layout

\begin_layout Standard
Podemos hacer que uno de nuestros nodos se comporte de forma idéntica a
 si pinchamos en uno de sus menús.
 Para ello pinchamos en el nodo y luego en Editar / Enlaces / Hiperenlace
 (entrada de menú).
 Saldrá una lista con los menús de la aplicación para que la elijamos.
\end_layout

\begin_layout Subsection
Enlace a un comando del sistema operativo
\end_layout

\begin_layout Standard
Otra opción es pinchar en Edición / Enlaces / Ejecutar un comando del S.O.
 Aparecerá un cuadrito para que tecleemos el comando (por ejemplo, si ponemos
 notepad se abrirá el block de notas de Windows)
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Fórmulas"

\end_inset

Fórmulas
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement o
overhang 0col%
width "50col%"
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Fórmula"

\end_inset

Fórmula
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/formula_simple.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un nodo 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Crea un nodo y escribe: = 2 + 3
\end_layout

\end_inset


\end_layout

\end_inset

también puede contener una formula.
 Mediante ellas podemos realizar cálculos basándonos en los elementos de
 otros nodos.
 Es una expresión que calcula Freeplane de forma dinámica.
 Puede incluir referencias a otros nodos, operadores aritméticos y funciones
 matemáticas.
 Podemos identificar un nodo con fórmula porque Freeplane pone un marco
 de color verde claro alrededor de él.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Fórmula"
plural "false"
caps "false"
noprefix "false"

\end_inset

 aparece un nodo en el cual hemos escrito 
\begin_inset Quotes eld
\end_inset

= 2 + 3
\begin_inset Quotes erd
\end_inset

.
 Vemos que aparece un 5.
\end_layout

\begin_layout Standard
Para añadir una fórmula a un nodo únicamente tenemos que comenzar a escribir
 con el símbolo de igual.
 Por ejemplo, si en el texto de un nodo determinado escribimos = 2 * 3 aparecerá
 un 6.
 Otros ejemplos son:
\end_layout

\begin_layout Itemize
= 2 + 3: aparecerá el número 5.
\end_layout

\begin_layout Itemize
= (3 * 4) + 
\begin_inset Quotes eld
\end_inset

 veces
\begin_inset Quotes erd
\end_inset

: aparecerá el texto 
\begin_inset Quotes eld
\end_inset

6 veces
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
=(parent.value=="calcular") ? 2 + 3 : "2 + 3": Si el padre del nodo contiene
 el texto 
\begin_inset Quotes eld
\end_inset

calcular
\begin_inset Quotes erd
\end_inset

 se mostrará un 5 en el nodo.
 Si es otra cosa, se mostrará 
\begin_inset Quotes eld
\end_inset

2 + 3
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Las fórmulas de freeplane son un recurso muy potente.
 El último ejemplo es una expresión condicional: 
\series bold
expresión_booleana ? resultado_si_verdadero : resultado_si_falso
\series default
.
\end_layout

\begin_layout Standard
Si vamos a utilizar fórmulas con números decimales es conveniente modificar
 el símbolo que utiliza Freeplane para la coma decimal pues en algunos casos
 podemos obtener errores.
 Para evitar errores de este tipo nos iremos a las preferencias, pestaña
 de comportamiento y en la sección 
\begin_inset Quotes eld
\end_inset

Formateo y análisis de datos
\begin_inset Quotes erd
\end_inset

 elegimos del desplegable de Idioma para los formatos el inglés.
\end_layout

\begin_layout Subsection
Elementos básicos
\end_layout

\begin_layout Standard
Podemos 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Operadores básicos
\end_layout

\end_inset


\end_layout

\end_inset

ver en la tabla siguiente un resumen de los operadores que podemos encontrar
 en las fórmulas de Freeplane.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Se escribe
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ejemplo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Resultado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= 2 + 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= 11 - 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= 2 * 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= 50 / 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
potencia
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
**
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= 3 ** 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paréntesis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
( )
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 * (10 + 5)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
número pi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.PI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.PI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.141592
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
número e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.718281
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
seno
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.sin( )
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.sin(2 * Math.PI)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
coseno
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.cos( )
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.cos(2 * Math.PI)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tangente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.tan( )
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.tan(2 * Math.PI)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logaritmo decimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.log10( )
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.log10(100)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logaritmo neperiano
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Math.log( )
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= Math.log(Math.E)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Elementos de los nodos
\end_layout

\begin_layout Standard
Aparte de los elementos estáticos de cualquier fórmula tales como los operadores
 anteriores y los números, en nuestras fórmulas también podemos referirnos
 nodos del mapa.
 De esta forma podemos sumar en el nodo padre el valor de todos sus nodos
 hijo o incluso acceder a los atributos de los nodos y operar con ellos.
\end_layout

\begin_layout Standard
En la siguiente tabla encontramos cómo podemos referirnos a estos elementos.
 Utiliza el mapa de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-ejemplo-formulas"
plural "false"
caps "false"
noprefix "false"

\end_inset

 para los resultados de los ejemplos.
 La fórmula la
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Referencias a nodos
\end_layout

\end_inset


\end_layout

\end_inset

 escribimos en el nodo central que contiene el texto 5432.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Descripción
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ejemplo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Resultado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valor del padre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= 2 * parent.value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valores de los nodos hijos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= children.value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 2, 3, 10, 20, 30]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cantidad de hijos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= children.size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
suma de los nodos hijos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= children.sum(0)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
66
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Atributo coste del nodo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= node['Coste']
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
54321 (texto)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valor numérico del coste
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= node['Coste'].to.num0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
54321 (número)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Atributo Coste del padre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= parent['Coste']
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3020
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precio final = Coste * IVA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= node['Coste'].to.num0 * node['IVA'].to.num0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5432.1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace smallskip
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mapa-ejemplo-formulas"

\end_inset

Mapa ejemplo para las fórmulas
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/formula_mapa_ejemplo.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hay que hacer una puntualización.
 Por defecto Freeplane trata a todos los números como si fuera texto.
 Esto quiere decir que no se puede realizar operaciones numéricas con ellos
 puesto que son tratados como si fueran letras.
 Para poder operar hay que acceder a su valor numérico.
 Esto es lo que hacemos al escribir parent.
\series bold
value
\series default
 ó node['Coste'].
\series bold
to.num0
\series default
.
\end_layout

\begin_layout Standard
Realmente las fórmulas de Freeplane son más que fórmulas pues podemos poner
 en ellas cualquier código que produzca un resultado.
 Esto lo veremos con mucha más profundidad en la parte avanzada.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ejemplo-formula"

\end_inset

Ejemplo de un nodo con fórmula
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/facturas_ejemplo.png
	scale 75

\end_inset


\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Usando las fórmulas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vemos en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ejemplo-formula"
plural "false"
caps "false"
noprefix "false"

\end_inset

 nuestro mapa con un ejemplo.
 El nodo con el texto 
\begin_inset Quotes eld
\end_inset

3 Facturas
\begin_inset Quotes erd
\end_inset

 contiene realmente la fórmula que aparece en el cuadro 
\begin_inset Quotes eld
\end_inset

Editar fórmula
\begin_inset Quotes erd
\end_inset

.
 Dicho cuadro de diálogo es el que aparece cuando editamos un nodo con una
 fórmula.
 A medida que vayamos añadiendo más facturas ese número irá cambiando pues
 contiene la expresión 
\begin_inset Quotes eld
\end_inset

children.size
\begin_inset Quotes erd
\end_inset

 que nos proporciona la cantidad de hijos del nodo indicado.
\end_layout

\begin_layout Section
Fechas
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gestión-del-tiempo"

\end_inset

Gestión del tiempo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Administrar_el_tiempo.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Freeeplane tiene características para gestionar el tiempo tales como recordatori
os y fechas en los nodos.
 La herramienta fundamental para la gestión del tiempo es accesible mediante
 Herramientas, Mostrar calendario.
 Aparecerá la ventana de Administración del tiempo (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gestión-del-tiempo"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
Con ella podremos:
\end_layout

\begin_layout Itemize
Añadir la fecha actual al nodo
\end_layout

\begin_layout Itemize
Añadir 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Usos del planificador
\end_layout

\end_inset


\end_layout

\end_inset

un recordatorio en la fecha seleccionada
\end_layout

\begin_layout Itemize
Añadir un recordatorio en otra fecha posterior
\end_layout

\begin_layout Itemize
Ejecutar un script cuando llegue una fecha / hora determinada.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Planificador-del-tiempo"

\end_inset

Planificador del tiempo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Planificador_del_tiempo.png
	scale 60

\end_inset


\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Tres nodos con recordatorios
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En dicha herramienta se pueden ver tres minicalendarios y una hora bajo
 ellos.
 Pinchando en el botón 
\begin_inset Quotes eld
\end_inset

Hoy
\begin_inset Quotes erd
\end_inset

 los calendarios y hora se posicionan en la fecha y hora actuales.
 Podemos irnos a otros meses si cambiamos el mes del centro (eligiéndolo
 del desplegable del mes que hay a la izquierda del año).
 También podemos modificar la hora.
 Una vez cambiada la fecha / hora de los minicalendarios podremos añadir
 dicha fecha al nodo con el botón 
\begin_inset Quotes eld
\end_inset

Agregar Fecha a la selección
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
O también un recordatorio en esta fecha al pinchar en 
\begin_inset Quotes eld
\end_inset

Recordar En Esta Fecha
\begin_inset Quotes erd
\end_inset

.
 Cuando llegue ese momento Freeplane mostrará un aviso que puede configurarse
 en las preferencias de la aplicación.
 Normalmente se verán los nodos con los recordatorios parpadeando y mostrando
 un pequeño icono.
 Para avisar en el caso de que el nodo con el recordatorio esté colapsado,
 Freeplane hará parpadear toda la ruta desde la raíz al nodo con el recordatorio.
 También se puede configurar para que aparezca una ventana emergente con
 la notificación.
 
\end_layout

\begin_layout Standard
Cuando nos salte la notificación podremos ir a ella y eliminarla para que
 el nodo no siga parpadeando.
\end_layout

\begin_layout Standard
Si en lugar de recordarlo en esa fecha queremos recordarlo días u horas
 posteriores pincharemos en 
\begin_inset Quotes eld
\end_inset

Recordar más tarde
\begin_inset Quotes erd
\end_inset

 indicando previamente cuantos días / horas / minutos de retraso tendrá
 el aviso (desplegables bajo el botón 
\begin_inset Quotes eld
\end_inset

Agregar Fecha a la selección
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
Podemos efectuar cierta planificación de tareas añadiendo recordatorios
 a los nodos que contienen las tareas a realizar.
 Una vez hecho tenemos acceso al planificador si pinchamos en Herramientas,
 Mostrar la lista del planificador de tiempo.
 Aparecerá la ventana de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Planificador-del-tiempo"
plural "false"
caps "false"
noprefix "false"

\end_inset

 en la que se pueden ver las tareas planificadas, su fecha así como los
 iconos, detalles, notas y fechas de creación y modificación de los nodos
 en cuestión.
\end_layout

\begin_layout Chapter
Definiendo estilos y plantillas
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Definiendo-estilos"

\end_inset

Definiendo estilos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Estilos_definir.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el capítulo 3 hemos modificado el aspecto de nuestro mapa cambiando alguno
 de sus elementos.
 Para ello íbamos aplicando uno a uno todos los cambios que necesitábamos.
 Y si queríamos dos nodos iguales no teníamos más remedio que ir al segundo
 nodo y volver a aplicar los mismos cambios que en el primero.
\end_layout

\begin_layout Standard
Para evitar el tedio que supone aplicar una y otra vez los mismos formatos
 Freeplane dispone de los Estilos.
 Un estilo es, por lo tanto, un conjunto de formatos al que damos un nombre.
 De esta manera podemos aplicarlos todos juntos con un solo click.
 Freeplane viene ya con un conjunto básico de estilos.
 Si nos vamos al panel de formato lateral (que si recordáis es el elemento
 número 6 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

) veremos un desplegable que se llama 
\begin_inset Quotes eld
\end_inset

Estilos
\begin_inset Quotes erd
\end_inset

.
 Si lo expandimos nos aparecen los estilos, tal y como se ve en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Estilos-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Cuando escogemos uno de ellos veremos cómo se modifica el aspecto del nodo
 seleccionado.
\end_layout

\begin_layout Standard
Definir un estilo es muy fácil.
 Para ello únicamente tenemos que aplicar todos los formatos a uno de los
 nodos y una vez tenga el aspecto deseado le daremos un nombre mediante
 el menú Formato, Gestionar estilos, Nuevo estilo a partir de la selección
 con el nodo seleccionado.
 Aparecerá el cuadro de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Definiendo-estilos"
plural "false"
caps "false"
noprefix "false"

\end_inset

 donde escribiremos el nombre del estilo.
\end_layout

\begin_layout Section
Estilos predefinidos
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Estilos-de-Freeplane"

\end_inset

Estilos de Freeplane
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Estilos_definidos.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Freeplane incorpora ya algunos estilos definidos, como vemos en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Estilos-de-Freeplane"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Los estilos nivel 1 a nivel 10 son los que se aplican si activamos la opción
 del panel de formato 
\begin_inset Quotes eld
\end_inset

Color del borde automático
\begin_inset Quotes erd
\end_inset

 y elegimos del desplegable 
\begin_inset Quotes eld
\end_inset

por niveles
\begin_inset Quotes erd
\end_inset

.
 Los colores que se aplican pueden modificarse pinchando en el botón 
\begin_inset Quotes eld
\end_inset

Editar color de las líneas
\begin_inset Quotes erd
\end_inset

.
 Si por el contrario elegimos 
\begin_inset Quotes eld
\end_inset

por ramas
\begin_inset Quotes erd
\end_inset

 los colores antes definidos se aplican a medida que se van añadiendo ramas.
\end_layout

\begin_layout Standard
El estilo llamado Raíz es el que se aplica al nodo raíz.
 Los denominados Tópico, Subtópico, Subsubtópico e Importante varían el
 color, tamaño de la letra y en el último caso añade un icono.
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Podemos hacer que Freeplane varíe el color de los nuevos nodos
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Panel-del-estilo"

\end_inset

Panel del estilo del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/panel_niveles.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Modificando los estilos ya definidos
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Editar-estilos"

\end_inset

Editar estilos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Editar_estilos.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Modificando los estilos ya definidos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A medida que vayamos definiendo nuestros propios estilos éstos irán apareciendo
 en los desplegables de los estilos de los nodos.
 Una opción fundamental a la hora de trabajar con estilos en freeplane es
 el Editor de estilos que podemos ver en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Editar-estilos"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Es un mapa en el cual aparecen todos los estilos del mapa con el que estamos
 trabajando.
 Se muestra al pinchar en Formato, Gestionar estilos, editar estilos.
\end_layout

\begin_layout Standard
Mediante este panel podemos cambiar el formato del estilo así como borrar
 los estilos que no nos interesen.
 Vemos que aparece desplegado continuamente el panel de formato lateral
 de la derecha.
\end_layout

\begin_layout Standard
Hay cinco estilos interesantes: Por defecto, Contenido, Atributos Nota y
 Nodo Flotante.
\end_layout

\begin_layout Standard
Por defecto es el formato que tienen todos los nodos si no les hemos cambiado
 nada.
 Podemos cambiar, por ejemplo, el color y el tamaño de todos los nodos al
 modificar este estilo.
\end_layout

\begin_layout Standard

\series bold
Contenido
\series default
 es el formato que se aplica a los detalles del nodo que, como hemos visto,
 es el texto que podemos añadir bajo el nodo.
\end_layout

\begin_layout Standard

\series bold
Atributos
\series default
 nos indica cómo se verán los atributos de los nodos.
\end_layout

\begin_layout Standard

\series bold
Not
\series default
a indica cómo se verá la nota en el panel de notas.
\end_layout

\begin_layout Standard

\series bold
Nodo Flotante
\series default
: formato aplicado a los nodos flotantes.
 Un nodo flotante es aquel que podemos añadir al mapa al hacer doble click
 en una zona del mismo mientras mantenemos presionada la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{INSERT}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Vemos que los estilos Tópico, Subtópico, Subsubtópico e Importante aparecen
 en la rama 
\begin_inset Quotes eld
\end_inset

Estilos definidos por el usuario
\begin_inset Quotes erd
\end_inset

.
 Estos estilos los podemos borrar pinchando con el botón derecho del ratón
 y eligiendo 
\begin_inset Quotes eld
\end_inset

Eliminar estilo definido por el usuario
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Los estilos definidos por nivel los borraríamos pinchando con el botón derecho
 en cualquier nodo y eligiendo 
\begin_inset Quotes eld
\end_inset

Eliminar estilo automático por nivel
\begin_inset Quotes erd
\end_inset

.
 Borrará el último nivel que haya (que inicialmente es el nivel 11).
\end_layout

\begin_layout Standard
Una vez hechos los cambios deseados en los estilos ya podemos guardar.
 Para ello pinchamos en el menú Archivo, De acuerdo.
 Si nos hemos liado y no queremos guardar nada pincharíamos en Archivo,
 Anular.
\end_layout

\begin_layout Section
Guardando nuestros estilos: las plantillas
\end_layout

\begin_layout Standard
Si te has pasado mucho tiempo creando estilos en tu mapa podrás guardarlos
 para utilizarlos como plantilla en lugar de la plantilla inicial que se
 carga al crear un nuevo mapa.
\end_layout

\begin_layout Standard
Como puedes imaginar, una plantilla es un diseño básico del mapa con estilos
 definidos.
 Para poder crearla tenemos varias opciones que se explican en las secciones
 siguientes
\end_layout

\begin_layout Subsection
Utilizar estilos definidos en otro mapa
\end_layout

\begin_layout Standard
Cuando creamos un nuevo mapa podemos cargar los estilos de otro mediante
 el menú Formato, Gestionar estilos, cargar estilos del mapa...
\end_layout

\begin_layout Subsection
Guardar el mapa actual como plantilla
\end_layout

\begin_layout Standard
Imaginemos que queremos usar el mapa que llevamos haciendo durante todo
 este tiempo como plantilla.
 De esta forma cada vez que tengamos un proyecto nuevo, al crearlo con esta
 plantilla ya aparecerán todas las ramas fundamentales: Tareas, Recursos,
 Gente, Resultados y Elementos para ordenar así como los estilos que hayamos
 definido.
\end_layout

\begin_layout Standard
Esto se realiza guardando el mapa que queremos usar como plantilla en el
 directorio templates del directorio del usuario que podemos mostrar al
 pinchar en herramientas, abrir el directorio del usuario.
\end_layout

\begin_layout Standard
Cualquier mapa que aparezca en esa carpeta se podrá utilizar como plantilla.
 
\end_layout

\begin_layout Subsection
Usar la plantilla
\end_layout

\begin_layout Standard
Una vez ya tengamos nuestra plantilla guardada en la ubicación correcta
 podremos usarla al elegir el menú Archivo, Nuevo mapa usando plantilla.
 Freeplane mostrará la carpeta Templates del directorio del usuario donde
 podremos elegir la plantilla que queramos.
\end_layout

\begin_layout Standard
También podemos utilizar cualquier otro mapa aunque no lo hayamos guardado
 como plantilla si en la ventana anterior navegamos hasta dicho mapa y lo
 elegimos.
\end_layout

\begin_layout Standard
Los pasos para crear una plantilla son, por lo tanto:
\end_layout

\begin_layout Enumerate
Definir la estructura de nodos que queremos que aparezca inicialmente
\end_layout

\begin_layout Enumerate
Crear los estilos del mapa
\end_layout

\begin_layout Enumerate
Guardarlo en el directorio templates del directorio del usuario
\end_layout

\begin_layout Enumerate
Crear un nuevo mapa a partir de la plantilla anterior.
\end_layout

\begin_layout Section
Creando una plantilla para nuestros proyectos
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Plantilla-fase-1"

\end_inset

Creación de una plantilla.
 Fase 1
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Plantilla_fase_1.png
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como práctica vamos a utilizar el mapa de los primeros capítulos como base
 para una plantilla para mapas mentales de gestión de proyectos.
 Vamos a partir de una versión modificada de aquel mapa.
 Aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Plantilla-fase-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Abrir vuestro mapa y realizar todas las modificaciones para que coincida
 con el de la figura indicada.
 
\end_layout

\begin_layout Standard
Ahora vamos a definir una serie de estilos que nos faciliten la labor a
 la hora de introducir nuevos elementos.
 Vamos a partir de las facturas.
 Cambiaremos su forma para que sea rectangular de color de fondo gris claro.
 Le pondremos ancho mínimo y máximo 5 y márgenes cero.
 Cuando tengamos un nodo con estos formatos aplicados lo definiremos como
 estilo:
\end_layout

\begin_layout Enumerate
Seleccionamos el nodo
\end_layout

\begin_layout Enumerate
Elegimos el menú Formato, Gestionar Estilos, Nuevo estilo a partir de la
 selección y tecleamos Lista recta.
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement o
overhang 0col%
width "50col%"
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Estilo-facturas"

\end_inset

Definiendo el estilo para las facturas
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Plantilla_fase_2.png
	scale 70

\end_inset


\end_layout

\end_inset

Ya tenemos el estilo para este tipo de documentos.
 Podemos usarlo, aparte de para las facturas, para otras cosas.
 Por eso lo hemos llamado 
\begin_inset Quotes eld
\end_inset

lista recta
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
El tipo de letra por defecto es algo feucho.
 Vamos a cambiarlo:
\end_layout

\begin_layout Enumerate
Menú Formato, Gestionar Estilos, Editar estilos para sacar el mapa con los
 estilos definidos.
 Vemos que ya aparece el que acabamos de definir, 
\begin_inset Quotes eld
\end_inset

lista recta
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Pinchamos en el nodo 
\begin_inset Quotes eld
\end_inset

Por defecto
\begin_inset Quotes erd
\end_inset

 y elegimos como tipo de letra uno algo más atractivo.
 Por ejemplo, Lucinda Sans.
\end_layout

\begin_layout Enumerate
Salimos mediante el menú Archivo, De acuerdo.
 Vemos que se han modificado todos los nodos.
\end_layout

\begin_layout Standard
La rama para las fases del proyecto no está muy trabajada.
 Sería mejor usar otro tipo de estructura.
 Primero vamos a borrar todas las tareas.
 Luego crearemos los nodos en la rama 
\begin_inset Quotes eld
\end_inset

Fases del proyecto
\begin_inset Quotes erd
\end_inset

 tal y como aparecen en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Plantilla-fase-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Plantilla-fase-2"

\end_inset

Creación de una plantilla.
 Fase 2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Plantilla_fase_3.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los hitos son nodos de forma de burbuja con ancho máximo y mínimo de 10,
 fondo negro y letras blancas en negrita.
 Hemos arrastrado manualmente los nodos para que queden debajo del nodo
 padre y darle así un aspecto más atractivo a esa rama.
 Las fases y subfases son nodos con forma de bifurcación y anchos mínimo
 y máximo de 5 que también hemos arrastrado hacia abajo.
 Los detalles de las subfases con nodos de tipo bifurcación de tamaño de
 letra de 8 sin anchos definidos.
 Lamentablemente, la posición de los nodos no se puede fijar mediante estilos
 por lo que debemos hacerlo manualmente.
 Sin embargo podemos guardar la plantilla con un par de Hitos y fases de
 ejemplo.
\end_layout

\begin_layout Standard
Cuando ya tenemos la estructura creada definimos tres estilos: uno para
 el hito, otro para la fase y subfase y otro para los detalles de las subfases.
\end_layout

\begin_layout Standard
Para las personas definiremos dos estilos: uno para el hombre con un icono
 de un hombre y otro con el icono de una mujer.
 Serán ovalados pero marcando la casilla Uniforme para que sean círculos.
 Podemos definir un ancho determinado para darle un aspecto más uniforme.
 Al final los estilos quedan tal y como aparecen en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Estilos-de-plantilla"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Custom Color Box 1
status open

\begin_layout Plain Layout
Los 6 estilos que hemos definido
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Estilos-de-plantilla"

\end_inset

Estilos de nuetra plantilla
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Plantilla_fase_4.png
	scale 80

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora únicamente nos queda guardar la plantilla para poder utilizarla con
 los proyectos nuevos.
 Para ello elegimos el menú Archivo guardar.
 Le ponemos de nombre 
\begin_inset Quotes eld
\end_inset

Proyecto
\begin_inset Quotes erd
\end_inset

 y lo dejamos en un lugar conocido, por ejemplo el escritorio del ordenador.
\end_layout

\begin_layout Standard
Luego vamos al menú Herramientas, Abrir el directorio del usuario y arrastramos
 el archivo Proyecto.mm que habíamos creado en el escritorio al directorio
 templates del directorio del usuario.
\end_layout

\begin_layout Standard
Ahora ya podemos crear nuestros mapas de proyectos eligiendo Archivo, Nuevo
 mapa a partir de plantilla.
 Escogemos la plantilla proyecto.mm y obtenemos la imagen de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-plantilla-proyecto"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 En el desplegable superior aparecen los estilos que hemos definido: 
\begin_inset Quotes eld
\end_inset

Lista recta
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Hito
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Fase
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Fase-elemento
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Hombre
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

Mujer
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mapa-plantilla-proyecto"

\end_inset

Nuevo mapa creado a partir de la plantilla del proyecto
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Plantilla_fase_5.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Utilizando el mapa con otras aplicaciones
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Archivos-exportar"

\end_inset

Ventana del menú Archivo / Exportar.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Exportar_tipos.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ya tenemos nuestro mapa construido.
 Hemos ido creando la estructura de ramas que responde a la visión que tenemos
 del problema y deseamos compartirlo con otras personas.
\end_layout

\begin_layout Standard
Ya sea como imagen o como estructura de ramas, Freeplane dispone de múltiples
 formatos para exportar la información del mapa, accesibles desde el menú
 Archivo, exportar.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Archivos-exportar"
plural "false"
caps "false"
noprefix "false"

\end_inset

 aparecen todas las opciones disponibles.
 A continuación se muestran algunas de ellas.
\end_layout

\begin_layout Section
Utilizándolo como imagen
\end_layout

\begin_layout Standard
Lo más sencillo a la hora de obtener una imagen del mapa con el que estamos
 trabajando es ir a Archivo, Exportar y elegir alguno de los formatos de
 imagen disponibles en la lista:
\end_layout

\begin_layout Itemize
Compressed image (JPEG): Guarda el archivo como imagen .jpg
\end_layout

\begin_layout Itemize
Gráfico escalable vectoria (SVG): Guarda el archivo como imagen vectorial,
 .svg
\end_layout

\begin_layout Itemize
Portable Network Graphic (PNG): Guarda el archivo como imagen .png
\end_layout

\begin_layout Standard
Previamente debemos asegurarnos de expandir las ramas que deseamos mostrar
 y colapsar aquellas que no nos interesan y elegir una ubicación y un nombre
 para el fichero de imagen que deseamos guardar.
 El mapa se guardará exactamente como lo muestre Freeplane.
\end_layout

\begin_layout Standard
Una opción interesante si deseamos enviar a alguien una foto de nuestro
 mapa es escoger de la lista el formato PDF.
 Freeplane generará una página pdf con la imagen que puede ser vista desde
 cualquier equipo.
\end_layout

\begin_layout Section
Guardando el esquema de la información
\end_layout

\begin_layout Standard
Si lo que deseamos es guardar la estructura de la información podemos exportar
 el mapa a un fichero de tecto, txt.
 Si exportamos el mapa de la sección anterior, y que vemos en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapa-plantilla-proyecto"
plural "false"
caps "false"
noprefix "false"

\end_inset

, obtendríamos el siguiente fichero de texto (se muestra incompleto):
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize}"
inline false
status collapsed

\begin_layout Plain Layout

#MindMapExport FreeplaneVersion:freeplane 1.7.0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

1 Planificación del proyecto
\end_layout

\begin_layout Plain Layout

1.1 Recursos
\end_layout

\begin_layout Plain Layout

1.1.1 Materiales
\end_layout

\begin_layout Plain Layout

1.1.2 Expertos y otras fuentes
\end_layout

\begin_layout Plain Layout

1.1.3 Ideas
\end_layout

\begin_layout Plain Layout

1.1.4 Investigación
\end_layout

\begin_layout Plain Layout

1.2 Datos del proyecto
\end_layout

\begin_layout Plain Layout

1.2.1 Nombre
\end_layout

\begin_layout Plain Layout

DETAILS:
\end_layout

\begin_layout Plain Layout

Descripción
\end_layout

\begin_layout Plain Layout

1.2.2 Coste estimado: 0€
\end_layout

\begin_layout Plain Layout

1.2.3 Fecha de inicio
\end_layout

\begin_layout Plain Layout

1.2.4 Tiempo estimado
\end_layout

\begin_layout Plain Layout

1.2.5 Fecha de fin
\end_layout

\begin_layout Plain Layout

1.2.6 Comunicaciones
\end_layout

\begin_layout Plain Layout

DETAILS:
\end_layout

\begin_layout Plain Layout

Descripción
\end_layout

\begin_layout Plain Layout

1.2.7 Partes interesadas
\end_layout

\begin_layout Plain Layout

1.3 Documentación
\end_layout

\begin_layout Plain Layout

1.3.1 Contratos
\end_layout

\begin_layout Plain Layout

1.3.2 4 Facturas
\end_layout

\begin_layout Plain Layout

1.3.2.1 Factura enero
\end_layout

\begin_layout Plain Layout

1.3.2.2 Factura febrero
\end_layout

\begin_layout Plain Layout

1.3.2.3 Factura marzo
\end_layout

\begin_layout Plain Layout

1.3.2.4 Fatura abril
\end_layout

\begin_layout Plain Layout

1.3.3 Informes
\end_layout

\begin_layout Plain Layout

1.4 Fases del proyecto
\end_layout

\begin_layout Plain Layout

1.4.1 Hito 1
\end_layout

\begin_layout Plain Layout

1.4.2 Fase 1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El texto del nodo se muestra en una línea numerada.
 Los detalles se muestran bajo el nodo con el texto 
\begin_inset Quotes eld
\end_inset

DETAILS
\begin_inset Quotes erd
\end_inset

 y los atributos no se exportan.
\end_layout

\begin_layout Standard
Otra forma más potente es exportarlo como fichero de excel.
 Para este mismo ejemplo obtendríamos la imagen 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Exportar-excel"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Exportar-excel"

\end_inset

Exportamos el mapa como archivo de excel
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Exportar_excel.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El texto del nodo se muestra indentado en celdas de excel.
 Los detalles bajo el nodo se guardan como comentarios de las celdas y los
 atributos se muestran como una tabla, según podemos ver en la imagen anterior.
 Una vez tenemos la información en excel ya podemos tratarla y hacer cálculos.
\end_layout

\begin_layout Standard
Si lo que deseamos es obtener un archivo estándar para compartir la información
 con aplicaciones de datos lo mejor es utilizar el formato de intercambio
 de información .XML escogiendo Export raw xml with node formating (XML).
\end_layout

\begin_layout Section
Mapa como página web
\end_layout

\begin_layout Standard
Aunque hay en la lista de formatos para exportar opciones para guardar el
 mapa como página web, la configuración de seguridad actuales de los navegadores
 habituales impiden su utilización, pues bloquean los elementos java y javascrip
t de las páginas web.
 dichos formatos serían:
\end_layout

\begin_layout Itemize
Como HTML
\end_layout

\begin_layout Itemize
Como XHTML (versión mapa seleccionable)
\end_layout

\begin_layout Itemize
Documento HTML
\end_layout

\begin_layout Itemize
Java Web Start (.jnlp)
\end_layout

\begin_layout Section
Importando datos
\end_layout

\begin_layout Standard
Podemos insertar ramas enteras a nuestro mapa de freeplane directamente
 desde un editor de textos 
\series bold
utilizando la opción de copiar y pegar
\series default
.
 Dado el siguiente archivo de texto (se muestran los tabuladores como segmentos
 al comienzo de las líneas):
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Lisp,showspaces=true"
inline false
status open

\begin_layout Plain Layout

Tareas del proyecto
\end_layout

\begin_layout Plain Layout

	Tarea 1
\end_layout

\begin_layout Plain Layout

	Tarea 2
\end_layout

\begin_layout Plain Layout

	Tarea 3
\end_layout

\begin_layout Plain Layout

	Tarea 4
\end_layout

\begin_layout Plain Layout

Recursos
\end_layout

\begin_layout Plain Layout

	Contrato
\end_layout

\begin_layout Plain Layout

	Información
\end_layout

\begin_layout Plain Layout

	Ideas
\end_layout

\begin_layout Plain Layout

	Investigación
\end_layout

\begin_layout Plain Layout

Documentos
\end_layout

\begin_layout Plain Layout

	Facturas
\end_layout

\begin_layout Plain Layout

		Factura enero
\end_layout

\begin_layout Plain Layout

		+	Coste	1500
\end_layout

\begin_layout Plain Layout

		+	IVA	0.15
\end_layout

\begin_layout Plain Layout

		Factura febrero
\end_layout

\begin_layout Plain Layout

		+	Coste	2300
\end_layout

\begin_layout Plain Layout

		+	IVA	0.15
\end_layout

\begin_layout Plain Layout

		Factura marzo
\end_layout

\begin_layout Plain Layout

		+	Coste	235
\end_layout

\begin_layout Plain Layout

		+	IVA	0.15
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/importar_notepad.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Importar-copiando-txt"

\end_inset

Importar copiando de un archivo de texto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el archivo anterior utilizamos tabuladores para definir los nodos hijos
 de uno determinado.
 o sea, que los tecleamos bajo él pero indentadas mediante un tabulador.
 De esta forma 
\begin_inset Quotes eld
\end_inset

Tarea 1
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Tarea 2
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Tarea 3
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

Tarea 4
\begin_inset Quotes erd
\end_inset

 son nodos hijos de 
\begin_inset Quotes eld
\end_inset

Tareas del proyecto
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Así mismo si un nodo tuviera atributos los teclearíamos bajo él utilizando
 la sintaxis 
\begin_inset Quotes eld
\end_inset

+ 
\backslash
t nombre_del_atributo 
\backslash
t valor_del_atributo
\begin_inset Quotes erd
\end_inset

 siendo 
\backslash
t un tabulador.
 En el archivo anterior vemos que 
\begin_inset Quotes eld
\end_inset

Factura enero
\begin_inset Quotes erd
\end_inset

, nodo hijo de 
\begin_inset Quotes eld
\end_inset

Facturas
\begin_inset Quotes erd
\end_inset

 tiene dos atributos: Coste = 1500 e IVA=0.15.
\end_layout

\begin_layout Standard
Si copiamos en el portapapeles de windows el contenido del fichero anterior
 y lo pegamos en un nuevo mapa, el resultado que obtenemos aparece en la
 figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Importar-copiando-txt"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
Otras formas de importar datos es mediante el menú Archivo, Importar.
 Podemos utilizar otro mapa o bien un fichero XML.
\end_layout

\begin_layout Section
Importar los favoritos del navegador
\end_layout

\begin_layout Standard
Desde el menú Archivo, Importar, Favoritos del Explorer obtendremos un mapa
 con todos los favoritos que hemos añadido al explorer de Windows.
 Símplemente tendremos que elegir nuestra carpeta de favoritos que suele
 estar ubicada en C:
\backslash
Users
\backslash
<usuario>
\backslash
Favoritos.
\end_layout

\begin_layout Section
Importar la estructura de carpetas de nuestras unidades
\end_layout

\begin_layout Standard
Si pinchamos en Archivo, Importar, Estructura de carpetas se mostrará un
 archivo con la estructura de carpetas del directorio escogido.
 Otra forma de ver un mapa mental con la estructura del disco duro del ordenador
 es elegir Mapas, Modos, Gestor de archivos.
\end_layout

\begin_layout Chapter
Buscando información en nuestro mapa
\end_layout

\begin_layout Section
Búsqueda rápida
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement r
overhang 10col%
width "0col%"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Archivos/Barra_busquedas.png
	scale 55
	rotateAngle 90

\end_inset


\end_layout

\end_inset

Cuando el mapa con el que estamos trabajando se va llenando podemos tener
 problemas a la hora de localizar la información.
 Para esto Freeplane dispone de una herramienta muy interesante: la barra
 de búsquedas.
 En el margen derecho de esta página podemos ver qué aspecto tiene (se muestra
 en vertical).
 Puede mostrarse pulsando 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{CTRL}
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tecla{F}
\end_layout

\end_inset

 o eligiendo del menú Ver, Controles, Barra de herramientas de filtros y
 se encuentra justo sobre el mapa.
 Esta barra tiene varias partes:
\end_layout

\begin_layout Itemize
Casilla Denegar: al marcarla busca los nodos que no coincidan con el texto
 tecleado.
\end_layout

\begin_layout Itemize
Desplegable de la ubicación donde buscar: Nos permite buscar en el texto
 del nodo, en los detalles y en las notas (valor por defecto).
 También podemos buscar iconos, conectores, estilos etc.
\end_layout

\begin_layout Itemize
Desplegable del tipo de comparación: Por defecto se marca 
\begin_inset Quotes eld
\end_inset

Contiene
\begin_inset Quotes erd
\end_inset

 lo cual permite buscar aquellos nodos que contienen la cadena de búsqueda.
 También podemos buscar valores numéricos iguales, superiores o inferiores
 a uno dado o la potente opción de 
\begin_inset Quotes eld
\end_inset

Expresiones regulares
\begin_inset Quotes erd
\end_inset

 que introduciremos a continuación.
\end_layout

\begin_layout Itemize
Desplegable para introducir la cadena de búsqueda: aquí tecleamos lo que
 queremos buscar
\end_layout

\begin_layout Itemize
Caso coincidente: Encuentra solo si el texto coincide totalmente con la
 cadena introducida.
\end_layout

\begin_layout Itemize
Aproximado: Encuentra nodos que contengan una aproximación al texto tecleado.
\end_layout

\begin_layout Itemize
Flechas de navegación (azules): Avanzan y retroceden al siguiente nodo encontrad
o
\end_layout

\begin_layout Itemize
Icono de Filtro rápido: Deja visibles únicamente los nodos encontrados
\end_layout

\begin_layout Itemize
Icono de Destacar los nodos: marca con un recuadro aquellos nodos que coinciden.
\end_layout

\begin_layout Standard
En esta barra podemos buscar en varias ubicaciones del mapa: en el texto
 del nodo, en los detalles, en las notas, podemos buscar iconos, enlaces
 etc.
 Normalmente está seleccionado 
\begin_inset Quotes eld
\end_inset

Esencial, detalle o notas
\begin_inset Quotes erd
\end_inset

 indicando que es allí donde buscará.
 Únicamente tenemos que escribir aquello que deseamos buscar y pinchar en
 las flechas azules de esa misma barra para navegar por todas las coincidencias.
 Si marcamos la casilla 
\begin_inset Quotes eld
\end_inset

Denegar
\begin_inset Quotes erd
\end_inset

 Freeplane encontrará todos los nodos que NO coincidan con la búsqueda realizada.
 Y si marcamos 
\begin_inset Quotes eld
\end_inset

Aproximado
\begin_inset Quotes erd
\end_inset

 encontrará todo lo que se parezca.
\end_layout

\begin_layout Standard
Sin embargo hay otras dos opciones más interesantes que son las dos últimas
 opciones de esa barra de búsquedas:
\end_layout

\begin_layout Itemize
Filtro rápido para dejar visibles sólo los nodos coincidentes.
\end_layout

\begin_layout Itemize
Destacar todos los nodos coincidentes: marca con un recuadro aquellos nodos
 que coinciden.
\end_layout

\begin_layout Section
Expresiones regulares de Freeplane
\end_layout

\begin_layout Standard
Una de las opciones de búsqueda más potentes son las expresiones regulares.
 Son caracteres comodín que nos permiten hacer búsquedas genéricas.
 Así si tecleamos 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

....eso
\end_layout

\end_inset

 buscará palabras de 7 letras que tengan la terminación -eso como 
\begin_inset Quotes eld
\end_inset

Proceso
\begin_inset Quotes erd
\end_inset

 o 
\begin_inset Quotes eld
\end_inset

Expreso
\begin_inset Quotes erd
\end_inset

, pues el punto equivale a cualquier carácter.
 Si buscamos 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

car+o
\end_layout

\end_inset

 buscará las palabras caro, carro, carrro pero también Icaro.
 pues un símbolo más supone repetir una o más veces la letra precedente.
 Un asterisco significa que el carácter precedente se puede repetir cero
 o más veces de forma que 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

car*o
\end_layout

\end_inset

 buscará cao, caro, carro, etc y también Ícaro, encaro, etc.
 El símbolo ^ corresponde al principio de la línea y $ al final de forma
 que 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

^A+
\end_layout

\end_inset

 buscará todos los nodos que comiencen con la letra A.
 Las expresiones regulares nos pueden dar muchos problemas.
 Por ejemplo sin en la búsqueda anterior nos confundimos y tecleamos 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

^A*
\end_layout

\end_inset

 nos encontrará, sin embargo todos los nodos del mapa pues la A se repite
 CERO o más veces al principio.
 Hay símbolos genéricos más interesantes.
 Así si ponemos 
\backslash
s nos buscará un espacio en blanco y 
\backslash
w es cualquier letra de la a a la z mayúscula o minúscula.
 Debemos tener en cuenta que si buscamos usando expresiones regulares, 
\begin_inset Quotes eld
\end_inset

E
\begin_inset Quotes erd
\end_inset

 es distinto a 
\begin_inset Quotes eld
\end_inset

e
\begin_inset Quotes erd
\end_inset

 pues se diferencian mayúsculas de minúsculas.
 
\backslash
d es un dígito.
 Si ponemos 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout


\backslash
d
\backslash
d
\backslash
d
\end_layout

\end_inset

 encontrará números de 3 dígitos.
\end_layout

\begin_layout Standard
Las expresiones regulares nos dan muchas más opciones que veros en la parte
 avanzada de esta guía.
 De momento estas nos permitirán realizar búsquedas muy poderosas.
 En la tabla siguiente se muestra una lista reducida de opciones.
 En la parte avanzada veremos esto en profundidad.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
carácter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
significado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cero o más repeticiones del carácter anterior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
uno o más repeticiones del carácter anterior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
^
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comienzo de línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fin de línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter de una palabra: a-zA-Z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter que no sea el anterior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Espacio en blanco
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter que no sea un espacio en blanco
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Un dígito
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier cosa que no sea un dígito
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tabulación
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Retorno de carro
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nueva línea
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Filtros
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Barra-de-filtros"

\end_inset

Barra de herramientas de filtros
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Filtro_barra.png

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Otra forma de visualizar la información que buscamos es aplicar un filtro
 a los nodos.
 Un filtro sirve para ver determinados nodos del mapa ocultando el resto.
 Tenemos acceso a una barra de filtros mediante Ver, Controles, Barra de
 herramientas de filtros.
 Se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barra-de-filtros"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 En ella podemos aplicar filtros predefinidos, mostrar los nodos ascendientes
 o descendientes, quitar un filtro aplicado o editarlo.
\end_layout

\begin_layout Standard
La ventana que aparece cuando pinchamos en el menú Filtro, Editar o pinchamos
 en el último icono de esta barra aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ventana-de-filtros"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Contiene los mismos elementos que hemos visto anteriormente para las búsquedas:
 dónde queremos buscar la información, condición a aplicar y texto a buscar.
 En dicha ventana, además, vemos un filtro ya definido al que hemos llamado
 
\begin_inset Quotes eld
\end_inset

Tareas
\begin_inset Quotes erd
\end_inset

.
 Según aparece en la parte inferior, esta condición mostrará únicamente
 los nodos cuyo estilo sea, precisamente 
\begin_inset Quotes eld
\end_inset

Tareas
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ventana-de-filtros"

\end_inset

Ventana de filtros
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Filtro_ventana.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como hemos dicho podemos darle un nombre a estas opciones de búsqueda.
 Dicho nombre aparecerá en el menú Filtro, user-defined filters y el el
 desplegable 
\begin_inset Quotes eld
\end_inset

Sin Filtro
\begin_inset Quotes erd
\end_inset

 de la barra de filtros.
 Si lo seleccionamos se aplicará el fitro que hemos guardado antes.
\end_layout

\begin_layout Standard
Podemos entender los filtros como una forma de ver el mapa desde distintas
 perspectivas.
\end_layout

\begin_layout Standard
Los distintos tipos de condiciones que hay son:
\end_layout

\begin_layout Itemize
Esencial, detalle o notas: Si queremos aplicar un estilo con nombre cuando
 el nodo, su detalle o sus notas contengan un texto determinado.
\end_layout

\begin_layout Itemize
Texto del nodo: Si queremos aplicar un estilo con nombre cuando el nodo
 contenga un texto determinado.
\end_layout

\begin_layout Itemize
Detalles: Si queremos aplicar un estilo con nombre cuando detalle del nodo
 contenga un texto determinado.
\end_layout

\begin_layout Itemize
Nota: Si queremos aplicar un estilo con nombre cuando la nota del nodo contenga
 un texto determinado.
\end_layout

\begin_layout Itemize
Texto de origen
\end_layout

\begin_layout Itemize
Icono: aplicamos el estilo si contiene un determinado icono.
\end_layout

\begin_layout Itemize
Hiperenlace: Si el hiperenlace del nodo es uno determinado
\end_layout

\begin_layout Itemize
Etiqueta del conector: si la etiqueta del conector del nodo es una concreta
\end_layout

\begin_layout Itemize
Conector: si tiene conector aplicamos un estilo.
\end_layout

\begin_layout Itemize
Filtro de fecha
\end_layout

\begin_layout Itemize
Prioridad
\end_layout

\begin_layout Itemize
Estilo
\end_layout

\begin_layout Itemize
Clones
\end_layout

\begin_layout Itemize
Nivel del nodo
\end_layout

\begin_layout Itemize
Recordatorio
\end_layout

\begin_layout Itemize
Filtro de script: código que tenga como resultado un booleano.
 Por ejemplo, usado con expresiones regulares (veremos esto en la parte
 avanzada):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

node.shortText==~ /.*(.-)$/
\end_layout

\end_inset

 Se aplica el estilo si el texto del nodo acaba en 
\begin_inset Quotes eld
\end_inset

.-
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

node.shortText==~ /.*[!]$/
\end_layout

\end_inset

 Se aplica el estilo si el texto del nodo acaba el 
\begin_inset Quotes eld
\end_inset

!
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

node.shortText==~ /^!.*/
\end_layout

\end_inset

 Si el texto del nodo comienza con 
\begin_inset Quotes eld
\end_inset

!
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Attribute name or value: si hay un atributo con ese nombre o con ese valor
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

nombre de atributo
\begin_inset Quotes erd
\end_inset

: si el atributo con ese nombre contiene el valor especificado.
\end_layout

\begin_layout Subsection
Gestión de los filtros guardados
\end_layout

\begin_layout Standard
La ventana de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ventana-de-filtros"
plural "false"
caps "false"
noprefix "false"

\end_inset

 se utiliza no solo para definir filtros, sino también para gestionarlos.
 Vemos que en la parte derecha aparecen unos iconos que procedemos a explicar.
 Son en total 9 iconos cuyo significado, de arriba a abajo es el siguiente
\end_layout

\begin_layout Enumerate
Icono Añadir (con el + rojo): Añadir el filtro a nuestra lista
\end_layout

\begin_layout Enumerate
Icono No (con el símbolo 
\begin_inset Formula $\oslash$
\end_inset

 rojo): Añadimos otro filtro negando la condición seleccionada
\end_layout

\begin_layout Enumerate
Icono Y (con el símbolo &): Seleccionando dos iconos, añadimos otro filtro
 aplicando ambas condiciones (condición Y, deben coincidir simultáneamente).
\end_layout

\begin_layout Enumerate
Icono O: Seleccionando dos iconos, añadimos otro filtro aplicando ambas
 condiciones (condición O, debe cumplirse o una condición o la otra).
\end_layout

\begin_layout Enumerate
Icono dividir: Si tenemos un filtro compuesto mediante condiciones O / Y,
 este icono lo divide en dos filtros.
\end_layout

\begin_layout Enumerate
Icono Borrar (con la X roja): Borra el filtro seleccionado
\end_layout

\begin_layout Enumerate
Icono nombrar: pone un nombre al filtro seleccionado
\end_layout

\begin_layout Enumerate
Icono Arriba (con la flecha hacia arriba): sube una línea el filtro seleccionado
\end_layout

\begin_layout Enumerate
Icono Abajo (con la flecha hacia abajo): baja una línea el filtro seleccionado
\end_layout

\begin_layout Standard
Hay que advertir aquí que los filtros se definen para el usuario, no para
 el mapa en curso.
 Esto significa que una vez definido un filtro y guardado tendremos acceso
 al mismo en cualquier mapa que abramos.
\end_layout

\begin_layout Chapter
Haciendo presentaciones con Freeplane
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
Contar con un apoyo visual a la hora de presentar un proyecto o incluso
 a nosotros mismos puede ser la diferencia entre el éxito y el fracaso.
 Si bien son de sobra conocidos los programas específicos para la realización
 de presentaciones tales como Powerpoint de Microsoft, Keynote de Apple
 o Impress de LibreOffice, cada vez están más de moda herramientas más originale
s que podemos encontrar en la web tales como Prezi.
\end_layout

\begin_layout Standard
Una presentación eficaz debe cumplir una serie características:
\end_layout

\begin_layout Itemize
Centrarse en el público y en el proyecto presentado.
\end_layout

\begin_layout Itemize
Ser simple, evitando detalles innecesarios o demasiada información.
\end_layout

\begin_layout Itemize
Emplear distintos tipos de recursos no solo texto.
 Incluiremos también gráficos, imágenes etc.
\end_layout

\begin_layout Itemize
Aprovechar todos los elementos gráficos disponibles.
 Una imagen vale más que mil palabras.
\end_layout

\begin_layout Standard
En este sentido, Freeplane se nos presenta como una herramienta ideal para
 cubrir todas estas condiciones.
 Podemos mostrar no solo texto e imágenes, sino que también se expondrán
 las relaciones y jerarquía de la información presentada.
 Además es vital conseguir mantener la atención del público y el uso de
 esta forma tan original redunda en nuestro beneficio.
\end_layout

\begin_layout Section
Enseñando nuestro mapa
\end_layout

\begin_layout Standard
Si deseamos mostrar el mapa en público debemos, en primer lugar, prestar
 especial cuidado en su realización según decíamos en el primer capítulo.
 Cuando ya lo tengamos completado podremos comenzar a preparar la presentación.
\end_layout

\begin_layout Standard
Al público solo le interesa la información que tenemos que comunicar, por
 lo cual cuando se muestre el mapa en el proyector le ocultaremos todos
 los elementos que le puedan distraer, el propio Freeplane.
 Para hacer esto únicamente tenemos que activar Freeplane en pantalla completa
 pulsando F11.
 Se mostrará sólo el mapa y la ventana de notas si la tenemos abierta (podemos
 ocultarla pinchando con el botón derecho del ratón y eligiendo mostrar/ocultar
 ventana de notas).
\end_layout

\begin_layout Standard
Ya podremos mostrar por nuestro mapa navegando a través de los nodos.
 También podemos expandirlos y colapsarlos.
 Dependiendo de las opciones de visualización que tengamos activas el mapa
 se verá de una u otra forma.
 Particularmente útiles pueden ser las siguientes opciones, disponibles
 en le menú Ver, Ver configuración:
\end_layout

\begin_layout Itemize
Ver, vista en esquema: Se mostrará una representación en árbol del mapa.
\end_layout

\begin_layout Itemize
Resaltado: Aparecerá en gris todo el mapa excepto el nodo seleccionado.
\end_layout

\begin_layout Itemize
Muestra / Oculta la selección dentro de un rectángulo: Aparece un rectángulo
 alrededor del nodo seleccionado.
\end_layout

\begin_layout Itemize
Mueve el nodo seleccionado a la izquierda / derecha: Al pinchar en un nodo
 aparece en el borde izquierdo o derecho mostrando únicamente los nodos
 descendientes de él.
\end_layout

\begin_layout Itemize
Centrar el nodo seleccionado: Centra en medio de la pantalla el nodo seleccionad
o.
\end_layout

\begin_layout Standard
En la segunda parte os enseñaremos la herramienta de Freeplane para preparar
 presentaciones más elaboradas.
 Esto ya requiere más preparación, pues iremos confeccionando una serie
 de diapositivas con los nodos que elijamos.
 Esta herramienta se muestra en el panel lateral de formato eligiendo la
 pestaña 
\begin_inset Quotes eld
\end_inset

Presentaciones
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Part
Freeplane avanzado
\end_layout

\begin_layout Chapter
Texto avanzado
\end_layout

\begin_layout Section
HTML en los nodos
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Edición-avanzada-nodo"

\end_inset

Edición avanzada del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Edicion_avanzada_nodo.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En realidad, un nodo no es únicamente texto, sino código html.
 Podemos verlo si pinchamos con el botón derecho encima del nodo y elegimos
 
\begin_inset Quotes eld
\end_inset

Editar el nodo
\begin_inset Quotes erd
\end_inset

.
 Aparecerá la ventana de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Edición-avanzada-nodo"
plural "false"
caps "false"
noprefix "false"

\end_inset

 en la que se muestra el contenido del nodo 
\begin_inset Quotes eld
\end_inset

Mi nodo
\begin_inset Quotes erd
\end_inset

 con la pestaña 
\begin_inset Quotes eld
\end_inset

Vista de código HTML
\begin_inset Quotes erd
\end_inset

 activa en lugar de la habitual, 
\begin_inset Quotes eld
\end_inset

Vista de disposición
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Vemos que esa ventana dispone de una barra de formato superior para poder
 usar formatos avanzados.
 Para ello abriremos la pestaña 
\begin_inset Quotes eld
\end_inset

Vista de disposición
\begin_inset Quotes erd
\end_inset

, seleccionaremos el texto a modificar y luego el formato a usar (negrita,
 color del texto, etc).
\end_layout

\begin_layout Standard
También en la vista de disposición podemos insertar tablas con el menú de
 la ventana Tabla.
 Podemos así mismo añadir listas numeradas o con viñetas.
\end_layout

\begin_layout Standard
Sin embargo a veces estos formatos se nos quedan cortos.
 Como no deja de ser texto HTML podemos utilizar sus etiquetas para dar
 formatos más personalizados.
\end_layout

\begin_layout Standard
A continuación se incluye un tutorial rápido de HTML con todo lo que podemos
 añadir en la vista de código HTML de dicho editor avanzado.
\end_layout

\begin_layout Section
Tutorial rápido de HTML
\end_layout

\begin_layout Subsection
Formato básico
\end_layout

\begin_layout Standard
Las etiquetas para un formateo básico a nivel de html son las siguientes:
\end_layout

\begin_layout Itemize
<b> - Negrita
\end_layout

\begin_layout Itemize
<i> - Cursiva
\end_layout

\begin_layout Itemize
<s> - Tachado
\end_layout

\begin_layout Itemize
<sub> - Subíndice
\end_layout

\begin_layout Itemize
<sup> - Superíndice
\end_layout

\begin_layout Itemize
<p> - Nuevo párrafo
\end_layout

\begin_layout Itemize
<br/> - Salto de línea
\end_layout

\begin_layout Itemize
<hr> - Dibuja una línea
\end_layout

\begin_layout Itemize
<big> - Texto grande
\end_layout

\begin_layout Standard
Para definir con más detalle la fuente, tamaño y tipo de letra usamos el
 siguiente código:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<p>
\end_layout

\begin_layout Plain Layout

<font size="30" face="monospace" color="green">This is some text!</font>
\end_layout

\begin_layout Plain Layout

</p>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Siendo face la forma de la fuente, tal como serif, monospaced, ...
\end_layout

\begin_layout Standard
También tenemos acceso a los encabezados, títulos de orden 1, 2.
 etc si escribimos:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<h1>This is heading 1</h1>
\end_layout

\begin_layout Plain Layout

<h2>This is heading 2</h2>
\end_layout

\begin_layout Plain Layout

<h3>This is heading 3</h3>
\end_layout

\begin_layout Plain Layout

<h4>This is heading 4</h4>
\end_layout

\begin_layout Plain Layout

<h5>This is heading 5</h5>
\end_layout

\begin_layout Plain Layout

<h6>This is heading 6</h6>
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Caracteres especiales
\end_layout

\begin_layout Standard
Podemos insertar caracteres especiales en la vista html del nodo o la nota.
 Para ello podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
código
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
aparece
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&larr;
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flecha a la izquierda
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&rarr;
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flecha a la derecha
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&uarr;
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flecha arriba
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&darr;
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flecha abajo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&Gamma;
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
letra griega gamma mauyúscula
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&#9742;
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
muestra un teléfono
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Hay cientos de símbolos de este tipo por lo que no los incluiremos todos
 en esta introducción.
 Sin embargo puedes consultar la página de 
\begin_inset CommandInset href
LatexCommand href
name "w3schools"
target "https://www.w3schools.com/html/html_symbols.asp"
literal "false"

\end_inset

 para más detalles.
\end_layout

\begin_layout Subsection
Enlaces
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

<a href="URI">linktext</a>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los enlaces se identifican por el tipo de URI (uniform resource identifier),
 que es el atriburto de el anterior comando href.
 Se permiten los siguientes tipos de URI:
\end_layout

\begin_layout Itemize
Ancla en el mismo documento (e.g.
 #anchorname) 
\end_layout

\begin_layout Itemize
Otro documento (e.g.
 myDoc.htm)
\end_layout

\begin_layout Itemize
Un documento en otro directorio (e.g.
 ../directory/myDoc.htm) 
\end_layout

\begin_layout Itemize
Ancla en otro documento (e.g.
 myDoc.htm#anchorname) 
\end_layout

\begin_layout Itemize
Ancla en un documento de otro directorio (e.g.
 ../directory/myDoc.htm#anchorname)
\end_layout

\begin_layout Itemize
Dirección web (http://...)
\end_layout

\begin_layout Itemize
Dirección de un documento local ( file://...)
\end_layout

\begin_layout Itemize
Servidor FTP (ftp://...)
\end_layout

\begin_layout Itemize
Servidor Telnet ( telnet://...) 
\end_layout

\begin_layout Itemize
Correo electrónico ( mailto:name@domain.xy)
\end_layout

\begin_layout Standard
Para definir un ancla en un documento escribiremos: 
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

<a name="anchorname">link anchor text</a>
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
En lugar de un texto (
\begin_inset Quotes eld
\end_inset

linktext
\begin_inset Quotes erd
\end_inset

 en el código de arriba) podemos poner una imagen de la siguiente forma:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<a href="home.htm"> 
\end_layout

\begin_layout Plain Layout

<imgsrc="anImageFile.jpg" width="160" height="34" border="0"> 
\end_layout

\begin_layout Plain Layout

</a>
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Referencia a imágenes
\end_layout

\begin_layout Standard
Para mostrar una imagen teclearemos:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<img src="images/picture.jpg" border=0 width=100 height=200>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las referencias al fichero pueden ser realtivas como el ejemplo superior
 o absolutas como en 
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

C:/data/documents/myDoc/images/picture.jpg
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Tablas
\end_layout

\begin_layout Standard
La estructura de un documento con una tabla es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<table border=
\begin_inset Quotes erd
\end_inset

1
\begin_inset Quotes erd
\end_inset

 bgcolor="yellow" cellpadding="10" cellspacing="10" width="400">  
\end_layout

\begin_layout Plain Layout

<caption>Titulo de la tabla</caption>
\end_layout

\begin_layout Plain Layout

<tr>  
\end_layout

\begin_layout Plain Layout

	<td>  
\end_layout

\begin_layout Plain Layout

		<p>  
\end_layout

\begin_layout Plain Layout

			row 1, column 1  
\end_layout

\begin_layout Plain Layout

		</p>  
\end_layout

\begin_layout Plain Layout

	</td>  
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	<td>  
\end_layout

\begin_layout Plain Layout

		<p>  
\end_layout

\begin_layout Plain Layout

		row 1, column 2  
\end_layout

\begin_layout Plain Layout

		</p>  
\end_layout

\begin_layout Plain Layout

	</td>  
\end_layout

\begin_layout Plain Layout

</tr>  
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<tr>  
\end_layout

\begin_layout Plain Layout

	<td>  
\end_layout

\begin_layout Plain Layout

		<p>  
\end_layout

\begin_layout Plain Layout

			row 2, column 1  
\end_layout

\begin_layout Plain Layout

		</p>  
\end_layout

\begin_layout Plain Layout

	</td>  
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	<td> 
\end_layout

\begin_layout Plain Layout

		<p>  
\end_layout

\begin_layout Plain Layout

			row 2, column 2  
\end_layout

\begin_layout Plain Layout

		</p>  
\end_layout

\begin_layout Plain Layout

	</td>  
\end_layout

\begin_layout Plain Layout

</tr>  
\end_layout

\begin_layout Plain Layout

</table> 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las opciones pueden colocarse también en las etiquetas <td> para afectar
 sólo a una celda.
 Su significado es el siguiente:
\end_layout

\begin_layout Itemize
border: anchura del borde.
\end_layout

\begin_layout Itemize
bgcolor: color del fondo de la celda / tabla.
\end_layout

\begin_layout Itemize
cellpadding: espacio entre el contenido de la celda y los bordes.
\end_layout

\begin_layout Itemize
cellspacing: espacio entre celdas.
\end_layout

\begin_layout Itemize
width: anchura de la celda / tabla.
\end_layout

\begin_layout Subsection
Listas
\end_layout

\begin_layout Standard
Podemos mostrar listas mediante este código html:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<ul> 
\end_layout

\begin_layout Plain Layout

	<li> 
\end_layout

\begin_layout Plain Layout

		<p> 
\end_layout

\begin_layout Plain Layout

			Item 1 
\end_layout

\begin_layout Plain Layout

		</p> 
\end_layout

\begin_layout Plain Layout

	</li> 
\end_layout

\begin_layout Plain Layout

	<li>
\end_layout

\begin_layout Plain Layout

		<p> 
\end_layout

\begin_layout Plain Layout

			Item 2 
\end_layout

\begin_layout Plain Layout

		</p> 
\end_layout

\begin_layout Plain Layout

	</li> 
\end_layout

\begin_layout Plain Layout

</ul>
\end_layout

\end_inset

Hay dos tipos de listas.
 Mediante elementos <ul> como el caso anterior y mediante elementos <ol>
 (únicamente sustituiríamos todos los los ul por ol).
 Las listas ul se muestran con un punto negro delante de los elementos y
 las ol son listas numeradas.
\end_layout

\begin_layout Subsection
Definiciones
\end_layout

\begin_layout Standard
Podemos añadir definicinones al estilo de las entradas de un diccionario
 con este código:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<dl>
\end_layout

\begin_layout Plain Layout

  <dt>Coffee</dt>
\end_layout

\begin_layout Plain Layout

  <dd>Black hot drink</dd>
\end_layout

\begin_layout Plain Layout

  <dt>Milk</dt>
\end_layout

\begin_layout Plain Layout

  <dd>White cold drink</dd>
\end_layout

\begin_layout Plain Layout

</dl>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Siendo dt el elemento que definimos y dd su definición.
\end_layout

\begin_layout Subsection
Definiendo estilos
\end_layout

\begin_layout Standard
De momento la versión de html que implementa Freeplane no admite ficheros
 de estilos, .css.
 Incluso aunque observemos en el código html del nodo el comando <style>
 no podemos cambiarlo pues al salir del panel de edición Freeplane lo borra.
\end_layout

\begin_layout Section
Látex en los nodos
\end_layout

\begin_layout Subsection
Qué es latex
\end_layout

\begin_layout Standard
Latex es un sistema avanzado de creacion de documentos de alta calidad tipográfi
ca orientado a la composición de artículos, libros y documentos científicos.
 Se compone por un conjunto de macros de TeX que originalmente fueron desarrolla
dos por Leslie Lamport en 1984 para simplificar el uso de este lenguaje
 TeX creado por Donald Knuth.
\end_layout

\begin_layout Standard
Dada la calidad tipográfica de los documentos realizados en LaTeX, se la
 considera adecuada a las necesidades de cualquier editorial científica
 de primera línea.
\end_layout

\begin_layout Standard
Los documentos escritos en LaTeX constan de instrucciones incluidas con
 el resto del contenido del texto y sirven para darle formato.
 Dichas instrucciones comienzan con una barra invertida: 
\begin_inset Quotes eld
\end_inset


\backslash

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Por ejemplo, si quisieramos escribir la frase 
\begin_inset Quotes eld
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
LaTeX
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

 es un 
\bar under
sistema de creación de documentos
\bar default
 
\series bold
de alta calidad tipográfica
\series default
 orientado a la 
\shape italic
composición de libros
\shape default

\begin_inset Quotes erd
\end_inset

 tendríamos que poner: 
\begin_inset listings
lstparams "language=TeX,breaklines=true"
inline false
status open

\begin_layout Plain Layout


\backslash
LaTeX es un 
\backslash
uline{sistema de creación de documentos} 
\backslash
textbf{de alta calidad tipográfica} orientado a la 
\backslash
textit{composición de libros}
\end_layout

\end_inset

En esta frase encontramos varios comandos latex:
\end_layout

\begin_layout Itemize

\backslash
LaTeX Este comando imprime el logo de Latex.
\end_layout

\begin_layout Itemize

\backslash
uline{texto} sirver para subrayar.
\end_layout

\begin_layout Itemize

\backslash
textbf{texto} indica negrita.
\end_layout

\begin_layout Itemize

\backslash
textit{texto} pone el texto en cursiva.
\end_layout

\begin_layout Subsection
Utilizando latex en nuestros mapas
\end_layout

\begin_layout Standard
Además de escribir texto simple, también podemos añadir estos códigos Latex
 para añadir más vistosidad a nuestros mapas.
 Lo único que tenemos que hacer es comenzar el texto con 
\begin_inset Quotes eld
\end_inset


\backslash
latex
\begin_inset Quotes erd
\end_inset

 en el nodo.
 No funciona ni el en detalle ni en las notas.
 
\end_layout

\begin_layout Standard
Freeplane usa el editor JLatexMath.
 Es una API de Java usada para renderizar el resultado de los comandos latex
 que puedes encontrar en 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/opencollab/jlatexmath"

\end_inset

.
\end_layout

\begin_layout Standard
Por ejemplo, cuando escribimos en un nodo 
\begin_inset listings
lstparams "language=Java,basicstyle={\small},breaklines=true,showspaces=true"
inline true
status open

\begin_layout Plain Layout


\backslash
latex my formula: $x_2 = 
\backslash
frac{1}{2}$
\end_layout

\end_inset

 veremos algo así: 
\begin_inset Formula $x_{2}=\frac{1}{2}$
\end_inset

.
 Es necesario encerrar la fórmula en símbolos 
\begin_inset Quotes eld
\end_inset

$
\begin_inset Quotes erd
\end_inset

 para que se muestre en línea.
\end_layout

\begin_layout Standard
Otra forma para insertar una fórmula látex es establecer el formato látex
 en el nodo.
 Para ello, en el apartado Texto del nodo, en formato establecer látex.
 Cuando pinches F2 para editar el nodo te saldrá el editor de latex.
 Debe encerrarse la fórmula latex entre 
\backslash
[ y 
\backslash
].
 Por ejemplo, podemos teclear 
\begin_inset listings
lstparams "language=Java,basicstyle={\small}"
inline true
status open

\begin_layout Plain Layout

$
\backslash
lim_{x 
\backslash
to 
\backslash
infty} 
\backslash
exp(-x) = 0$
\end_layout

\end_inset

 y la formula se mostrará correctamente.
\end_layout

\begin_layout Standard
También podemos incluir los comandos incluidos en un fichero si ponemos
 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout


\backslash
latexinput{<file>}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Algunos comandos
\end_layout

\begin_layout Standard
Latex es un tema muy extenso pues incluye miles de comandos.
 Algunos aparecen a continuación:
\end_layout

\begin_layout Itemize
Tamaño de letra: 
\backslash
tiny 
\backslash
scriptsize 
\backslash
footnotesize 
\backslash
small 
\backslash
normalsize 
\backslash
large 
\backslash
Large 
\backslash
LARGE 
\backslash
huge 
\backslash
Huge
\end_layout

\begin_layout Itemize
Alunas fuentes: 
\backslash
mathcal{ABC} 
\backslash
mathrm{abc} 
\backslash
mathbf{abc} 
\backslash
mathsf{abc} 
\backslash
mathit{abc}
\end_layout

\begin_layout Itemize
Color en el texto: 
\backslash
textcolor{color}{...} con colores como red, green, yellow...
\end_layout

\begin_layout Itemize
Definir recuadros de colores: 
\backslash
fcolorbox{blue}{red}{2012
\backslash
text{ ¡es ahora!}
\end_layout

\begin_layout Itemize
Girar estos recuadros: 
\backslash
rotatebox{25}{
\backslash
fcolorbox{blue}{red}{2012
\backslash
text{ ya llegó}}
\end_layout

\begin_layout Itemize
Tablas: 
\backslash
begin{tabular}{| l |c ||r |} 
\backslash
hline 1 & 2 & 3 
\backslash

\backslash
 
\backslash
hline 4 & 5 & 6 
\backslash

\backslash
 
\backslash
hline 7 & 8 & 9 
\backslash

\backslash
 
\backslash
hline 
\backslash
end{tabular} Otro
\end_layout

\begin_layout Itemize
Matrices: 
\backslash
begin{array}{|c|c|} 
\backslash
hline 
\backslash
multicolumn{2}{|c|}{
\backslash
text{Title}} 
\backslash

\backslash
 
\backslash
hline x & y
\backslash

\backslash
 
\backslash
hline a & b
\backslash

\backslash
 c & c
\backslash

\backslash
 d & e
\backslash

\backslash
 
\backslash
hline 
\backslash
end{array} Para
\end_layout

\begin_layout Itemize
funciones matemáticas:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Fracciones: 
\backslash
frac{x}{y}
\end_layout

\begin_layout Itemize
Raíz cuadrada: 
\backslash
sqrt[n]{x}
\end_layout

\begin_layout Itemize
Superíndice: ^{x}
\end_layout

\begin_layout Itemize
Subíndice: _{x}
\end_layout

\begin_layout Itemize
Sumatorio 
\backslash
sum_{k=1}^n
\end_layout

\begin_layout Itemize
Menor o igual: 
\backslash
leq
\end_layout

\begin_layout Itemize
Símbolo de no igual: 
\backslash
neq
\end_layout

\begin_layout Itemize
Símbolo dividido: 
\backslash
div
\end_layout

\begin_layout Itemize
Puntos suspensivos: 
\backslash
cdot, 
\backslash
cdots, 
\backslash
ldots
\end_layout

\end_deeper
\begin_layout Itemize
Letras griegas
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\backslash
alpha, 
\backslash
Alpha
\end_layout

\begin_layout Itemize

\backslash
beta,No igual 
\backslash
Beta
\end_layout

\begin_layout Itemize

\backslash
gamma, 
\backslash
Gamma
\end_layout

\begin_layout Itemize

\backslash
rho, 
\backslash
Rho
\end_layout

\begin_layout Itemize

\backslash
psi, 
\backslash
Psi
\end_layout

\end_deeper
\begin_layout Standard
Un ejemplo de \SpecialChar LaTeX
 aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ejemplo-latex"
plural "false"
caps "false"
noprefix "false"

\end_inset

 donde aparece el comando latex debajo de su renderización en el nodo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ejemplo-latex"

\end_inset

Ejemplo de \SpecialChar LaTeX

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Latex.png
	lyxscale 75
	scale 80

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Más comandos
\end_layout

\begin_layout Standard
En 
\begin_inset CommandInset href
LatexCommand href
target "http://en.wikibooks.org/wiki/LaTeX/Mathematics"
literal "false"

\end_inset

 podemos ver una lista de los comandos látex disponibles.
\end_layout

\begin_layout Standard
Podemos añadir nuevos comandos a Latex en Preferencias / Complementos /
 Macros Latex en común donde podemos escribir nuestros 
\backslash
newcommand que indica a latex la definición de un nuevo comando.
\end_layout

\begin_layout Section
Aprendizaje mediante mapas mentales
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Dividir-Ideas"

\end_inset

Dividir Ideas
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Split_ideas.png
	lyxscale 25
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El cerebro procesa mejor la información contenida en los mapas mentales
 si los nodos tienen todos el mismo ancho y si el texto está centrado en
 el nodo.
 Si procuramos poner en cada nodo una palabra ó secuencia de ideas le facilitare
mos la tarea.
 Para ello elegiremos las palabras que provoquen que en nuestro cerebro
 se disparen las asociaciones de ideas.
 Estas palabras las denominamos 
\begin_inset Quotes eld
\end_inset

disparadores
\begin_inset Quotes erd
\end_inset

.
 Esto hace que el conocimiento contenido en el mapa sea más limpio.
 Estas palabras 
\begin_inset Quotes eld
\end_inset

disparadores
\begin_inset Quotes erd
\end_inset

 son palabras cortas que contienen gran cantidad de conocimiento y que provocan
 que nuestro cerebro se llene de nuevas ideas.
 Podemos organizar el conocimiento del mapa utilizando estas palabras de
 forma que incluyamos toda la información dentro de sus nodos.
\end_layout

\begin_layout Standard
El cerebro puede dedicarse a una tarea en cada momento y es necesario hacerle
 las cosas lo más atractivas posible.
 Por todo ello dividiremos las ideas al máximo.
 Es mejor tener 5 nodos con el mismo padre que indiquen
\begin_inset Quotes eld
\end_inset

Dividir
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Ideas
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

lo
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Máximo
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Posible
\begin_inset Quotes erd
\end_inset

 que uno solo con la frase completa, tal y como se muestra en la parte superior
 de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Dividir-Ideas"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Para el cerebro procesar la rama superior es más sencillo que leer el párrafo
 completo de la rama inferior.
\end_layout

\begin_layout Standard
Una vez preparado el mapa tal y como se ha indicado sólo hay que abrir y
 cerrar las ramas del mapa para poder jugar con el conocimiento incluido
 en el mapa.
 Otra cuestión es si debemos realizar una división horizontal ó vertical
 (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:División-horizontal-vertical"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Esto depende de la cantidad de información de las ideas y del espaio que
 tengas en la pantalla.
 En este sentido es más util mantener Freeplane en pantalla completa para
 maximizar el área de trabajo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:División-horizontal-vertical"

\end_inset

División horizontal y vertical del conocimiento
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Organizar_hor_vert.png
	lyxscale 25
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
No debemos estresar al cerebro con nodos con párrafos complejos o con demasiados
 iconos ó imágenes.
 Favoreceremos el aprendizaje mejor si dividimos estos nodos en unidades
 más simples organizadas horizontal o verticalmene y utilizando nodos de
 igual tamaño y simétricos, con el texto en el centro y usando palabras
 que sirvan como disparadores.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:división-ejemplo"

\end_inset

Ejemplo de división del conocimiento
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/split_ejemplo.png
	lyxscale 25
	scale 45

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Freeplane facilita esta división del conocimiento con opciones que encontramos
 en las preferencias de freeplane en la pestaña de 
\begin_inset Quotes eld
\end_inset

Comportamiento
\begin_inset Quotes erd
\end_inset

, en la sección 
\begin_inset Quotes eld
\end_inset

Dividir nodo en palabras
\begin_inset Quotes erd
\end_inset

 y a la hora de hacer el mapa bajo el menú Editar / Nodo central:
\end_layout

\begin_layout Itemize
Dividir con 1 palabra en cada línea
\end_layout

\begin_layout Itemize
Dividir con 2 palabras en cada línea
\end_layout

\begin_layout Itemize
Unir nodos
\end_layout

\begin_layout Chapter
Formato avanzado
\end_layout

\begin_layout Section
Estilos condicionales
\end_layout

\begin_layout Standard
Para poder definir estilos condicionales seguiremos el siguiente proceso:
\end_layout

\begin_layout Enumerate
Crearemos un estilo definido por el usuario al que asignaremos un nombre
\end_layout

\begin_layout Enumerate
Pincharemos en Formato / Gestionar estilos / Gestionar los estilos condicionales
\end_layout

\begin_layout Enumerate
Pincharemos en Nuevo
\end_layout

\begin_layout Enumerate
Doble click encima de la Condición.
 Se abrirá la ventana de Filtros (ver sección siguiente)
\end_layout

\begin_layout Enumerate
En esa pantalla estarán todas las condiciones que hemos definido.
 En particular permanecerá allí la condición 
\begin_inset Quotes eld
\end_inset

Siempre
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
De los desplegables superiores elegiremos la condición que deseamos componer
\end_layout

\begin_layout Enumerate
Una vez compuesta en los desplegables superiores, pincharemos en el icono
 añadir
\end_layout

\begin_layout Enumerate
Una vez la tengamos en la lista inferior la seleccionaremos.
 Si ya estaba dicha condición, únicamente la seleccionaríamos.
\end_layout

\begin_layout Enumerate
Pincharíamos el botón 
\begin_inset Quotes eld
\end_inset

De acuerdo.
\end_layout

\begin_layout Enumerate
En la columna Estilo elegiremos entre los estilos guardados del mapa.
\end_layout

\begin_layout Enumerate
Ordenaremos nuestros estilos condicionales indicando si al aplicar alguno
 se detendrá la comprobación de sucesivos estilos, pues sino se harán todas
 de arriba a abajo.
\end_layout

\begin_layout Standard
Se pueden definir estilos en función del contenido del nodo, de algún atributo,
 el contenido, si tiene conector...Se accede a la ventana de definición de
 estilos condicionales entrando en Formato, Gestionar estilos, Gestionar
 estilos condicionales.
 La ventana que sale es una lista de estilos que se aplican en orden descendente
: para cada nodo se aplica el primero y, si no tiene la marca de stop se
 aplicará el segundo y así sucesivamente.
 Sólo se detendrá cuando encuentre en un estilo la marca de parar.
\end_layout

\begin_layout Standard
Pinchando en 
\begin_inset Quotes fld
\end_inset

nuevo
\begin_inset Quotes frd
\end_inset

 creamos un nuevo estilo condicional.
 Aparece una línea con 4 partes: 
\end_layout

\begin_layout Enumerate
Activa: indica que se aplicará a los nodos ése estilo condicional.
\end_layout

\begin_layout Enumerate
Condición: Condición que debe ser verdadera para aplicar el estilo.
\end_layout

\begin_layout Enumerate
Nombre del estilo que se aplicará
\end_layout

\begin_layout Enumerate
Parar: Si no está marcado, Freeplane continuará aplicando para ése nodo
 el estilo siguiente.
 Si está marcado se detendrá y no aplicará más estilos condicionales.
\end_layout

\begin_layout Standard
Pinchando dos veces encima de la línea que ha aparecido se abrirá la pantalla
 
\begin_inset Quotes eld
\end_inset

Creador de filtros
\begin_inset Quotes erd
\end_inset

 con la lista de las condiciones disponibles (ver sección siguiente).
\end_layout

\begin_layout Standard
De esa lista elegiremos las que se aplican para ésa condición y guardaremos.
 Debe hacerse notar en este punto que la pantalla que sale cuando pinchamos
 en editar (o hacemos doble click en la condición) es común para todos los
 nodos.
 Eso quiere decir que irá llenándose de condiciones a medida que definimos
 los estilos condicionales.
 Sin embargo sólo se aplicarán las condiciones seleccionadas antes de guardar.
 
\end_layout

\begin_layout Standard
Pinchando en la columna de estilo elegimos de la lista el estilo guardado
 que tomará nuestro nodo cuando dicha condición sea verdadera.
\end_layout

\begin_layout Standard
Y finalmente está la columna 
\begin_inset Quotes eld
\end_inset

Parar
\begin_inset Quotes erd
\end_inset

 que indica que después de aplicar esta condición no continuará evaluando
 más condiciones.
 Esto se usa para tener una jerarquía de condiciones con unas más fuertes
 que otras.
 Si esta condición está desmarcada se irán aplicando los formatos de arriba
 a abajo.
 De esta manera podremos combinar varios estilos en el caso de que el nodo
 cumpla dos ó más condiciones de la lista.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Estilos-condicionales"

\end_inset

Estilos condicionales
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/estilos_condicionales.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Estilos-condicionales"
plural "false"
caps "false"
noprefix "false"

\end_inset

 vemos tres estilos condicionales activos (el checkbox 
\begin_inset Quotes eld
\end_inset

Activo
\begin_inset Quotes erd
\end_inset

 está marcado).
 Todos se aplican de arriba a abajo (checkbox Parar sin marcar).
 Son los siguientes:
\end_layout

\begin_layout Enumerate
Se aplicará el estilo 
\begin_inset Quotes eld
\end_inset

Importante
\begin_inset Quotes erd
\end_inset

 si el nodo contiene tres Aes consecutivas.
\end_layout

\begin_layout Enumerate
Se aplicará el estilo 
\begin_inset Quotes eld
\end_inset

Raíz
\begin_inset Quotes erd
\end_inset

 si el estilo comienza con !.
\end_layout

\begin_layout Enumerate
Se aplicará el estilo 
\begin_inset Quotes eld
\end_inset

mayor
\begin_inset Quotes erd
\end_inset

 si el contenido del nodo es mayor de 10.
\end_layout

\begin_layout Chapter
Presentaciones con Freeplane
\end_layout

\begin_layout Standard
Otra utilidad fantástica de freeplane es que podemos preparar el mapa para
 presentarlo con un proyector.
 
\end_layout

\begin_layout Section
Opciones simples para mostrar el mapa
\end_layout

\begin_layout Standard
Lo más sencillo es usar la aplicación en pantalla completa (tecla F11).
 Hay tres entradas del menú Ver / configuración que nos pueden ser útiles:
\end_layout

\begin_layout Itemize
Centrar los nodos seleccionados: al seleccionar un nodo éste se moverá al
 centro de la pantalla.
\end_layout

\begin_layout Itemize
Spootlight: aparecerá el mapa en gris.
 Sólo se mostrará en claro el nodo seleccionado.
\end_layout

\begin_layout Itemize
Mostrar selección dentro de un rectángulo.
\end_layout

\begin_layout Section
Presentaciones complejas en freeplane
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Generar-presentaciones"

\end_inset

Generar presentaciones
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/presentaciones.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El la barra lateral derecha hay una pestaña 
\begin_inset Quotes eld
\end_inset

Presentations
\begin_inset Quotes erd
\end_inset

 con la que podemos construir presentaciones más complejas.
 En freeplane nos referimos a presentar un mapa a ir mostrando diferentes
 partes de nuestro mapa de forma sucesiva.
 Se trata, por tanto, de ir seleccionando qué nodos van a ir apareciendo
 en pantalla.
 De esta forma podemos dar la impresión de que estamos construyendo el mapa
 en directo.
\end_layout

\begin_layout Standard
Las opciones de ese panel, por tanto, son opciones que nos permiten elegir
 qué nodos aparecen y si se muestran los nodos padre ó hijos de los seleccionado
s.
 Vamos a explicarlas.
\end_layout

\begin_layout Standard
El panel de presentaciones se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Generar-presentaciones"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Ese panel tiene cinco partes:
\end_layout

\begin_layout Enumerate
La parte superior, Presentations, nos permite tener varias presentaciones
 para un misma presentación.o mapa.
 Los botones que hay justo debajo nos permiten generar una nueva presentación,
 borrarla ó copiar una presentación que ya tenga el mapa.
\end_layout

\begin_layout Enumerate
La parte 
\begin_inset Quotes eld
\end_inset

Diapositivas
\begin_inset Quotes erd
\end_inset

 que está justo debajo nos permite controlar los diapositivas de la presentación
 actual.
 Como antes, tenemos debajo botones para añadir, copiar y borrar diapositivas.
\end_layout

\begin_layout Enumerate
Bajo la anterior está la parte 
\begin_inset Quotes eld
\end_inset

Slide content
\begin_inset Quotes erd
\end_inset

 que controla el contenido de la diapositiva actual.
 Con los botones inferiores podemos hacer que los nodos seleccionados sean
 los que aparecen en la presentación (primer botón) o bien añadir nuevos
 nodos a los que ya hay (segundo botón).
 Así mismo también podemos eliminar un nodo que ya hemos añadido o, con
 el último icono añadir los nodos a medida que los vamos pinchando en el
 mapa.
\end_layout

\begin_layout Enumerate
A continuación aparece una zona para ver dónde se muestran los nodos: en
 el borde izquierdo, centrados o en el borde derecho.
\end_layout

\begin_layout Enumerate
La zona de debajo permite hacer que se muestren sólo los nodos seleccionados.
 También podemos hacer que se muestren sus nodos padre ó hijos.
\end_layout

\begin_layout Enumerate
La zona que aparece bajo 
\begin_inset Quotes eld
\end_inset

Set filter
\begin_inset Quotes erd
\end_inset

 nos permite añadir nodos que cumplan los requisitos de un filtro que añadamos
 (por ejemplo, queremos que también se muestren los nodos que comiencen
 con 
\begin_inset Quotes eld
\end_inset

!
\begin_inset Quotes erd
\end_inset

 ó que contengan un icono concreto).
\end_layout

\begin_layout Enumerate
La parte 
\begin_inset Quotes eld
\end_inset

Set folding
\begin_inset Quotes erd
\end_inset

 nos permite controlar cómo se mostrarán el plegado de los nodos.
 Podemos hacer que se muestre el nodo con sus hijos, inicialmente plegados
 para que podamos desplegarlos en el momento de realizar la presentación.
\end_layout

\begin_layout Enumerate
Bajo la anterior tenemos los botones que nos permiten iniciar la presentación,
 avanzar de diapositiva y detenerla.
\end_layout

\begin_layout Enumerate
Con la penúltima parte podemos exportar la diapositiva actual o todas las
 de la presentación en imágenes.
 Esto nos permitiría añadirlas a un programa de presentación estándar.
 Sin embargo al hacerlo perdemos la posibilidad de interactuar con los nodos
 del mapa.
\end_layout

\begin_layout Enumerate
Al final hay un botón para cambiar las preferencias de Freeplane.
\end_layout

\begin_layout Section
Diseño de presentaciones
\end_layout

\begin_layout Standard
Una vez sabemos las opciones que tenemos ya podemos centrarnos en diseñar
 nuestra presentación.
\end_layout

\begin_layout Itemize
Generar las diapositivas para mostrar cómo hemos ido construyendo el mapa
\end_layout

\begin_layout Itemize
Aplicar filtros de forma que las diapositivas se generen dinámicamente.
 Por ejemplo, al incluir filtros se mostrarán los nodos con un determinado
 icono en ellos.
\end_layout

\begin_layout Itemize
Diapositivas que muestren eventos sucesivos en una línea de tiempo
\end_layout

\begin_layout Standard
Consideramos que las opciones disponibles son muy amplias y que nos permiten
 una impresionante interacción con el mapa.
\end_layout

\begin_layout Chapter
Programando scripts
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
Vamos a ver en este capítulo una de las características más destacadas de
 Freeplane: la capacidad de programar scripts.
\end_layout

\begin_layout Standard
Un script es como una macro en excel: un archivo de órdenes almacenado en
 un archivo o en los atributos de un nodo que nos servirá para automatizar
 las tareas más pesadas de Freeplane.
 En Freeplane en groovy, un lenguaje programado a objetos implementado sobre
 Java.
\end_layout

\begin_layout Standard
Para comenzar veremos un tutorial rápido de groovy.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Tutorial-groovy"

\end_inset

Tutorial rápido de groovy
\end_layout

\begin_layout Standard
Groovy es un lenguaje de programación orientado a objetos implementado sobre
 la plataforma Java.
 Usa una sintaxis muy parecida a Java y comparte el mismo modelo de objetos,
 de hilos y de seguridad.
 Desde Groovy se puede acceder directamente a todas las API existentes en
 Java.
 El 99% del código Java existente puede ser compilado mediante Groovy, y
 el 100% del código Groovy es convertido en bytecode Java, y ejecutado en
 tu JVM de manera natural.
\end_layout

\begin_layout Subsection
Datos básicos
\end_layout

\begin_layout Itemize
Booleano: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

x = true //ó false
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Números: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

x = 1; y = 2.5; z = -8; val = 
\begin_inset Quotes eld
\end_inset

13
\begin_inset Quotes erd
\end_inset

.toInteger()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cadenas: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

x = 
\begin_inset Quotes erd
\end_inset

Hola mundo
\begin_inset Quotes erd
\end_inset

; s = 
\begin_inset Quotes eld
\end_inset

It
\backslash
's time
\begin_inset Quotes erd
\end_inset

   
\backslash

\backslash
concatenación: 
\begin_inset Quotes eld
\end_inset

hola 
\begin_inset Quotes eld
\end_inset

 + 
\begin_inset Quotes eld
\end_inset

mundo
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Listas: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

mi_lista = [0, 1, 2, 3, 4]
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Conjuntos: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

def mi_conjunto = [0, 1, 2, 3, 4] as Set
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Mapas: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

def periodic = ['h': 'hydrogen', 'he': 'helium', 'li': 'lithium']
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Rangos: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

cuenta_atras = 10..0; minúscula = 'a'..'z' //1..3 == [1, 2, 3]
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Bloque de código: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

cod = {println 
\begin_inset Quotes eld
\end_inset

Hola mundo
\begin_inset Quotes erd
\end_inset

} //Encerrado entre llaves
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Operadores"

\end_inset

Operadores
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
operadores
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
significado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Asignación
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
!
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Negación (complemento)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
==, !=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Igualdad, desigualdad
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+, -, *, /, %, **
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aritméticos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
>, <, >=, <=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relacionales
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++, —
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Incremental y Decremental
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&&, ||, ?:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Condicionales
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<<, >>, >>>, ~, &, |, ^
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Desplazamiento de bits
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+=, -=, *=, /=, &=, |=, ^=, %=, <<=, >>=, >>>=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Asignación compuesta
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Palabras reservadas
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
abstract
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
as
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
assert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
break
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
byte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
case
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
catch
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
char
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
class
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
const
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
continue
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
def
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
do
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
double
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
else
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
enum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
extends
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
false
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
final
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
finally
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
float
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
for
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
goto
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
if
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
implements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
import
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
instanceof
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
interface
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
long
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
native
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
new
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
null
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
package
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
private
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
protected
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
public
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
return
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
short
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
static
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
strictfp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
super
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
switch
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
synchronized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
this
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
threadsafe
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
throw
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
throws
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
trait
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
transient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
void 	volatile 	while		
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Sentencias de control
\end_layout

\begin_layout Subsubsection*
\begin_inset CommandInset label
LatexCommand label
name "subsec:Expresión-if"

\end_inset

Expresión if
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

mayor = (x > 10)? true : false
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Sentencia if-else
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

if(condition) { 
\end_layout

\begin_layout Plain Layout

   statement #1 
\end_layout

\begin_layout Plain Layout

   statement #2 
\end_layout

\begin_layout Plain Layout

   ...
 
\end_layout

\begin_layout Plain Layout

} else if(condition) { 
\end_layout

\begin_layout Plain Layout

   statement #3 
\end_layout

\begin_layout Plain Layout

   statement #4 
\end_layout

\begin_layout Plain Layout

} else { 
\end_layout

\begin_layout Plain Layout

   statement #5 
\end_layout

\begin_layout Plain Layout

   statement #6 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Sentencia switch
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

switch(expression) {
\end_layout

\begin_layout Plain Layout

  case expression #1:
\end_layout

\begin_layout Plain Layout

  statement #1
\end_layout

\begin_layout Plain Layout

  ...
\end_layout

\begin_layout Plain Layout

  case expression #2:
\end_layout

\begin_layout Plain Layout

  statement #2
\end_layout

\begin_layout Plain Layout

  ...
\end_layout

\begin_layout Plain Layout

  case expression #N:
\end_layout

\begin_layout Plain Layout

  statement #N
\end_layout

\begin_layout Plain Layout

  ...
\end_layout

\begin_layout Plain Layout

  default:
\end_layout

\begin_layout Plain Layout

  statement #Default
\end_layout

\begin_layout Plain Layout

  ...
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Bucle while
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

while(condition) {
\end_layout

\begin_layout Plain Layout

  statement #1 
\end_layout

\begin_layout Plain Layout

  statement #2 
\end_layout

\begin_layout Plain Layout

  ...
 }
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Bucle for
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

for(variable declaration;condition;Increment) {
\end_layout

\begin_layout Plain Layout

  statement #1
\end_layout

\begin_layout Plain Layout

  statement #2
\end_layout

\begin_layout Plain Layout

  ...
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bucle for-in:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

for(variable in range) { 
\end_layout

\begin_layout Plain Layout

  statement #1 
\end_layout

\begin_layout Plain Layout

  statement #2 
\end_layout

\begin_layout Plain Layout

  ...
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nota: pueden incluirse las sentencias break y continue para forzar la salida
 o nueva iteración del bucle.
\end_layout

\begin_layout Subsection
Expresiones regulares
\begin_inset CommandInset label
LatexCommand label
name "subsec:Expresiones-regulares"

\end_inset


\end_layout

\begin_layout Standard
Una expresión regular es una cadena de caracteres alguno de los cuales tiene
 un significado especial:.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="22" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
carácter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
significado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cero o más repeticiones del carácter o grupo anterior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
uno o más repeticiones del carácter o grupo anterior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
^
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comienzo de línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fin de línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grupo de caracteres
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subexpresiones
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coincide con el elemento anterior cero o una vez
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{n}
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coincide con el elemento anterior n veces
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{n,m}
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coincide con el elemento anterior al menos n y como mucho m veces
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[a-z]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter entre a y z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter de una palabra: a-zA-Z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter que no sea el anterior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Espacio en blanco
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier carácter que no sea un espacio en blanco
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Un dígito
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier cosa que no sea un dígito
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tabulación
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Retorno de carro
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nueva línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El carácter siguiente se trata como literal (p.e.
 
\backslash
* indica el asterisco)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Para indicar a groovy que la cadena que tenemos es una expresión regular
 en lugar de usar las comillas para encerrar dicha cadena usaremos /cadena/.
 De esta manera podemos escribir 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

/^P[
\backslash
w]*r$/
\end_layout

\end_inset

 representa a todas las cadenas que comienzan con P, contienen sólo letras
 y terminan con r.
 También podemos escribir 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

patron = ~
\begin_inset Quotes erd
\end_inset

^P[
\backslash
w]*r$
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

.
 Esto último define la cadena patrón como de tipo Pattern.
\end_layout

\begin_layout Standard
Hay dos operadores: find 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

=~
\end_layout

\end_inset

 que nos permite ver si una parte de la cadena cumple con la expresión regular
 y match 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

==~
\end_layout

\end_inset

 que permite ver si la cadena completa cumple con dicha expresión.
 De esta forma si escribimos 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

cumple = mi_nombre==~/^P[
\backslash
w]*r$/
\end_layout

\end_inset

 la variable cumple será el booleano true si me llamo 
\shape italic
Peter
\shape default
 ó 
\shape italic
Podar
\shape default
 y false si me llamo 
\shape italic
Luis
\shape default
 ó 
\shape italic
Javier
\shape default
.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Closures"

\end_inset

Closures
\end_layout

\begin_layout Standard
Son variables que almacenan código.
 Ejemplos:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

def cuadrado = {it**2}
\end_layout

\begin_layout Plain Layout

println cuadrado(4) 
\end_layout

\begin_layout Plain Layout

//16
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

class Example {
\end_layout

\begin_layout Plain Layout

  static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

    def clos = {param -> println "Hello, $param"};
\end_layout

\begin_layout Plain Layout

    clos.call('Javi');
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

(10..1).step(1){println it}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

def dailyRainfall = [ monday : 7, 
\end_layout

\begin_layout Plain Layout

                      tuesday : 5,
\end_layout

\begin_layout Plain Layout

                      wednesday: 19, 
\end_layout

\begin_layout Plain Layout

                      thursday : 6,
\end_layout

\begin_layout Plain Layout

                      friday : 11 ]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

dailyRainfall.each { key, value -> println "$key had ${value}mm of rain"
 }
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Closures y listas
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

class Example {
\end_layout

\begin_layout Plain Layout

  static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

    def lst = [11, 12, 13, 14];
\end_layout

\begin_layout Plain Layout

    lst.each {println it}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Métodos-usados-con-closures"

\end_inset

Métodos usados con closures
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="75line%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Método
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
each()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Itera sobre los elementos de la lista y se los pasa al closure uno a uno
 para su tratamiento
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
find()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Encuentra el primer valor de una colección que cumple el criterio
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
findAll()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Encuentra todos los valores de una colección que cumplen los criterios
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
any()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Itera sobre todos los elementos de la lista y devuelve verdadero si el predicado
 es válido para, al menos, un elemento
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
every()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Itera sobre todos los elementos de la lista y devuelve verdadero si el predicado
 es válido para todos los elemento
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
collect()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Itera sobre la colección convirtiendo cada elemento en un valor usando el
 closure como transformador
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
each()
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

(1..3).each {
\end_layout

\begin_layout Plain Layout

    println "Number ${it}"
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
find()
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

class Example {
\end_layout

\begin_layout Plain Layout

  static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

    def lst = [1,2,3,4];
\end_layout

\begin_layout Plain Layout

    def value;
\end_layout

\begin_layout Plain Layout

    value = lst.find {element -> element > 2}
\end_layout

\begin_layout Plain Layout

    println(value);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//3
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
findAll()
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

class Example {
\end_layout

\begin_layout Plain Layout

  static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

    def lst = [1,2,3,4];
\end_layout

\begin_layout Plain Layout

    def value; 	
\end_layout

\begin_layout Plain Layout

    value = lst.findAll{element -> element > 2}
\end_layout

\begin_layout Plain Layout

    value.each {println it}
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//3
\end_layout

\begin_layout Plain Layout

//4
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
any() & every()
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

class Example {
\end_layout

\begin_layout Plain Layout

  static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

    def lst = [1,2,3,4];
\end_layout

\begin_layout Plain Layout

    def value;
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

    // Is there any value above 2
\end_layout

\begin_layout Plain Layout

    value = lst.any{element -> element > 2}
\end_layout

\begin_layout Plain Layout

    println(value); 	
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    // Are all value above 2
\end_layout

\begin_layout Plain Layout

    value = lst.every{element -> element > 2}
\end_layout

\begin_layout Plain Layout

    println(value);
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//true
\end_layout

\begin_layout Plain Layout

//false
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
collect()
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

class Example {
\end_layout

\begin_layout Plain Layout

  static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

    def lst = [1,2,3,4];
\end_layout

\begin_layout Plain Layout

    def newlst = [];
\end_layout

\begin_layout Plain Layout

    newlst = lst.collect {element -> return element * element}      
\end_layout

\begin_layout Plain Layout

    println(newlst);
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//[1, 4, 9, 16]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Listas"

\end_inset

Listas
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="75line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Método
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.add()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Añade un nuevo valor al final de la lista.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.contain()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Devuelve true si la lista contiene el valor especificado.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.get()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Devuelve el elemento en la posición especificada de la lista.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.isEmpty()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Devuelve verdadero si la lista no contiene ningún elemento.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.minus()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Crea una nueva lista compuesta por los elementos de la lista original excepto
 aquellos especificado en la colección.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.plus()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Crea una nueva lista compuesta por los elementos de la lista original junto
 con aquellos especificados en la colección.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.pop()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Quita el último elemento de la lista.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.remove()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Quita el elemento de la posición especificada de la lista.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.reverse()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Crea una nueva lista con los elementos en orden inverso al de la lista original.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.size()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Obtiene el número de elementos de la lista.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lst.sort()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Devuelve una copia ordenada de la lista original.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement !h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Objetos-API"

\end_inset

Objetos de la API de Freeplane
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Scripts.png
	lyxscale 25
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Configuración de Freeplane para la ejecución de scripts
\end_layout

\begin_layout Section
Comenzando a programar scripts
\end_layout

\begin_layout Subsection
El editor de scripts
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Consola-de-groovy"

\end_inset

Consola de groovy
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/groovy_console.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Podemos crear scripts de dos maneras:
\end_layout

\begin_layout Itemize
Con un editor externo creamos el código y lo guardamos en el directorio
 del usuario, subdirctorio 
\begin_inset Quotes eld
\end_inset

scripts
\begin_inset Quotes erd
\end_inset

.
 Al ejecutar Freeplane el script nos aparecerá en el menú Herramientas /
 Scripts.
\end_layout

\begin_layout Itemize
Con el editor de groovy incluido en Freeplane.
 Si vamos a Herramientas / Editor de scripts se abrirá la consola de groovy.
 Pinchamos en Acciones / Nuevo Script y ya podemos comenzar a teclear código.
\end_layout

\begin_layout Standard
Esta segunda forma nos permite acceder a todos los métodos de los objetos.
 Tecleando el objeto, un punto y la primera letra del método podemos pulsar
 las teclas ctrl + <space> y aparecerá una ayuda con los métodos que comienzan
 por esa letra.
 Si borramos en ese momento la letra obtendremos todos los métodos del objeto.
 En la imagen 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Consola-de-groovy"
plural "false"
caps "false"
noprefix "false"

\end_inset

 podemos ver esta pantalla con la ayuda de los métodos para un nodo.
\end_layout

\begin_layout Subsection
La API de freeplane
\end_layout

\begin_layout Standard
Para poder escribir scripts necesitamos conocer la estructura de objetos
 que se mantiene en la API de Freeplane (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Objetos-API"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
Podemos ver la documentación de la API en varios sitios:
\end_layout

\begin_layout Itemize
Abriendo el fichero doc/api/index.html en el directorio de instalación de
 Freeplane.
\end_layout

\begin_layout Itemize
Pinchando en en Ayuda 
\begin_inset Formula $\rightarrow$
\end_inset

 Api Generator.
 Se abrirá un mapa con toda la API de Freeplane.
\end_layout

\begin_layout Itemize
En la dirección 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://freeplane.sourceforge.net/doc/api/index.html
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
También es conveniente tener a mano la de groovy, accesible en internet
 en la dirección 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.groovy-lang.org/latest/html/gapi/
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Documentación-API"

\end_inset

Documentación de la API
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/api.png
	scale 65

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los scripts de Freeplane existen dos variables para facilitar la escritura
 de los scripts:
\end_layout

\begin_layout Itemize
c se refiere a Proxy.Controler en el mapa de la API generado por Freeplane.
\end_layout

\begin_layout Itemize
node se refiere a Proxy.Node en el mapa de la API generado por Freeplane.
\end_layout

\begin_layout Standard
Si accedemos a los documentos de la api en el fichero index.html todo esto
 es accesible en la clase org.freeplane.api.
 Vemos en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Documentación-API"
plural "false"
caps "false"
noprefix "false"

\end_inset

 la interface Controller con Proxy.Controller en el apartado All Know subinterfac
es.
\end_layout

\begin_layout Standard
Lo más importante es conocer los métodos para las principales tareas de
 freeplane:
\end_layout

\begin_layout Subsection
El primer script
\end_layout

\begin_layout Standard
La forma más sencilla de comenzar a realizar pruebas con groovy es entrando
 en el editor que tiene por defecto: Herramientas, Editor de scripts.
 
\end_layout

\begin_layout Standard
Si pinchamos nuevo, escribimos 
\begin_inset listings
lstparams "language=Java,basicstyle={\small}"
inline true
status open

\begin_layout Plain Layout

node.text = "Hola"
\end_layout

\end_inset

 y luego lo ejecutamos desde el menú, veremos cómo cambia el texto del nodo.
 Desde aquí ya podemos probar nuestro código.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Elementos-de-un"

\end_inset

Elementos de un nodo
\end_layout

\begin_layout Description
node.children devuelve una lista con todos los hijos del nodo.
\end_layout

\begin_layout Description
node.parent devuelve el padre del nodo.
\end_layout

\begin_layout Description
node.id devuelve el ID único del nodo en el mapa.
\end_layout

\begin_layout Description
node.text texto de un nodo.
 Puede ser el texto corto o en formato HTML dependiendo de si hemos añadido
 código html a mano.
\end_layout

\begin_layout Description
node.shortText si queremos asegurarnos de no obtener el texto en formato
 html del nodo.
\end_layout

\begin_layout Description
node.details detalle del nodo.
\end_layout

\begin_layout Description
node.note las notas del nodo.
\end_layout

\begin_layout Description
node.attributtes.names lista con los nombres de los atributos.
\end_layout

\begin_layout Description
node.attributes.values lista con los valores de los atributos.
\end_layout

\begin_layout Description
node.map es el mapa al que pertenece el nodo.
\end_layout

\begin_layout Description
node.next el siguiente nodo buscando en profundidad(primero se va hacia los
 hijos antes de ir a los hermanos).
\end_layout

\begin_layout Description
node.previous evidentemente, el contrario al anterior.
\end_layout

\begin_layout Subsection
Operaciones con nodos
\end_layout

\begin_layout Subsubsection*
Buscar un nodo por su texto y seleccionarlo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

nodo = node.find {it.shortText == "Texto del nodo a buscar"}
\end_layout

\begin_layout Plain Layout

c.select(nodo)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Ir a la raíz desde cualquier nodo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

nodo = c.find {it.isRoot()}
\end_layout

\begin_layout Plain Layout

c.select(nodo)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Añadir nodos hijo
\end_layout

\begin_layout Standard
El siguiente código crea 10 hijos y los etiqueta con los números del 1 al
 10
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

(1..10).each{
\end_layout

\begin_layout Plain Layout

  node.createChild(it.toString()) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Borrar nodos
\end_layout

\begin_layout Standard
El siguiente código borra todos los hijos de un nodo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

node.children.each {
\end_layout

\begin_layout Plain Layout

  it.delete() 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Buscar un nodo y borrarle sus hijos
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

//MAL.
 Borra los hijos del nodo del script
\end_layout

\begin_layout Plain Layout

nodo = c.find {it.shortText == "Nuevo nodo"}
\end_layout

\begin_layout Plain Layout

c.select(nodo)
\end_layout

\begin_layout Plain Layout

node.children.each{it.delete()}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Añadir un enlace a un fichero en un nodo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

node.link.file=new File("C:/Users/09767841V/AppData/Roaming/
\end_layout

\begin_layout Plain Layout

Freeplane/1.5.x/scripts/SubirARaiz.groovy")
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Añadir un enlace a una dirección web en un nodo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

node.link.uri=new URI('http://www.google.com')
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Fijar la anchura y el color de las líneas de un nodo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

node.style.edge.setWidth(5)
\end_layout

\begin_layout Plain Layout

node.style.edge.setColorCode("#336600")
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
O también
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

node.style.edge.setWidth(1)
\end_layout

\begin_layout Plain Layout

node.style.edge.setColor(java.awt.Color.GREEN)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pudiendo ser estos colores, según la documentación de 
\begin_inset CommandInset href
LatexCommand href
name " java.awt.Color"
target "https://docs.oracle.com/javase/7/docs/api/java/awt/Color.html"
literal "false"

\end_inset

 disponible: black, BLACK, blue, BLUE, cyan, CYAN, DARK_GRAY, darkGray,
 gray, GRAY, green, GREEN, LIGHT_GRAY, lightGray, magenta, MAGENTA, orange,
 ORANGE, pink, PINK, red, RED, white, WHITE, yellow, YELLOW.
\end_layout

\begin_layout Subsubsection*
Ver el nombre de los iconos de un nodo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

println(node.icons.icons)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nota: eso también funciona en las fórmulas.
 Si creamos un nodo y escribimos 
\series bold
=node.icons.icons
\series default
 nos aparecerá el nombre del icono.
\end_layout

\begin_layout Subsubsection*
Mover un nodo al nivel anterior
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

node.moveTo(node.getParent().getParent())
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Copiar un nodo y pegarlo como su hijo
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

nodo = node.text
\end_layout

\begin_layout Plain Layout

detalles = node.details
\end_layout

\begin_layout Plain Layout

enlace = node.link.text
\end_layout

\begin_layout Plain Layout

iconos = node.icons
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

destino = node.createChild(nodo)
\end_layout

\begin_layout Plain Layout

destino.details = detalles
\end_layout

\begin_layout Plain Layout

destino.link.text = enlace
\end_layout

\begin_layout Plain Layout

icons.each{destino.icons.add(it)}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nota: sólo copia el nodo con su detalle, enlace e iconos pero no copia sus
 hijos.
 Habría que crear una función recursiva para esto.
\end_layout

\begin_layout Subsection
Configuración de Freeplane para la ejecución de scripts
\end_layout

\begin_layout Standard
Si nuestros scripts van a realizar labores con ficheros y directorios, operacion
es de red o trabajar con otras aplicaciones debemos darles permisos desde
 Herramientas 
\begin_inset Formula $\rightarrow$
\end_inset

Preferencias, en la pestaña Complementos.
\end_layout

\begin_layout Standard
Asimismo, si deseamos utilizar librerías externas también teclearemos la
 ruta, relativa al directorio del usuario, donde guardaremos estas librerías.
 Por defecto utilizaremos el directorio lib de la carpeta del usuario y
 escribiremos 
\begin_inset Quotes eld
\end_inset

lib
\begin_inset Quotes erd
\end_inset

 en ese cuadro.
\end_layout

\begin_layout Section
Scripts de inicio
\end_layout

\begin_layout Standard
Si deseamos que freeplane ejecute un script cuando arranque podemos hacerlo
 si lo almacenamos dentro del directorio <userdir>/scripts/init.
 (ver apartado 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:El-directorio-del"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Section
Examinando propiedades y métodos de las clases de groovy
\end_layout

\begin_layout Standard
Podemos ver los atributos y métodos de una clase con el siguiente código:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout

n = node.at("/**/'IVA'")
\end_layout

\begin_layout Plain Layout

print(n.metaClass.methods*.name.sort().unique() )
\end_layout

\begin_layout Plain Layout

print("
\backslash
n")
\end_layout

\begin_layout Plain Layout

print(n.properties.sort())
\end_layout

\end_inset


\end_layout

\begin_layout Section
Uso de librerías externas
\end_layout

\begin_layout Standard
Habitualmente las librerías utilizadas por Freeplane las encontramos en
 ficheros con la extensión .jar.
 Normalmente colocaremos dichas librerías en la carpeta .lib del directorio
 del usuario que, como sabéis, podemos mostrar si pinchamos en el menú Herramien
tas, Abrir el directorio del usuario.
\end_layout

\begin_layout Standard
Podemos modificar, sin embargo, la ubicación de nuestras librerías de dos
 maneras.
 
\end_layout

\begin_layout Standard
La primera si nos vamos a la sección Scripting de la pestaña Complementos
 en las preferencias de Freeplane.
 Hay una propiedad donde podemos definir la ruta para nuestros ficheros
 .jar.
\end_layout

\begin_layout Standard
La segunda es mediante el uso de la anotación de grape, @grab en nuestro
 script tal y como se muestra en el código siguiente.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline true
status open

\begin_layout Plain Layout

@Grab('com.xlson.groovycsv:groovycsv:1.3')
\end_layout

\begin_layout Plain Layout

import static com.xlson.groovycsv.CsvParser.parseCsv
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def csv = '''Name,Lastname
\end_layout

\begin_layout Plain Layout

Mark,Andersson
\end_layout

\begin_layout Plain Layout

Pete,Hansen'''
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def data = parseCsv(csv)
\end_layout

\begin_layout Plain Layout

for(line in data) {
\end_layout

\begin_layout Plain Layout

    node.createChild("$line.Name $line.Lastname")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Mediante esta anotación definimos las dependencias de nuestro código que
 serán automáticamente descargadas del repositorio remoto indicado.
\end_layout

\begin_layout Section
Ejemplos
\end_layout

\begin_layout Standard
Imaginemos que queremos contar en el atributo 
\begin_inset Quotes fld
\end_inset

coste
\begin_inset Quotes frd
\end_inset

 de un nodo los valores de ese mismo atributo de sus hijos.
 Lo primero que tenemos que hacer es crear el nodo y uno de sus hijos con
 el atributo.
 En atributo del nodo escribimos la fórmula: 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline true
status open

\begin_layout Plain Layout

=children.sum() { it['coste'].num }
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Sin embargo, cuando creamos un nodo hijo en esta fórmula aparece un error
 pues aún no existe el atributo 
\begin_inset Quotes fld
\end_inset

coste
\begin_inset Quotes frd
\end_inset

 (nota: podemos utilizar .num0 y de esa forma no daría el error).
 para evitarlo añadimos el script insertar.groovy en el nodo seleccionando
 el nodo y luego herramientas, editor de scripts:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline false
status open

\begin_layout Plain Layout

hijo = node.createChild('producto 1')
\end_layout

\begin_layout Plain Layout

hijo['coste'] = 0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lo cual ejecutado en el nodo crea un nodo hijo con el texto 
\begin_inset Quotes fld
\end_inset

producto 1
\begin_inset Quotes frd
\end_inset

 y un atributo 
\begin_inset Quotes fld
\end_inset

coste
\begin_inset Quotes frd
\end_inset

 de valor 0.
 Sin embargo vemos que queda bastante feo, pues se añade el script como
 otro atributo del nodo.
 Además, el texto y atributos creados son fijos.
\end_layout

\begin_layout Standard
Podemos mejorar el script de dos formas:
\end_layout

\begin_layout Itemize
Añadiendo el fichero insertar.groovy con el código del script en el directorio
 del usuario.
\end_layout

\begin_layout Itemize
Añadiendo un nodo INSERTAR con tres hijos (ver figura): 
\end_layout

\begin_deeper
\begin_layout Itemize
el primero con el texto del nodo
\end_layout

\begin_layout Itemize
el segundo con el texto del atributo
\end_layout

\begin_layout Itemize
el tercero con el valor del atributo
\end_layout

\end_deeper
\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/nodo_insertar.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Nodo INSERTAR
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora el código del script se complica un poco, pues tenemos que acceder
 a los 3 hijos del nodo INSERTAR:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline false
status open

\begin_layout Plain Layout

/* Inserta un nuevo nodo con los valores del nodo INSERTAR.
\end_layout

\begin_layout Plain Layout

dicho nodo contiene:
\end_layout

\begin_layout Plain Layout

  - hijo 0: texto del nodo nuevo
\end_layout

\begin_layout Plain Layout

  - hijo 1: texto del atributo
\end_layout

\begin_layout Plain Layout

  - hijo 2: valor del atributo */
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

texto = c.find{it.text == "INSERTAR"}[0].children[0].value 
\end_layout

\begin_layout Plain Layout

atributo = c.find{it.text == "INSERTAR"}[0].children[1].text 
\end_layout

\begin_layout Plain Layout

valor = c.find{it.text == "INSERTAR"}[0].children[2].value
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hijo = node.createChild(texto) 
\end_layout

\begin_layout Plain Layout

hijo[atributo] = valor
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lo único que nos queda es reiniciar freeplane y asignar un atajo a nuestro
 script mediante Herramientas, Asignar atajo.
 Primero nos pide que elijamos del menú el script (Herramientas, Scripts,
 Insertar) y después pulsamos la tecla de función a la que queremos asignar
 el script.
 Por ejemplo, F4.
\end_layout

\begin_layout Standard
Ahora cada vez que pulsemos F4 se insertará un nodo hijo del nodo que tengamos
 seleccionado cuyos valores son los del nodo INSERTAR.
\end_layout

\begin_layout Subsection
Actualiza el atributo status de los nodos del mapa
\end_layout

\begin_layout Standard
Este script recorre todos los nodos actualizando el atributo 
\begin_inset Quotes eld
\end_inset

Status
\begin_inset Quotes erd
\end_inset

 de los nodos
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\small},breaklines=true"
inline false
status open

\begin_layout Plain Layout

// @ExecutionModes({on_single_node="main_menu_scripting/experiments"})
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import org.freeplane.plugin.script.proxy.Proxy
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// Get the root node of the mind map
\end_layout

\begin_layout Plain Layout

Proxy.Node nodeRoot = node.map.root
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/* 'findAllDepthFirst()' applied to the root node lists all nodes in the
 mind map
\end_layout

\begin_layout Plain Layout

 * sorted from the deepest to the highest level.
 This because you need to
\end_layout

\begin_layout Plain Layout

 * update the status experiments at the lowest level first, otherwise you
 will
\end_layout

\begin_layout Plain Layout

 * update the higher levels with statuses that are not up to date.
\end_layout

\begin_layout Plain Layout

 * 'each' means that every node in the list is processed by the statements
\end_layout

\begin_layout Plain Layout

 * between the curly brackets.
\end_layout

\begin_layout Plain Layout

 * Every 'it' between the curly bracket refers to the node from the list
 that
\end_layout

\begin_layout Plain Layout

 * is currently processed.
\end_layout

\begin_layout Plain Layout

 */
\end_layout

\begin_layout Plain Layout

nodeRoot.findAllDepthFirst().each {
\end_layout

\begin_layout Plain Layout

    /* If the node has no children, it does not need updating: go to the
 next
\end_layout

\begin_layout Plain Layout

     * node in the list
\end_layout

\begin_layout Plain Layout

     */
\end_layout

\begin_layout Plain Layout

    if (it.children.size() == 0) return
\end_layout

\begin_layout Plain Layout

    /* If the node does not have the attribute 'Status', it is not an experiment
\end_layout

\begin_layout Plain Layout

     * and does not need updating: got to the next node in the list.
\end_layout

\begin_layout Plain Layout

     */
\end_layout

\begin_layout Plain Layout

    if (!(it.attributes.map.containsKey('Status'))) return
\end_layout

\begin_layout Plain Layout

    /* if none of the children have the attribute 'Status', there is nothing
 to
\end_layout

\begin_layout Plain Layout

     * update: go to the next node
\end_layout

\begin_layout Plain Layout

     */
\end_layout

\begin_layout Plain Layout

    if (it.children.count {it.attributes.map.containsKey('Status')} == 0) return
\end_layout

\begin_layout Plain Layout

    // Status is "in progress" by default
\end_layout

\begin_layout Plain Layout

    String strStatus = "in progress"
\end_layout

\begin_layout Plain Layout

    /* If all of the children have status "not started", status changes
 to
\end_layout

\begin_layout Plain Layout

     * "not started"
\end_layout

\begin_layout Plain Layout

     */
\end_layout

\begin_layout Plain Layout

    if (blnAllChildrenHaveGivenStatus(it, "not started")) strStatus = "not
 started"
\end_layout

\begin_layout Plain Layout

    // If all of the children have status "done", status changes to "done"
\end_layout

\begin_layout Plain Layout

    if (blnAllChildrenHaveGivenStatus(it, "done")) strStatus = "done"
\end_layout

\begin_layout Plain Layout

    // Change the value of attribute 'Status' to the determined status
\end_layout

\begin_layout Plain Layout

    it['Status'] = strStatus
\end_layout

\begin_layout Plain Layout

    /* For testing purposes for every changed node, the name of the node
 is
\end_layout

\begin_layout Plain Layout

     * displayed together with the determined status.
 Once the script has been
\end_layout

\begin_layout Plain Layout

     * proven to be correct, the next 3 lines can be removed or commented
 out.
 
\end_layout

\begin_layout Plain Layout

     */
\end_layout

\begin_layout Plain Layout

    String strFeedback = 'Experiment "' + it.text +
\end_layout

\begin_layout Plain Layout

        '" has been updated to status "' + strStatus + '".'
\end_layout

\begin_layout Plain Layout

    ui.informationMessage(ui.frame, strFeedback, "Check if this is correct")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/* This method returns true if all children of the given node have the given
\end_layout

\begin_layout Plain Layout

 * status.
 Children that do not have the attribute 'Status' are ignored
\end_layout

\begin_layout Plain Layout

 */
\end_layout

\begin_layout Plain Layout

boolean blnAllChildrenHaveGivenStatus(Proxy.Node nodeParent, String strStatus)
 {
\end_layout

\begin_layout Plain Layout

    boolean blnAllHaveGivenStatus = true
\end_layout

\begin_layout Plain Layout

    nodeParent.children.each {
\end_layout

\begin_layout Plain Layout

        if (it.attributes.map.containsKey('Status')) {
\end_layout

\begin_layout Plain Layout

            if (it['Status'] != strStatus) {
\end_layout

\begin_layout Plain Layout

                blnAllHaveGivenStatus = false
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return blnAllHaveGivenStatus
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Otra opción es crear la librería Experiment almacenando el siguiente código
 en el fichero Experiment.groovy que aparece a continuación y copiarlo en
 el directorio del usuario.
 Para usarla pondremos como valor del atributo 
\begin_inset Quotes eld
\end_inset

Status
\begin_inset Quotes erd
\end_inset

 de los nodos con hijos 
\begin_inset Quotes eld
\end_inset

=Experiment.updateStatus(node)
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\small},breaklines=true"
inline false
status open

\begin_layout Plain Layout

/* Library for updating the status of experiments
\end_layout

\begin_layout Plain Layout

 * 
\end_layout

\begin_layout Plain Layout

 * Usage: enter the following as a value for the attribute 'Status' of an
\end_layout

\begin_layout Plain Layout

 * experiment node:
\end_layout

\begin_layout Plain Layout

 * 
\end_layout

\begin_layout Plain Layout

 *    =Experiment.updateStatus(node)
\end_layout

\begin_layout Plain Layout

 *
\end_layout

\begin_layout Plain Layout

 * The experiment node should have one or more children with the attribute
\end_layout

\begin_layout Plain Layout

 * 'Status' having a value "not started", "in progress" and "done".
 If all
\end_layout

\begin_layout Plain Layout

 * children have status "not started", the value of attribute 'Status' will
\end_layout

\begin_layout Plain Layout

 * change to "not started".
 If all the children have status "done", the value
\end_layout

\begin_layout Plain Layout

 * of attribute 'Status' will change to "done".
 If the children have any other
\end_layout

\begin_layout Plain Layout

 * mixture of statuses, the value of attribute 'Status' will change to
\end_layout

\begin_layout Plain Layout

 * "in progress".
\end_layout

\begin_layout Plain Layout

 */
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import org.freeplane.plugin.script.proxy.Proxy
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def static updateStatus(Proxy.Node node) {
\end_layout

\begin_layout Plain Layout

    // Status is "in progress" by default
\end_layout

\begin_layout Plain Layout

    String strStatus = "in progress"
\end_layout

\begin_layout Plain Layout

    /* If all of the children have status "not started", status changes
 to
\end_layout

\begin_layout Plain Layout

     * "not started"
\end_layout

\begin_layout Plain Layout

     */
\end_layout

\begin_layout Plain Layout

    if (blnAllChildrenHaveGivenStatus(node, "not started")) {
\end_layout

\begin_layout Plain Layout

        strStatus = "not started"
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    // If all of the children have status "done", status changes to "done"
\end_layout

\begin_layout Plain Layout

    if (blnAllChildrenHaveGivenStatus(node, "done")) strStatus = "done"
\end_layout

\begin_layout Plain Layout

    return strStatus
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/* This method returns true if all children of the given node have the given
\end_layout

\begin_layout Plain Layout

 * status.
 Children that do not have the attribute 'Status' are ignored
\end_layout

\begin_layout Plain Layout

 */
\end_layout

\begin_layout Plain Layout

def private static blnAllChildrenHaveGivenStatus(Proxy.Node nodeParent,
\end_layout

\begin_layout Plain Layout

    String strStatus) {
\end_layout

\begin_layout Plain Layout

    boolean blnAllHaveGivenStatus = true
\end_layout

\begin_layout Plain Layout

    nodeParent.children.each {
\end_layout

\begin_layout Plain Layout

        if (it.attributes.map.containsKey('Status')) {
\end_layout

\begin_layout Plain Layout

            if (it['Status'] != strStatus) {
\end_layout

\begin_layout Plain Layout

                blnAllHaveGivenStatus = false
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return blnAllHaveGivenStatus
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Fórmulas avanzadas
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
En la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Fórmulas"
plural "false"
caps "false"
noprefix "false"

\end_inset

 veíamos las fórmulas como expresiones matemáticas en las que aparecían
 algunos elementos de Freeplane tales como nodos o atributos.
 Sin embargo una fórmula es mucho más que una simple expresión matemática.
 Puede contener cualquier código de groovy que devuelva una expresión, tal
 y como introducíamos en dicha sección al teclear 
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline true
status open

\begin_layout Plain Layout

=(parent.value=="calcular") ? 2 + 3 : "2 + 3"
\end_layout

\end_inset

.
 Es esta una expresión de groovy que aparece definida en la subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Expresión-if"
plural "false"
caps "false"
noprefix "false"

\end_inset

 del tutorial rápido de groovy.
\end_layout

\begin_layout Standard
Podemos encontrar numerosos ejemplos de groovy en las fórmulas.
 En particular son especialmente útiles los siguientes elementos:
\end_layout

\begin_layout Itemize
Operadores de groovy: +, *, **, !=, &&...
 (subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Operadores"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Itemize
Elementos de los nodos: children, parent, attributes...
 (subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Elementos-de-un"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Itemize
Expresión if (subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Expresión-if"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Itemize
Closures (subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Closures"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Itemize
Métodos de listas: size, sort, reverse...
 (subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Listas"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Itemize
Métodos que operan sobre listas: find, findAll, each, collect...
 (subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Métodos-usados-con-closures"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Section
Cómo referirnos a los elementos del mapa
\end_layout

\begin_layout Standard
Además de referirnos al nodo padre, a los hijos o a los atributos, también
 podemos utilizar el resto de los elementos del mapa.
 En la siguiente tabla podemos ver la forma de utilizar estos elementos
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Descripción
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodo con ID = ID_1907446118
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=ID_1907446118
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Texto del nodo padre del nodo ID_1907446118
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID_1907446118.parent.text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valor numérico del padre del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=parent.to.num
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lista con los hijos del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
= children.text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El primer hijo del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=children[0]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Atributo Coste del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=node['Coste']
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Atributo Coste del padre del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=parent['Coste']
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Atributo Coste del primer hijo del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=children[0]['Coste']
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lista con todos los iconos del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=node.icons.getIcons()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Primer icono del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=node.icons[0]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Detalles del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
node.details
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nota del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=node.note
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enlace del padre
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=parent.link.text
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Tenemos que hacer unas puntualizaciones.
\end_layout

\begin_layout Standard
La primera: las listas en groovy se numeran comenzando por el cero.
 Eso quiere decir que el primer elemento de una lista es lista[0] y que
 lista[3] es el cuarto elemento de la lista.
\end_layout

\begin_layout Standard
Además, todos los nodos tienen un ID único al que podemos referirnos.
 Dicho ID podemos copiarlo pinchando con el botón derecho sobre el nodo
 y pinchando en 
\begin_inset Quotes eld
\end_inset

Copiar la identidad del nodo
\begin_inset Quotes erd
\end_inset

.
 Otra forma de verlo es activarlo para que aparezca en la barra de estado
 que está en la parte inferior de la pantalla de Freeplane.
 Esto se activa en las preferencias, pestaña Apariencia.
 Si vamos a la sección Línea de Estado vemos que hay una casilla, 
\begin_inset Quotes eld
\end_inset

Mostrar la identidad del nodo
\begin_inset Quotes erd
\end_inset

 que podemos activar.
\end_layout

\begin_layout Standard
En este sentido decir que también podemos utilizar la nueva forma de referirnos
 a los nodos y que aparece explicada en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Nueva-forma-de"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Funciones-de-conversión"

\end_inset

Funciones de conversión
\end_layout

\begin_layout Standard
En la tabla de la sección anterior vemos elementos un tanto 
\begin_inset Quotes eld
\end_inset

extraños
\begin_inset Quotes erd
\end_inset

 tales como value ó text.
 Vamos a proceder a explicarlos.
\end_layout

\begin_layout Standard
Cuando recuperamos un nodo mediante una fórmula tal y como 
\series bold

\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=parent
\end_layout

\end_inset


\series default
, Freeplane nos devuelve el texto del nodo que vemos como 
\begin_inset Quotes eld
\end_inset

(Node) 4
\begin_inset Quotes erd
\end_inset

 con la que no podremos realizar operaciones matemáticas.
\end_layout

\begin_layout Standard
Para obtener el texto del nodo, el número o la fecha que contiene tendremos
 que utilizar estas funciones de conversión.
 De esta manera teclearemos 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=10 * parent.to.num
\end_layout

\end_inset

 si queremos obtener el valor 
\begin_inset Quotes eld
\end_inset

40
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Descripción
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Texto del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
node.text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Texto del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
node.to.text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valor numérico del nodo.
 Error si es un texto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
node.to.num
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valor numérico del nodo.
 Si es un texto, cero
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
node.to.num0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fecha del nodo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
node.to.date
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Funciones-de-listas"

\end_inset

Funciones de listas
\end_layout

\begin_layout Standard
Muchas veces tendremos que hacer operaciones sobre los nodos.
 Por ejemplo, el número de hijos o la suma de todos los atributos coste.
 En esta sección se muestra cómo escribir estas expresiones.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Descripción
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ejemplo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tamaño de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.size
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=children.size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Suma de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.sum()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=children.sum()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elemento máximo de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.max()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=[1, 2, 3, 4, 5].max()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elemento mínimo de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.min()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=[1, 2, 3, 4, 5].min()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contar los elementos de valor n de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.coutn(n)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=[1, 2, 3, 3, 3, 4].count(3)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Primer elemento de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.first()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=children.first().value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Último elemento de una lista
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lista.last()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=children.last().value
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Utilización de closures en las fórmulas
\end_layout

\begin_layout Standard
El hecho de que al referirnos a un nodo nos devuelva un valor de texto en
 lugar del valor numérico nos va a causar muchos problemas.
 En particular, no podremos obtener el valor máximo y mínimo de los hijos
 de un nodo tecleando sencillamente =children.max().
\end_layout

\begin_layout Standard
En estos casos no nos queda más remedio que usar closures.
 Hay numerosos métodos de listas (de los que ya hemos hablado en las secciones
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Funciones-de-conversión"
plural "false"
caps "false"
noprefix "false"

\end_inset

 y 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Funciones-de-listas"
plural "false"
caps "false"
noprefix "false"

\end_inset

) que se usan en conjunción con ellos.
\end_layout

\begin_layout Standard
La forma habitual es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

=children.collect{
\end_layout

\begin_layout Plain Layout

	it.to.num0
\end_layout

\begin_layout Plain Layout

	}.max()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El método 
\series bold
collect
\series default
 devuelve otra lista usando el closure
\series bold
 {it.to.num0}
\series default
 como función de conversión.
 Esto significa que a cada elemento de la lista se le aplica esta conversión
 para calcular la lista que se devolverá.
 Una vez obtenida la lista numérica, ya podremos utilizar la función max()
 y min().
 Como recordaréis, un closure no es más que un trozo de código que podemos
 usar directamente como en el ejemplo o guardar en una variable.
\end_layout

\begin_layout Standard
Esta forma de convertir una lista de valores de texto a otra con números
 nos va a ser útil en muchas ocasiones.
\end_layout

\begin_layout Section
Groovy en las fórmulas
\end_layout

\begin_layout Standard
Realmente, una fórmula para Freeplane es mucho más que un conjunto de operadores
 y nodos.
 Podemos incluir cualquier código groovy, como veremos en los apartados
 que vienen a continuación (ver el apartado 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tutorial-groovy"
plural "false"
caps "false"
noprefix "false"

\end_inset

 para más detalle).
\end_layout

\begin_layout Standard
Por ejemplo, podemos buscar en el mapa el nodo con un texto determinado.
 Imaginemos que tenemos un mapa para calcular el precio de nuestras compras.
 Dicho nodo tiene tres atributos, uno con el IVA reducido, otro con el normal
 y otro con el especial.
 Para obtener en otro nodo estos IVAs podríamos teclear:
\end_layout

\begin_layout Itemize
IVA reducido: 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline true
status open

\begin_layout Plain Layout

=c.find{it.text == 'IVA'}[0][reducido'].to.num
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
IVA normal: 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline true
status open

\begin_layout Plain Layout

=c.find{it.text == 'IVA'}[0]['normal'].to.num
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
IVA especial: 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline true
status open

\begin_layout Plain Layout

=c.find{it.text == 'IVA'}[0]['especial'].to.num
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hay que tener en cuenta que c.find devuelve una lista de valores.
 Al poner 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline true
status open

\begin_layout Plain Layout

c.find{it.text == 'IVA'}[0]
\end_layout

\end_inset

 obtenemos la primera coincidencia.
\end_layout

\begin_layout Standard
Otro ejemplo de la potencia de las fórmulas de Freplane es este.
 Podemos crear una variable que usaremos posteriormente en la misma fórmula.
\end_layout

\begin_layout Standard
Por ejemplo, imaginemos que en el nodo ID_790080551 se almacenan el iva.
 Podemos escribir una fórmula 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline false
status open

\begin_layout Plain Layout

=def x = ID_790080551.to.num; parent.to.num*(1+x/100)
\end_layout

\end_inset

 en la que definimos la variable x que utilizamos posteriormente para calcular
 el precio final.
\end_layout

\begin_layout Section
Ejemplos
\end_layout

\begin_layout Standard
Antes de comenzar a escribir nuestras fórmulas tenemos que hablar sobre
 el formato de los nodos, pues con algunos de ellos la fórmula se mostrará
 como texto normal:
\end_layout

\begin_layout Itemize
Estándar: si es texto, se muestra.
 Si es fórmula, se calcula.
 Si es látex, se dibuja.
\end_layout

\begin_layout Itemize
Texto: todo se muestra como texto y las fórmulas no se calculan ni el latex
 se dibuja.
\end_layout

\begin_layout Itemize
\SpecialChar LaTeX
: el nodo contiene código \SpecialChar LaTeX

\end_layout

\begin_layout Standard
Para elegir el formato, desplegamos la barra de la derecha.
 En el tercer apartado, texto del nodo aparece un campo etiquetado Formato
 con una lista desplegable.
\end_layout

\begin_layout Itemize
Sumar en un nodo el valor de todos sus hijos: 
\begin_inset listings
lstparams "language=Java,basicstyle={\small}"
inline true
status open

\begin_layout Plain Layout

= "hijos: " + children.sum()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Calcular el número de hijos de un nodo: 
\begin_inset listings
lstparams "language=Java,basicstyle={\small}"
inline true
status open

\begin_layout Plain Layout

= "hijos: " + children.size()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Sumar los valores de los atributos coste de todos los nodos hijos: 
\begin_inset listings
lstparams "language=Java,basicstyle={\small},breaklines=true"
inline true
status open

\begin_layout Plain Layout

=children.sum(0) { it['coste'].num0 }
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Obtener el triple del valor del nodo padre: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

=parent.to.num*3
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Obtener en el nodo el valor del parámetro 
\begin_inset Quotes eld
\end_inset

precio
\begin_inset Quotes erd
\end_inset

 de nuestro nodo: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

=node['precio']
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Sumamos todos los valores del atributo 
\begin_inset Quotes eld
\end_inset

precio
\begin_inset Quotes erd
\end_inset

 de todos los hijos de nuestro nodo: 
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline true
status open

\begin_layout Plain Layout

=children.sum(0) {it['precio'].to.num}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Calculamos 
\begin_inset Formula $12^{3}:$
\end_inset

 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

=Math.pow(12,3)
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Buscar en el mapa un nodo con un nombre determinado y obtener el valor del
 atributo 
\begin_inset Quotes eld
\end_inset

Coste
\begin_inset Quotes erd
\end_inset

: 
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline true
status open

\begin_layout Plain Layout

= c.find{it.text=='MiNodo'}.collect{it['Coste'].to.num}.first()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Calcular el día siguiente de la fecha del nodo padre: 
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline true
status open

\begin_layout Plain Layout

=parent.to.date + 1
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Obtenemos el máximo del atributo 'val' de los nodos hijos: 
\begin_inset listings
lstparams "language=Java,breaklines=true,showspaces=true"
inline true
status open

\begin_layout Plain Layout

=children.collect { it['val'].to.num0 }.max()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Suma de los cuadrados de los nodos: 
\begin_inset listings
lstparams "language=Java,showspaces=true"
inline true
status open

\begin_layout Plain Layout

=children.collect {it*2}.sum()
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "chap:Nueva-forma-de"

\end_inset

Nueva forma de referirse a los nodos
\end_layout

\begin_layout Subsection
Conceptos previos
\end_layout

\begin_layout Standard
Normalmente al añadir nuevos nodos a un mapa lo que hacemos es teclear el
 texto que deseamos que aparezca.
 Posteriormente también podemos añadir iconos, enlaces e imágenes.
 Y si deseamos referirnos al nodo copiamos su ID en el menú contextual con
 la opción 
\begin_inset Quotes eld
\end_inset

Copiar la idfentidad del nodo
\begin_inset Quotes erd
\end_inset

 y la ponemos en la fórmula de otro nodo.
\end_layout

\begin_layout Standard
Sin embargo también podemos configurar la forma de la referencia de dicho
 nodo.
 Para ello en el menú contextual accesible pinchando en el nodo con el botón
 derecho elegimos la opción 
\begin_inset Quotes eld
\end_inset

Configurar la referencia del nodo
\begin_inset Quotes erd
\end_inset

 (También accesible en el menú Editar / Propiedades del nodo / Configurar
 referencia del nodo).
 Aparecerá la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configurar-la-referencia"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Configurar-la-referencia"

\end_inset

Configurar la referencia del nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/node_reference.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En esa ventana podemos:
\end_layout

\begin_layout Itemize
Configurar un nodo como 
\begin_inset Quotes eld
\end_inset

Globalmente accesible
\begin_inset Quotes erd
\end_inset

 o simplemente 
\series bold
global
\series default
 cuando la casilla está marcada.
 En su creación todos los nodos la tienen desmarcada.
\end_layout

\begin_layout Itemize
Crear un 
\series bold
alias
\series default
 para el nodo
\end_layout

\begin_layout Standard
Vemos que hay alias globales y no globales.
 Si marcamos la casilla de 
\begin_inset Quotes eld
\end_inset

Accesible globalmente
\begin_inset Quotes erd
\end_inset

 podremos acceder al nodo mediante la fórmula 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at(
\begin_inset Quotes eld
\end_inset

:~mi_alias
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_inset

 siendo el alias global 
\begin_inset Quotes eld
\end_inset

mi_alias
\begin_inset Quotes erd
\end_inset

.
 Sin embargo si no marcamos dicha casilla deberemos dar toda la ruta.
 Por ejemplo, si el nodo con el alias 
\begin_inset Quotes eld
\end_inset

mi_alias
\begin_inset Quotes erd
\end_inset

 cuelga directamente de la raíz tendremos que escribir 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at(
\begin_inset Quotes eld
\end_inset

/~mi_alias
\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Acceso a nodos en fórmulas y scripts
\end_layout

\begin_layout Standard
A partir de la versión 1.7, cuando escribimos una fórmula, además de usar
 su ID podemos referirnos a los nodos de otra manera.
 
\end_layout

\begin_layout Standard
Existen dos funciones de Freeplane que podemos utilizar para buscar los
 nodos: 
\series bold
node.at()
\series default
 y 
\series bold
node.allAt()
\series default
.
 Con la primera obtenemos un nodo, provocando un error si no se obtiene
 ninguno o si encuentra varios nodos.
 La segunda nos proporciona una lista con todos los nodos encontrados.
 El uso de ambas es idéntico.
 Teclearemos 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at(
\begin_inset Quotes eld
\end_inset

referencia
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_inset

.
 
\begin_inset Quotes eld
\end_inset

Referencia
\begin_inset Quotes erd
\end_inset

 puede incluir los siguientes elementos:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="middle" width="75line%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Referencia
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Explicación
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
'texto del nodo'
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
Nodo cuyo contenido es el “texto del nodo”.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
'texto...'
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodo cuyo contenido comienza por “texto”.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
'...'
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cualquier nodo hijo.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:~alias
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodo cuyo alias global es “alias”.
 “Alias” no puede ser un número.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
~alias
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodo cuyo alias es “alias”.
 Debemos dar la ruta completa hasta el nodo con el alias.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
Es la raíz del mapa.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
~n
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Siendo n un número, indica el hijo número n del nodo.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
..
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Indica el nodo padre
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
**/
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Especifica cualquier nodo hijo.
 El nodo buscado puede estar en cualquier rama de los nodos hijo, a cualquier
 profundidad.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/**/
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Colocado al comienzo de la referencia especifica cualquier subarbol de la
 raíz.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
\bar under
Explicación
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nueva forma de referirse al nodo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/ruta_nodos.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Significado: Estos son los elementos de la ecuación 
\series bold
\bar under
=node.at(
\begin_inset Quotes eld
\end_inset

/'uno'/~4
\begin_inset Quotes erd
\end_inset

).value
\series default
\bar default
:
\end_layout

\begin_layout Itemize

\series bold
\bar under
=node.at(
\series default
\bar default
 : Iniciamos la ecuación 
\end_layout

\begin_layout Itemize

\series bold
\bar under
\begin_inset Quotes eld
\end_inset

/
\series default
\bar default
 : Desde la raíz 
\end_layout

\begin_layout Itemize

\series bold
\bar under
'uno'
\series default
\bar default
 : Vete al nodo denominado uno 
\end_layout

\begin_layout Itemize

\series bold
\bar under
/~4
\series default
\bar default
 : Vete al cuarto nodo hijo de 
\begin_inset Quotes eld
\end_inset

uno
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
\bar under
.value
\series default
\bar default
 : Pásame su valor.
\end_layout

\begin_layout Description

\end_layout

\begin_layout Subsection
Otras fórmulas
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("~2").value
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: segundo nodo hijo del nodo de la fórmula
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("../'uno'/~5").value
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: Vamos al nodo padre del que contiene la fórmula y buscamos el quinto nodo
 de 
\begin_inset Quotes eld
\end_inset

uno
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at(
\begin_inset Quotes eld
\end_inset

/'uno'/~4
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: Ir a la raíz, buscar el nodo cuyo texto es 
\begin_inset Quotes eld
\end_inset

uno
\begin_inset Quotes erd
\end_inset

 y obtener el valor del cuarto hijo (contado desde arriba).
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at(
\begin_inset Quotes eld
\end_inset

/**/IVA/~1
\begin_inset Quotes erd
\end_inset

).to.num
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: buscar el nodo 'IVA' en todo el mapa y obtener su primer hijo (el valor
 numérico contenido en el nodo).
 Si no es numérico obtendremos un error.
 Para evitarlo podemos usar 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

to.num0
\end_layout

\end_inset

 que devuelve el valor cero en ese último caso.
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("..").value
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: Valor del padre
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("~1").value
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: Valor del primer hijo
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("/").value
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: Valor de la raíz
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("../'house'/**/~chairs")
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

: Nos vamos al nodo padre del actual y accedemos a un nodo con alias 
\begin_inset Quotes eld
\end_inset

chairs
\begin_inset Quotes erd
\end_inset

 que puede estar en cualquier rama de 
\begin_inset Quotes eld
\end_inset

house
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

=node.at("/**/'IVA'")['coste']
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 Obtenemos el valor del atributo 
\begin_inset Quotes eld
\end_inset

coste
\begin_inset Quotes erd
\end_inset

 del nodo 
\begin_inset Quotes eld
\end_inset

IVA
\begin_inset Quotes erd
\end_inset

 ubicado en cualquier sitio del mapa.
\end_layout

\begin_layout Subsection
Acceso a los nodos en los hiperenlaces
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ejemplo-nuevas-referencias"

\end_inset

Ejemplo de las nuevas referencias
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Archivos/Nuevas_Referencias.png
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
También podemos poner enlaces a otros nodos de esta manera.
 Así si queremos que en uno de los nodos haya un enlace al tercer hijo del
 nodo IDEAS cuyo padre es el nodo raíz pincharíamos en ese nodo con el botón
 derecho del ratón, enlaces y Añadir o modificar enlace (escribe).
 Luego escribiríamos 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

#at(/'IDEAS'/~3)
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ejemplo-nuevas-referencias"
plural "false"
caps "false"
noprefix "false"

\end_inset

 se ve un ejemplo gráfico de estas nuevas referencias.
\end_layout

\begin_layout Chapter
Configurando Freeplane
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:El-directorio-del"

\end_inset

El directorio del usuario
\end_layout

\begin_layout Standard
Es la ubicación donde residen todas las configuraciones y otros elementos
 particulares del usuario.
 Podemos acceder a él si desde freeplane pinchamos en Herramientas / Abrir
 directorio del usuario.
 Dentro de ese directorio podemos encontrar:
\end_layout

\begin_layout Description
auto.properties: Fichero que contiene la configuración del usuario.
\end_layout

\begin_layout Description
accelerator.properties: Fichero que almacena las teclas rápidas que ha definido
 el usuario.
\end_layout

\begin_layout Description
auto.mmfilter: Filtros del usuario.
 Cuando creas un filtro para un mapa freeplane lo guarda en este fichero.
\end_layout

\begin_layout Description
logs: Directorio donde están los archivos de registro.
 Son archivos en los que freeplane informa de situaciones comprometidas.
\end_layout

\begin_layout Description
templates: Directorio para guardar las plantillas personales.
\end_layout

\begin_layout Description
icons: Directorio para guardar los iconos personales.
\end_layout

\begin_layout Description
scripts: Directorio para almacenar los scripts del usuario.
\end_layout

\begin_layout Description
scripts/init: Directorio para guardar los scripts que freeplane ejecutará
 cuando arranque.
 Son todos los archivos con extensión .groovy.
\end_layout

\begin_layout Description
libs: Las librerías externas se almacenan en este directorio
\end_layout

\begin_layout Description
backup: Freeplane almacena periódicamente en este directorio copias de seguridad
 de los mapas que estamos editando.
\end_layout

\begin_layout Description
resources: Directorio para almacenar otro tipo de recursos tales como plantillas
 personales de exportación o ficheros de idioma.
\end_layout

\begin_layout Section
Opciones de configuración
\end_layout

\begin_layout Standard
No vamos a entrar en el detalle de cada una de las opciones de configuración
 disponibles pues son muchas.
 Únicamente explicar la pantalla de configuración.
 
\end_layout

\begin_layout Standard
Si accedemos a ella desde el menú Herramientas / Preferencias aparecerá
 una ventana com varias pestañas en la parte superior:
\end_layout

\begin_layout Itemize
Entorno
\end_layout

\begin_deeper
\begin_layout Itemize
Instancia única de programa: si abre una ventana de freeplane por mapa o
 todos en la misma
\end_layout

\begin_layout Itemize
Idioma
\end_layout

\begin_layout Itemize
Archivos: cantidad de archivos recordados, abrir último mapa al iniciar
 freeplane, plantilla usada para nuevos mapas...
\end_layout

\begin_layout Itemize
Cargar: acciones al abrir un mapa
\end_layout

\begin_layout Itemize
Guardar: acciones al guardar el mapa.
\end_layout

\begin_layout Itemize
Guardado automático: tiempo entre guardados, directorio...
\end_layout

\begin_layout Itemize
Exportar: resolución, usar tabuladores...
\end_layout

\begin_layout Itemize
Tipos de hiperenlaces: relativos ó absolutos
\end_layout

\begin_layout Itemize
Caché
\end_layout

\begin_layout Itemize
Programar actualizaciones
\end_layout

\begin_layout Itemize
Ayudas (surveys): mostrar consejos
\end_layout

\begin_layout Itemize
Informar de errores
\end_layout

\end_deeper
\begin_layout Itemize
Apariencia
\end_layout

\begin_deeper
\begin_layout Itemize
Estilo y apariencia: aspecto de la ventana de freeplane.
\end_layout

\begin_layout Itemize
Línea de estado: mostrar la identidad del nodo ó no
\end_layout

\begin_layout Itemize
Colores por defecto
\end_layout

\begin_layout Itemize
Colores de la selección
\end_layout

\begin_layout Itemize
Apariencia del nodo raíz.
 desde dónde comienzan las líneas de sus nodos hijo
\end_layout

\begin_layout Itemize
Alisado
\end_layout

\begin_layout Itemize
Iconos SVG
\end_layout

\begin_layout Itemize
Límites de tamaño: máximas y mínimas longitudes de nodos, plegados, etc.
\end_layout

\begin_layout Itemize
Conectores: configuración de los conectores
\end_layout

\begin_layout Itemize
Clones: mostrar marcas en los clones o no
\end_layout

\begin_layout Itemize
Ventana de edición avanzada del nodo: tamaño y botones
\end_layout

\begin_layout Itemize
Vista de esquema: distancias
\end_layout

\begin_layout Itemize
Iconos: mostrar iconos
\end_layout

\end_deeper
\begin_layout Itemize
Por defecto
\end_layout

\begin_deeper
\begin_layout Itemize
Nube: configuración de la nube por defecto
\end_layout

\end_deeper
\begin_layout Itemize
Comportamiento
\end_layout

\begin_deeper
\begin_layout Itemize
Comportamiento: como se comporta freeplane al plegar, desplegar y mover
 el ratón
\end_layout

\begin_layout Itemize
Opciones de recordatorio: Al añadir una alarma en el calendario cómo nos
 la muestra
\end_layout

\begin_layout Itemize
División del nodo en palabras
\end_layout

\begin_layout Itemize
Unión de nodos
\end_layout

\begin_layout Itemize
Formateo y análisis de los datos: reconocer la entrada de números y fechas,
 formatos etc.
\end_layout

\begin_layout Itemize
Búsqueda: comportamiento al buscar
\end_layout

\begin_layout Itemize
Editor de nodos en línea: mostrar edito y apariencia
\end_layout

\begin_layout Itemize
Opciones del corrector ortográfico
\end_layout

\begin_layout Itemize
Confirmaciones: al borrar, cortar o quitar nodos
\end_layout

\begin_layout Itemize
Método de selección: si freeplane selecciona un nodo al pasar por encima
 o al hacer click
\end_layout

\begin_layout Itemize
Rueda del ratón
\end_layout

\begin_layout Itemize
Barra de desplazamiento
\end_layout

\begin_layout Itemize
Tooltips: mostrar ayuda emergente
\end_layout

\begin_layout Itemize
Deshacer: número de niveles del comando
\end_layout

\begin_layout Itemize
Editor de texto enriquecido: pegar como html
\end_layout

\end_deeper
\begin_layout Itemize
HTML
\end_layout

\begin_deeper
\begin_layout Itemize
Navegador: cuál usamos
\end_layout

\begin_layout Itemize
Exportación de html
\end_layout

\begin_layout Itemize
Importación de html
\end_layout

\end_deeper
\begin_layout Itemize
Presentación
\end_layout

\begin_deeper
\begin_layout Itemize
Configuración de la presentación
\end_layout

\end_deeper
\begin_layout Itemize
Atajos y combinaciones del teclado
\end_layout

\begin_layout Itemize
Complementos
\end_layout

\begin_deeper
\begin_layout Itemize
Fórmulas: activarlas o desactivarlas
\end_layout

\begin_layout Itemize
LaTex: nuevos comandos de latex, fuente de letra etc
\end_layout

\begin_layout Itemize
Scripting: dónde ejecutar los scripts
\end_layout

\end_deeper
\begin_layout Section
Opciones de la línea de comandos
\end_layout

\begin_layout Standard
Podemos ejecutar freeplane desde la ventana de comandos utilizando esta
 sintaxis: 
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

freeplane [options] [file1 [file2 ...]]
\end_layout

\end_inset

.
 Las opciones disponibles son las siguientes:
\end_layout

\begin_layout Itemize
h|--help: lista las opciones disponibles
\end_layout

\begin_layout Itemize
-X<menukey>: ejecuta el elemento del menú con la clave <memkey>.
 Usa el complemento devtoolsUse devtools para encontrar las claves de los
 menús
\end_layout

\begin_layout Itemize
-S: se detiene después de ejecutar los elementos del menú.
\end_layout

\begin_layout Itemize
-N: Fija la propiedad del sistema 
\begin_inset Quotes eld
\end_inset

nonInteractive
\begin_inset Quotes erd
\end_inset

 a 
\begin_inset Quotes eld
\end_inset

verdadero
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
-U<userdir>: Fija el directorio de configuración del usuario
\end_layout

\begin_layout Section
Variables de entorno
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

DEBUG=true freeplane.sh
\end_layout

\end_inset

 Activa el modo debug de freeplane.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

FREEPLANE_JAVA_HOME=C:
\backslash
Program Files
\backslash
Java
\backslash
jre1.8.0_131
\end_layout

\end_inset

 Directorio de java de freeplane
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

JAVA_HOME
\end_layout

\end_inset

 Directorio raíz de java
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline true
status open

\begin_layout Plain Layout

JAVA_OPTS=-Dorg.freeplane.userfpdir=$HOME/blabla freeplane.sh
\end_layout

\end_inset

 Fija las propiedades de java
\end_layout

\begin_layout Part
Desarrollando Freeplane
\end_layout

\begin_layout Chapter
Colaborando en el desarrollo de Freeplane
\end_layout

\begin_layout Standard
Freeplane es un proyecto de programación complejo.
 Para su desarrollo utiliza numerosas tecnologías que han demostrado suficiente
 madurez.
\end_layout

\begin_layout Section
Conceptos
\end_layout

\begin_layout Description
Java: Lenguaje de programación de Freeplane.
\end_layout

\begin_layout Description
Groovy: Lenguaje de programación utilizado para los scripts de Freeplane.
\end_layout

\begin_layout Description
Git: Sistema de control de versiones.
\end_layout

\begin_layout Description
Github: Repositorios para Git.
\end_layout

\begin_layout Description
Gradle: Sistema de automatización para el desarrollo de programas.
\end_layout

\begin_layout Description
Knoplerfish: Implementación libre de OSGi utilizada en Freeplane
\end_layout

\begin_layout Description
OSGi: Sistema de publicación de componentes basado en la arquitectura de
 servicios.
\end_layout

\begin_layout Description
Swing: Framework para implementar interfaces de usuario.
\end_layout

\begin_layout Section
Configuración de un entorno de desarrollo de scripts.
\end_layout

\begin_layout Standard
Aunque podemos desarrollar scripts directamente con Freeplane, es mucho
 más fácil si utilizamos un entorno de desarrollo como eclipse, netbeans
 o jetbrains (idea).
 Las ventanas son evidentes: tendremos acceso a toda la potencia del entorno
 tal como resaltado de sintaxis, completado de código, detección de errores,
 depuración y navegación dentro del código.
 Para construir este sistema necesitaremos:
\end_layout

\begin_layout Itemize
Instalar groovy.
\end_layout

\begin_layout Itemize
Instalar gradle.
\end_layout

\begin_layout Itemize
Instalar nuestro entorno de programación preferido.
\end_layout

\begin_layout Itemize
Instalar los 
\lang english
plugi
\lang spanish
ns necesarios para trabajar con estos elementos: groovy y gradle en el entorno
 elegido.
\end_layout

\begin_layout Itemize
Descargarnos una copia actualizada del código.
\end_layout

\begin_layout Itemize
Importar el código a nuestro entorno.
 Podemos importarlo como proyecto de gradle.
\end_layout

\begin_layout Itemize
Crear un proyecto de groovy para nuestro 
\lang english
script
\lang spanish
.
\end_layout

\begin_layout Itemize
Vincular el proyecto anterior, Freeplane a este proyecto de groovy.
\end_layout

\begin_layout Itemize
Programar el script.
\end_layout

\begin_layout Standard
Puede ser que al hacer un 
\lang english
build
\lang spanish
 de gradle aparezcan errores indicando la imposibilidad de descargar los
 ficheros externos de los que depende el proyecto.
 Eso puede deberse a que en algunos sistemas no puede importar los certificados
 de algunos sitios https a los que se conecta gradle para resolver las dependenc
ias.
 Para solventar el problema copiaremos los certificados de todos los sitios
 que informen del problema (error 
\begin_inset Quotes eld
\end_inset


\lang english
peer not authenticated
\lang spanish

\begin_inset Quotes erd
\end_inset

) previamente exportados con el navegador, a la instalación de java que
 usemos, típicamente en el directorio JDK_HOME/jre/lib/security.
\end_layout

\begin_layout Standard
No es necesaria toda la complicación del control de versiones imprescindible
 para poder convertirnos en un desarrollador de Freeplane (ver a continuación.).
 Únicamente una copia del código de la versión de Freeplane que tengamos
 instalada importada en el entorno de desarrollo.
\end_layout

\begin_layout Section
Desarrollar add-ons
\end_layout

\begin_layout Standard
Aún por escribir.
\end_layout

\begin_layout Section
Desarrollando Freeplane
\end_layout

\begin_layout Standard
Freeplane es una aplicación libre de código abierto para la creación de
 mapas mentales que está programada en java usando OSGi (utiliza Knoplerfish
 como plataforma OSGi) y Java Swing como 
\lang english
framework
\lang spanish
 para su interfaz de usuario.
 Utiliza gradle como sistema para generar el código definitivo.
 Es un framework libre que permite automatizar las tareas tediosas de generar
 los ejecutables.
\end_layout

\begin_layout Standard
Freeplane fue lanzado por 
\begin_inset CommandInset href
LatexCommand href
name "Dimitry Polivaev"
target "mailto:dimitry@freeplane.org"
type "mailto:"
literal "false"

\end_inset

 en 2007 como una rama del proyecto Freemind al que había contribuido durante
 mucho tiempo.
 Utiliza git como sistema de control distribuido de versiones.
 El código más actualizado está alojado en 
\begin_inset CommandInset href
LatexCommand href
name "github"
target "https://github.com/freeplane/freeplane"
literal "false"

\end_inset

 y todos los distintos 
\begin_inset CommandInset href
LatexCommand href
name "ficheros"
target "https://sourceforge.net/projects/freeplane/files/"
literal "false"

\end_inset

 con versiones y 
\lang english
plugins
\lang spanish
 en 
\begin_inset CommandInset href
LatexCommand href
name "sourceforge"
target "https://sourceforge.net/projects/freeplane/"
literal "false"

\end_inset

.
 Asimismo, el 
\begin_inset CommandInset href
LatexCommand href
name "foro de discusión"
target "https://sourceforge.net/p/freeplane/discussion/"
literal "false"

\end_inset

 y la 
\begin_inset CommandInset href
LatexCommand href
name "comunicación de bugs"
target "https://sourceforge.net/p/freeplane/bugs/"
literal "false"

\end_inset

 también se realizan en sourceforge.
 Aunque el código también se publica en sourceforge, la versión más actualizada
 es la de gitgub.
\end_layout

\begin_layout Standard
Tiene un ciclo de lanzamiento de 6 a 9 meses que comienza con el desarrollo
 de una versión alfa de la que sale una versión beta que genera ya la nueva
 versión definitiva.
 El desarrollo de la fase alfa dura de 3 a 6 meses y se publica en sourceforge
 como 
\begin_inset Quotes eld
\end_inset

freeplane preview
\begin_inset Quotes erd
\end_inset

.
 Tras la publicación de las versiones previas se abre un plazo para fijar
 errores de unos 3 meses al final del cual se publica el RC que ya genera
 la versión definitiva.
 
\end_layout

\begin_layout Standard
Cuando se publica una versión beta de Freeplane es necesario probarla.
 Para ello la descargaremos y tras instalarla podremos realizar todas las
 pruebas que deseemos.
 Insertar nodos, notas, atributos, generar iconos de progreso o escribir
 fórmulas pueden generar algunos errores.
 Todos estos errores que hemos detectados tenemos que enviarlos a los desarrolla
dores en la página de 
\begin_inset CommandInset href
LatexCommand href
name "bugs"
target "https://sourceforge.net/p/freeplane/bugs/"
literal "false"

\end_inset

 incluyendo la siguiente información.
\end_layout

\begin_layout Itemize
Qué estabas haciendo.
\end_layout

\begin_layout Itemize
El comportamiento observado.
\end_layout

\begin_layout Itemize
Los mensajes de error o advertencia obtenidos.
\end_layout

\begin_layout Itemize
Versiones de Freeplane y de java.
\end_layout

\begin_layout Itemize
Sistema operativo.
\end_layout

\begin_layout Itemize
Secuencia de pasos para poder reproducir el error.
\end_layout

\begin_layout Itemize
Resultado obtenido de esos pasos.
\end_layout

\begin_layout Itemize
Resultado esperado.
\end_layout

\begin_layout Standard
Los principales componentes tienen su propio directorio dentro del código
 fuente.
 Así podemos encontrar:
\end_layout

\begin_layout Itemize
freeplane
\end_layout

\begin_layout Itemize
freeplane_ant
\end_layout

\begin_layout Itemize
freeplane_api
\end_layout

\begin_layout Itemize
freeplane_debughelper
\end_layout

\begin_layout Itemize
freeplane_framework
\end_layout

\begin_layout Itemize
freeplane_mac
\end_layout

\begin_layout Itemize
freeplane_plugin_bugreport
\end_layout

\begin_layout Itemize
freeplane_plugin_formula
\end_layout

\begin_layout Itemize
freeplane_plugin_jsyntaxpane
\end_layout

\begin_layout Itemize
freeplane_plugin_latex
\end_layout

\begin_layout Itemize
freeplane_plugin_openmaps
\end_layout

\begin_layout Itemize
freeplane_plugin_script
\end_layout

\begin_layout Itemize
freeplane_plugin_script_test
\end_layout

\begin_layout Itemize
freeplane_plugin_svg 
\end_layout

\begin_layout Section
Qué necesitaremos
\end_layout

\begin_layout Standard
Si tenemos claro que queremos meternos de lleno en las tripas de Freeplane
 necesitaremos los siguientes elementos:
\end_layout

\begin_layout Itemize
Un entorno de desarrollo como eclipse, netbeans o IntelliJ Idea.
\end_layout

\begin_layout Itemize
Un entorno de desarrollo de java, JDK.
\end_layout

\begin_layout Itemize
Git.
\end_layout

\begin_layout Itemize
Gradle.
\end_layout

\begin_layout Itemize
Cuenta de Github.
\end_layout

\begin_layout Itemize
Diversos plugins para nuestro entorno de desarrollo (groovy, git, gradle...).
\end_layout

\begin_layout Standard
Los pasos básicos comprenden: 
\end_layout

\begin_layout Itemize
Instalación de todo esto, incluyendo el entorno de desarrollo, JDK, git,
 gradle y demás elementos.
 
\end_layout

\begin_layout Itemize
Descarga del código más reciente del repositorio general.
\end_layout

\begin_layout Itemize
Crear una rama para nuestro código.
\end_layout

\begin_layout Itemize
Realizar el desarrollo.
\end_layout

\begin_layout Itemize
Mezclarlo con la rama general y subirlo al repositorio.
\end_layout

\begin_layout Section
Obteniendo el código más reciente.
\end_layout

\begin_layout Standard
El equipo que desarrolla Freeplane utiliza git como sistema de control de
 versiones y trabajo colaborativo.
 Por lo tanto es imprescindible tener un conocimiento básico de este sistema
 para poder comenzar el proceso pues es la puerta de acceso al código así
 como la base de todo el desarrollo.
 Lógicamente, para trabajar de forma colaborativa con el resto de los desarrolla
dores es imprescindible el uso ágil de este sistema de versiones.
 Los pasos básicos de todo el desarrollo son los siguientes:
\end_layout

\begin_layout Enumerate
Instalación de git en nuestro equipo.
 Podemos obtenerlo de 
\begin_inset CommandInset href
LatexCommand href
name "git"
target "https://git-scm.com/downloads"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
Configurar nuestro usuario y correo globales que se usarán cuando comencemos
 a utilizarlo.
\end_layout

\begin_layout Enumerate
Crear un repositorio local.
\end_layout

\begin_layout Enumerate
Descargarlos una copia del repositorio remoto en github.
\end_layout

\begin_layout Enumerate
Hacer un 
\lang english
build
\lang spanish
 desde gradle para generar el proyecto.
\end_layout

\begin_layout Enumerate
Crear con git una rama local para trabajar nosotros.
\end_layout

\begin_layout Enumerate
Realizar el desarrollo que deseemos.
 Configurar en git qué ficheros añadimos o borramos.
\end_layout

\begin_layout Enumerate
Enviar nuestra rama al repositorio global.
\end_layout

\begin_layout Enumerate
Comprobar si hay desarrollos posteriores de otros compañeros en el repositorio
 y descargarlos en nuestra copia local.
\end_layout

\begin_layout Enumerate
Cuando finalices el desarrollo local debes unir tu rama con la rama principal
 y enviarla al repositorio remoto.
\end_layout

\begin_layout Standard
Existe una guía oficial en español sobre git que puedes obtener en su sitio
 web dentro de 
\lang english
documentation, book
\lang spanish
 y seleccionando Español como idioma.
 Podrás descargarlo en formato pdf o leerla directamente de su sitio web.
\end_layout

\begin_layout Section
Importándolo
\end_layout

\begin_layout Standard
Según el 
\begin_inset CommandInset href
LatexCommand href
name "mensaje del foro"
target "https://sourceforge.net/p/freeplane/discussion/758437/thread/3bab009d/?limit=25#d1ef"
literal "false"

\end_inset

, las instrucciones para importarlo como proyecto de gradle son las siguientes:
\end_layout

\begin_layout Itemize
Download Freeplane source and extract to a directory freeplane_src
\end_layout

\begin_layout Itemize
Click/select File > Import > Gradle Project > Next > Next
\end_layout

\begin_layout Itemize
Specify the path to the freeplane_src directory in 'Project root directory'
 and click Finish.
 All projects are now imported as Gradle projects
\end_layout

\begin_layout Itemize
Delete freeplane_ant and freeplane_mac, close all other imported projects
 except for freeplane_src (i.e.
 the project for te main freeplane_src directory)
\end_layout

\begin_layout Itemize
Click/select Run > Run configurations
\end_layout

\begin_layout Itemize
Create a new Gradle project, e.g.
 'freeplane_src - clean build cleanEclipse eclipse
\end_layout

\begin_layout Itemize
In Gradle Tasks enter: clean build cleanEclipse eclipse'
\end_layout

\begin_layout Itemize
Click/select Workspace...
 > freeplane_src > OK
\end_layout

\begin_layout Itemize
Click Run and wait till Gradle build has finished
\end_layout

\begin_layout Itemize
Now open all closed projects and guess what: they are now Java projects.
\end_layout

\begin_layout Standard
Además, otras ideas del foro: Specifically for Freeplane development you
 can generate eclipse projects using gradle command gradle clean build cleanEcli
pse eclipse
\end_layout

\begin_layout Standard
and use preconfigured launch configurations for debugging.
 Unfortunately we have not created such projects and configurations for
 IntelliJ, so eclipse is the only tool of the choice.
 Yes, you have a burden of downloading and installing the tools preferable
 in the right versions (for eclipse I recommend "eclipse for eclipse developers"
), but using them you follow standard path and can get support from big
 communities.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Section
Comenzando el desarrollo.
\end_layout

\begin_layout Standard
El proyecto utiliza como constructor gradle que es un de automatización
 de construcción de código.
 Ha sido diseñado para proyectos grandes y nos permite modificaciones incrementa
les.
 Determina qué parte del código ha cambiado y sus dependencias para determinar
 qué tareas son necesarias para la construcción del sistema.
\end_layout

\begin_layout Standard
Lo primero que tenemos que hacer una vez descargado el código del repositorio
 principal es lanzar el 
\lang english
builder
\lang spanish
 de gradle para generar el proyecto.
\end_layout

\begin_layout Standard
Al principio se recomienda tratando de resolver 
\lang english
bugs
\lang spanish
 sencillos y desde ahí ir aumentando la complejidad.
 Sin embargo, a la hora de mezclar nuestra rama con la master conviene consultar
 a algún desarrollador experimentado, sobre todo al principio.
\end_layout

\begin_layout Standard
Los desarrolladores utilizan una 
\begin_inset CommandInset href
LatexCommand href
name " lista de correo interna"
target "http://freeplane-developer.996965.n3.nabble.com/"
literal "false"

\end_inset

.
 Si deseamos colaborar activamente tendremos que registrarnos y presentarnos.
 Es un buen sitio para decir en qué estamos trabajando.
\end_layout

\begin_layout Part
Apéndices
\end_layout

\begin_layout Chapter
Glosario
\end_layout

\begin_layout Description
Alias: Se ha especificado un alias para el nodo en la ventana de configurar
 referencia del nodo.
 Figura: 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configurar-la-referencia"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Atributos: Características o variables que podemos añadir a un nodo.
 Tienen un nombre y un valor.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Borde: Conexión entre una idea y las subideas que parten de ella.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Colapsar
\begin_inset space ~
\end_inset

un
\begin_inset space ~
\end_inset

nodo: Pinchar en el círculo de expansión de un nodo para que se oculten
 sus hijos.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Circulos-para-expandir"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Conector: Conexión entre nodos arbitrarios del mapa.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Enlace: Unión a un recurso interno o externo que se añade a un nodo.
 En particular, los hiperenlaces se añaden a los nodos para que, al pinchar
 sobre ellos nos lleven a recursos de la Web.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Estilo: Conjunto de formatos a los que ponemos un nombre.
\end_layout

\begin_layout Description
Estilo
\begin_inset space ~
\end_inset

predefinido: Estilo que viene incluido en la aplicación
\end_layout

\begin_layout Description
Estilo
\begin_inset space ~
\end_inset

definido
\begin_inset space ~
\end_inset

por
\begin_inset space ~
\end_inset

el
\begin_inset space ~
\end_inset

usuario: Estilo creado por el usuario.
\end_layout

\begin_layout Description
Expandir
\begin_inset space ~
\end_inset

un
\begin_inset space ~
\end_inset

nodo: Pinchar en el círculo de expansión que muestra freeplane en los nodos
 de forma que se muestren sus hijos.
\end_layout

\begin_layout Description
Exportar: Guardar el mapa en un formato distinto al de Freeplane para que
 pueda ser utilizado por otras aplicaciones.
\end_layout

\begin_layout Description
Filtro: Condición de búsqueda que crea el usuario para buscar nodos coincidentes
 con dichos criterios.
\end_layout

\begin_layout Description
Fórmula: Expresión que calcula freeplane de forma dinámica.
 Puede incluir referencias a otros nodos, operadores aritméticos, funciones
 matemáticas y funciones de listas como las del apartado 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Métodos-usados-con-closures"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Formato: Apariencia del elemento del mapa que podemos configurar de forma
 estática.
\end_layout

\begin_layout Description
Formato
\begin_inset space ~
\end_inset

condicional: Apariencia dinámica del nodo que Freplane modifica en función
 de otros elementos.
\end_layout

\begin_layout Description
Formato
\begin_inset space ~
\end_inset

directo: Aquel formato que aplicamos a un nodo de forma manual
\end_layout

\begin_layout Description
Formato
\begin_inset space ~
\end_inset

automático: Formato que asigna Freeplane en función de la ubicación de un
 nodo en el mapa
\end_layout

\begin_layout Description
Groovy: Lenguaje de programación.
\end_layout

\begin_layout Description
Icono: Pequeño dibujo que añadimos a los nodos y que aparece antes de su
 texto.
 Figura: 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-nodos"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Idea: Palabras que muestran los conceptos que deseamos añadir a nuestros
 mapas.
\end_layout

\begin_layout Description
Idea
\begin_inset space ~
\end_inset

central: Concepto ó idea principal que se coloca en el centro del mapa que
 muestra el asunto que deseamos analizar.
\end_layout

\begin_layout Description
Importar: Introducir información en un mapa procedente de otra aplicación.
\end_layout

\begin_layout Description
Latex: Sistema de composición de textos orientado a la creación de documentos
 de alta calidad tipográfica.
\end_layout

\begin_layout Description
Mapa
\begin_inset space ~
\end_inset

condeptual: Diagrama en forma de red de conceptos que muestra la relación
 que existe entre ellos.
\end_layout

\begin_layout Description
Mapa
\begin_inset space ~
\end_inset

mental: Diagrama circular que parte de una idea central a partir de la cual
 se van añadiendo otras radialmente.
\end_layout

\begin_layout Description
Nodo: Cada uno de los puntos fijos en el mapa mental y que se deriva de
 la idea central.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

..
\end_layout

\begin_layout Description
Nodos
\begin_inset space ~
\end_inset

clon: Nodos que realmente son el mismo nodo.
 Cualquier cambio en uno de ellos modifica todos los demás.
 Alterar la estructura o borrar uno de ellos lo haría en el resto.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

gobal: Nodo marcado como global en la ventana de configurar referencia del
 nodo (ver figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configurar-la-referencia"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Description
Nodos
\begin_inset space ~
\end_inset

hermanos: Aquellos nodos que comparten el nodo padre.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

hijo: Nodo que parte de otro más importante.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

padre: Aquel nodo del que parten
\begin_inset space ~
\end_inset

 nuevos enlaces.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nodo
\begin_inset space ~
\end_inset

raíz: Nodo ó idea central a partir de la que surgen todas las demás.
 Tema fundamental del mapa.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nodos
\begin_inset space ~
\end_inset

sumario: Agrupan varios nodos hermanos en uno Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nota: Texto complejo que podemos añadir a un nodo.
 Contiene explicaciones, aclaraciones o textos largos en formato HTML.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elementos-mapa"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Nube: Recuadro sombreado alrededor de un grupo de nodos.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tipos-de-nubes"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Plantilla: Conjunto de estilos, nodos, bordes y formatos de un mapa que
 guardamos en el directorio del usuario.
\end_layout

\begin_layout Description
Presentación: Conjunto de diapositivas que contienen información sobre un
 tema.
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Generar-presentaciones"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
Ramas: Líneas que conectan una serie de ideas dependientes.
\end_layout

\begin_layout Description
Script: Código que podemos incluir en Freeplane para automatizar tareas.
 El lenguaje nativo de Freeplane es Groovy aunque también podemos añadir
 librerías para poder utilizar otros lenguajes.
\end_layout

\begin_layout Standard
Nota: No se incluye en el glosario los conceptos de groovy tales como listas,
 sentencias o closures.
\end_layout

\end_body
\end_document
